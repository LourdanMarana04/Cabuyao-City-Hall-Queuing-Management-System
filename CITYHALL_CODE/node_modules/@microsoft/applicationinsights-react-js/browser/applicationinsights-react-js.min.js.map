{"version":3,"file":"applicationinsights-react-js.min.js","sources":["../../common/temp/node_modules/@microsoft/applicationinsights-shims/dist-es5/Constants.js","../../common/temp/node_modules/@nevware21/ts-utils/dist/es5/mod/ts-utils.js","../../common/temp/node_modules/@microsoft/applicationinsights-shims/dist-es5/TsLibShims.js","../../common/temp/node_modules/@microsoft/dynamicproto-js/dist-es5/DynamicProto.js","../../common/temp/node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK.Enums/EnumHelperFuncs.js","../../common/temp/node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/AggregationError.js","../../common/temp/node_modules/@microsoft/applicationinsights-core-js/dist-es5/__DynamicConstants.js","../../common/temp/node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/InternalConstants.js","../../common/temp/node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/HelperFuncs.js","../../common/temp/node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/EnvUtils.js","../../common/temp/node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/RandomHelper.js","../../common/temp/node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/DataCacheHelper.js","../../common/temp/node_modules/@microsoft/applicationinsights-core-js/dist-es5/Config/ConfigDefaults.js","../../common/temp/node_modules/@microsoft/applicationinsights-core-js/dist-es5/Config/DynamicSupport.js","../../common/temp/node_modules/@microsoft/applicationinsights-core-js/dist-es5/Config/DynamicProperty.js","../../common/temp/node_modules/@microsoft/applicationinsights-core-js/dist-es5/Config/DynamicState.js","../../common/temp/node_modules/@microsoft/applicationinsights-core-js/dist-es5/Config/DynamicConfig.js","../../common/temp/node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/DbgExtensionUtils.js","../../common/temp/node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/DiagnosticLogger.js","../../common/temp/node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/CookieMgr.js","../../common/temp/node_modules/@microsoft/applicationinsights-core-js/dist-es5/Config/ConfigDefaultHelpers.js","../../common/temp/node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/PerfManager.js","../../common/temp/node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/TelemetryHelpers.js","../../common/temp/node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/ProcessTelemetryContext.js","../../common/temp/node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/UnloadHandlerContainer.js","../../common/temp/node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/UnloadHookContainer.js","../../common/temp/node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/BaseTelemetryPlugin.js","../../common/temp/node_modules/@microsoft/applicationinsights-common/dist-es5/Interfaces/Contracts/SeverityLevel.js","../dist-esm/ReactPlugin.js","../../common/temp/node_modules/@microsoft/applicationinsights-common/dist-es5/applicationinsights-common.js","../dist-esm/withAITracking.js","../dist-esm/AppInsightsErrorBoundary.js","../dist-esm/AppInsightsContext.js","../dist-esm/useTrackEvent.js","../dist-esm/useTrackMetric.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var strShimFunction = \"function\";\r\nexport var strShimObject = \"object\";\r\nexport var strShimUndefined = \"undefined\";\r\nexport var strShimPrototype = \"prototype\";\r\nexport var strDefault = \"default\";\r\nexport var ObjClass = Object;\r\nexport var ObjProto = ObjClass[strShimPrototype];\r\n//# sourceMappingURL=Constants.js.map","/*! https://github.com/nevware21/ts-utils v0.12.2 */\n/*\n * Copyright (c) NevWare21 Solutions LLC and contributors. All rights reserved.\n * Licensed under the MIT license.\n */\n/*#__NO_SIDE_EFFECTS__*/\nfunction _pureAssign(func1, func2) {\n    return func1 || func2;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _pureRef(value, name) {\n    return value[name];\n}\n\nvar UNDEF_VALUE = undefined;\nvar NULL_VALUE = null;\nvar EMPTY = \"\";\nvar FUNCTION = \"function\";\nvar OBJECT = \"object\";\nvar PROTOTYPE = \"prototype\";\nvar __PROTO__ = \"__proto__\";\nvar UNDEFINED = \"undefined\";\nvar CONSTRUCTOR = \"constructor\";\nvar SYMBOL = \"Symbol\";\nvar LENGTH = \"length\";\nvar NAME = \"name\";\nvar CALL = \"call\";\nvar TO_STRING = \"toString\";\nvar ObjClass = ( /*#__PURE__*/_pureAssign(Object));\nvar ObjProto = ( /*#__PURE__*/_pureRef(ObjClass, PROTOTYPE));\nvar StrCls = ( /*#__PURE__*/_pureAssign(String));\nvar StrProto = ( /*#__PURE__*/_pureRef(StrCls, PROTOTYPE));\nvar MathCls = ( /*#__PURE__*/_pureAssign(Math));\nvar ArrCls = ( /*#__PURE__*/_pureAssign(Array));\nvar ArrProto = ( /*#__PURE__*/_pureRef(ArrCls, PROTOTYPE));\nvar ArrSlice = ( /*#__PURE__*/_pureRef(ArrProto, \"slice\"));\nvar NumberCls = ( /*#__PURE__*/_pureAssign(Number));\n\nvar POLYFILL_TAG = \"_polyfill\";\nvar POLYFILL_TYPE_NAME = \"__nw21$polytype__\";\nfunction _isPolyfill(obj) {\n    return !!(obj && obj[POLYFILL_TAG]);\n}\nfunction _isPolyfillType(obj, polyfillTypeName) {\n    return !!(obj && obj[POLYFILL_TYPE_NAME] === polyfillTypeName);\n}\n\nfunction safe(func, argArray) {\n    try {\n        return {\n            v: func.apply(this, argArray)\n        };\n    }\n    catch (e) {\n        return { e: e };\n    }\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction safeGet(cb, defValue) {\n    var result = safe(cb);\n    return result.e ? defValue : result.v;\n}\n\nvar _primitiveTypes;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createIs(theType) {\n    return function (value) {\n        return typeof value === theType;\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createIsWithPoly(theType) {\n    return function (value) {\n        return typeof value === theType || _isPolyfillType(value, theType);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createObjIs(theName) {\n    var theType = \"[object \" + theName + \"]\";\n    return function (value) {\n        return !!(value && objToString(value) === theType);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction objToString(value) {\n    return ObjProto[TO_STRING].call(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isTypeof(value, theType) {\n    return typeof value === theType;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isUndefined(value) {\n    return typeof value === UNDEFINED || value === UNDEFINED;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isStrictUndefined(arg) {\n    return arg === UNDEF_VALUE;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isNullOrUndefined(value) {\n    return value === NULL_VALUE || isUndefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isStrictNullOrUndefined(value) {\n    return value === NULL_VALUE || value === UNDEF_VALUE;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isDefined(arg) {\n    return !!arg || arg !== UNDEF_VALUE;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPrimitive(value) {\n    return value === NULL_VALUE || isPrimitiveType(typeof value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPrimitiveType(theType) {\n    !_primitiveTypes && (_primitiveTypes = [\"string\", \"number\", \"boolean\", UNDEFINED, \"symbol\", \"bigint\"]);\n    return !!(theType !== OBJECT && _primitiveTypes.indexOf(theType) !== -1);\n}\nvar isString = ( /*#__PURE__*/_createIs(\"string\"));\nvar isFunction = ( /*#__PURE__*/_createIs(FUNCTION));\n/*#__NO_SIDE_EFFECTS__*/\nfunction isObject(value) {\n    if (!value && isNullOrUndefined(value)) {\n        return false;\n    }\n    return !!value && typeof value === OBJECT;\n}\nvar isArray = ( /* #__PURE__*/_pureRef(ArrCls, \"isArray\"));\nvar isDate = ( /*#__PURE__*/_createObjIs(\"Date\"));\nvar isNumber = ( /*#__PURE__*/_createIs(\"number\"));\nvar isBoolean = ( /*#__PURE__*/_createIs(\"boolean\"));\nvar isRegExp = ( /*#__PURE__*/_createObjIs(\"RegExp\"));\nvar isFile = ( /*#__PURE__*/_createObjIs(\"File\"));\nvar isFormData = ( /*#__PURE__*/_createObjIs(\"FormData\"));\nvar isBlob = ( /*#__PURE__*/_createObjIs(\"Blob\"));\nvar isArrayBuffer = ( /*#__PURE__*/_createObjIs(\"ArrayBuffer\"));\nvar isError = ( /*#__PURE__*/_createObjIs(\"Error\"));\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPromiseLike(value) {\n    return !!(value && value.then && isFunction(value.then));\n}\nvar isThenable = isPromiseLike;\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPromise(value) {\n    return !!(value && value.then && value.catch && isFunction(value.then) && isFunction(value.catch));\n}\nvar isMap = ( /*#__PURE__*/_createObjIs(\"Map\"));\nvar isWeakMap = ( /*#__PURE__*/_createObjIs(\"WeakMap\"));\nvar isSet = ( /*#__PURE__*/_createObjIs(\"Set\"));\nvar isWeakSet = ( /*#__PURE__*/_createObjIs(\"WeakSet\"));\n/*#__NO_SIDE_EFFECTS__*/\nfunction isMapLike(value) {\n    return !!(value &&\n        isFunction(value.get) &&\n        isFunction(value.set) &&\n        isFunction(value.has) &&\n        isFunction(value.delete) &&\n        isNumber(value.size));\n}\nfunction isSetLike(value) {\n    return !!(value &&\n        isFunction(value.add) &&\n        isFunction(value.has) &&\n        isFunction(value.delete) &&\n        isNumber(value.size));\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isNotTruthy(value) {\n    return !value || !isTruthy(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isTruthy(value) {\n    return !(!value || safeGet(function () { return !(value && (0 + value)); }, !value));\n}\nvar isBigInt = ( /*#__PURE__*/_createIsWithPoly(\"bigint\"));\n\nvar asString = ( /* #__PURE__ */_pureAssign(StrCls));\n\nvar ERROR_TYPE = \"[object Error]\";\n/*#__NO_SIDE_EFFECTS__*/\nfunction dumpObj(object, format) {\n    var propertyValueDump = EMPTY;\n    var objType = ObjProto[TO_STRING][CALL](object);\n    if (objType === ERROR_TYPE) {\n        object = { stack: asString(object.stack), message: asString(object.message), name: asString(object.name) };\n    }\n    try {\n        propertyValueDump = JSON.stringify(object, NULL_VALUE, format ? ((typeof format === \"number\") ? format : 4) : UNDEF_VALUE);\n        propertyValueDump = (propertyValueDump ? propertyValueDump.replace(/\"(\\w+)\"\\s*:\\s{0,1}/g, \"$1: \") : NULL_VALUE) || asString(object);\n    }\n    catch (e) {\n        propertyValueDump = \" - \" + dumpObj(e, format);\n    }\n    return objType + \": \" + propertyValueDump;\n}\n\nfunction throwError(message) {\n    throw new Error(message);\n}\nfunction throwTypeError(message) {\n    throw new TypeError(message);\n}\nfunction throwRangeError(message) {\n    throw new RangeError(message);\n}\n\nfunction _throwIfNullOrUndefined(obj) {\n    if (isStrictNullOrUndefined(obj)) {\n        throwTypeError(\"Cannot convert undefined or null to object\");\n    }\n}\nfunction _throwIfNotString(value) {\n    if (!isString(value)) {\n        throwTypeError(\"'\" + dumpObj(value) + \"' is not a string\");\n    }\n}\n\nfunction _returnNothing() {\n    return UNDEF_VALUE;\n}\nvar objGetOwnPropertyDescriptor = ( /* #__PURE__ */_pureAssign(( /* #__PURE__ */_pureRef(ObjClass, \"getOwnPropertyDescriptor\")), _returnNothing));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction objHasOwnProperty(obj, prop) {\n    return !!obj && ObjProto.hasOwnProperty[CALL](obj, prop);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjHasOwn(obj, prop) {\n    _throwIfNullOrUndefined(obj);\n    return objHasOwnProperty(obj, prop) || !!objGetOwnPropertyDescriptor(obj, prop);\n}\n\nvar objHasOwn = ( /*#__PURE__*/_pureAssign(( /* #__PURE__ */_pureRef(ObjClass, \"hasOwn\")), polyObjHasOwn));\n\nfunction objForEachKey(theObject, callbackfn, thisArg) {\n    if (theObject && (isObject(theObject) || isFunction(theObject))) {\n        for (var prop in theObject) {\n            if (objHasOwn(theObject, prop)) {\n                if (callbackfn[CALL](thisArg || theObject, prop, theObject[prop]) === -1) {\n                    break;\n                }\n            }\n        }\n    }\n}\n\nvar objGetOwnPropertySymbols = ( /* #__PURE__*/_pureAssign(( /* #__PURE__ */_pureRef(ObjClass, \"getOwnPropertySymbols\")), function () { return []; }));\n\nfunction arrForEach(theArray, callbackfn, thisArg) {\n    if (theArray) {\n        var len = theArray[LENGTH] >>> 0;\n        for (var idx = 0; idx < len; idx++) {\n            if (idx in theArray) {\n                if (callbackfn[CALL](thisArg || theArray, theArray[idx], idx, theArray) === -1) {\n                    break;\n                }\n            }\n        }\n    }\n}\n\nvar _unwrapFunction = ( _unwrapFunctionWithPoly);\n/*#__NO_SIDE_EFFECTS__*/\nfunction _unwrapFunctionWithPoly(funcName, clsProto, polyFunc) {\n    var clsFn = clsProto ? clsProto[funcName] : NULL_VALUE;\n    return function (thisArg) {\n        var theFunc = (thisArg ? thisArg[funcName] : NULL_VALUE) || clsFn;\n        if (theFunc || polyFunc) {\n            var theArgs = arguments;\n            return (theFunc || polyFunc).apply(thisArg, theFunc ? ArrSlice[CALL](theArgs, 1) : theArgs);\n        }\n        throwTypeError(\"\\\"\" + asString(funcName) + \"\\\" not defined for \" + dumpObj(thisArg));\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _unwrapProp(propName) {\n    return function (thisArg) {\n        return thisArg[propName];\n    };\n}\n\nfunction _objPropertyIsEnum(obj, propKey) {\n    var desc;\n    var fn = ObjClass.getOwnPropertyDescriptor;\n    if (!isStrictNullOrUndefined(obj) && fn) {\n        desc = safe(fn, [obj, propKey]).v || NULL_VALUE;\n    }\n    if (!desc) {\n        desc = safe(function () {\n            for (var key in obj) {\n                if (key === propKey) {\n                    return { enumerable: true };\n                }\n            }\n        }).v;\n    }\n    return (desc && desc.enumerable) || false;\n}\nvar objPropertyIsEnumerable = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"propertyIsEnumerable\", NULL_VALUE, _objPropertyIsEnum));\n\nvar propMap = {\n    e: \"enumerable\",\n    c: \"configurable\",\n    v: \"value\",\n    w: \"writable\",\n    g: \"get\",\n    s: \"set\"\n};\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createProp(value) {\n    var prop = {};\n    prop[propMap[\"c\"]] = true;\n    prop[propMap[\"e\"]] = true;\n    if (value.l) {\n        prop.get = function () { return value.l.v; };\n        var desc = objGetOwnPropertyDescriptor(value.l, \"v\");\n        if (desc && desc.set) {\n            prop.set = function (newValue) {\n                value.l.v = newValue;\n            };\n        }\n    }\n    objForEachKey(value, function (key, value) {\n        prop[propMap[key]] = isStrictUndefined(value) ? prop[propMap[key]] : value;\n    });\n    return prop;\n}\nvar objDefineProp = ( /*#__PURE__*/_pureRef(ObjClass, \"defineProperty\"));\nvar objDefineProperties = ( /*#__PURE__*/_pureRef(ObjClass, \"defineProperties\"));\nfunction objDefineGet(target, key, value, configurable, enumerable) {\n    var _a;\n    return objDefineProp(target, key, _createProp((_a = {\n            e: enumerable,\n            c: configurable\n        },\n        _a[isFunction(value) ? \"g\" : \"v\"] = value,\n        _a)));\n}\nfunction objDefineAccessors(target, prop, getProp, setProp, configurable, enumerable) {\n    var desc = {\n        e: enumerable,\n        c: configurable\n    };\n    if (getProp) {\n        desc.g = getProp;\n    }\n    if (setProp) {\n        desc.s = setProp;\n    }\n    return objDefineProp(target, prop, _createProp(desc));\n}\nfunction objDefine(target, key, propDesc) {\n    return objDefineProp(target, key, _createProp(propDesc));\n}\nfunction objDefineProps(target, propDescMap) {\n    var props = {};\n    objForEachKey(propDescMap, function (key, value) {\n        props[key] = _createProp(value);\n    });\n    arrForEach(objGetOwnPropertySymbols(propDescMap), function (sym) {\n        if (objPropertyIsEnumerable(propDescMap, sym)) {\n            props[sym] = _createProp(propDescMap[sym]);\n        }\n    });\n    return objDefineProperties(target, props);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createKeyValueMap(values, keyType, valueType, completeFn, writable) {\n    var theMap = {};\n    objForEachKey(values, function (key, value) {\n        _assignMapValue(theMap, key, keyType ? value : key);\n        _assignMapValue(theMap, value, valueType ? value : key);\n    });\n    return completeFn ? completeFn(theMap) : theMap;\n}\nfunction _assignMapValue(theMap, key, value, writable) {\n    objDefineProp(theMap, key, {\n        value: value,\n        enumerable: true,\n        writable: false\n    });\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjEntries(value) {\n    var result = [];\n    objForEachKey(value, function (key, value) {\n        result.push([key, value]);\n    });\n    return result;\n}\n\nfunction polyObjIs(value1, value2) {\n    if (value1 !== value1) {\n        return value2 !== value2;\n    }\n    if (value1 === 0 && value2 === 0) {\n        return 1 / value1 === 1 / value2;\n    }\n    return value1 === value2;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjValues(value) {\n    var result = [];\n    objForEachKey(value, function (key, value) {\n        result.push(value);\n    });\n    return result;\n}\n\nfunction _returnFalse() {\n    return false;\n}\nvar objIsFrozen = ( /* #__PURE__*/_pureAssign(( /* #__PURE__ */_pureRef(ObjClass, \"isFrozen\")), _returnFalse));\nvar objIsSealed = ( /* #__PURE__*/_pureAssign(( /* #__PURE__ */_pureRef(ObjClass, \"isSealed\")), _returnFalse));\n\nvar _objFreeze = ( /* #__PURE__ */_pureRef(ObjClass, \"freeze\"));\nfunction _doNothing(value) {\n    return value;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getProto(value) {\n    _throwIfNullOrUndefined(value);\n    return value[__PROTO__] || NULL_VALUE;\n}\nvar objAssign = ( /*#__PURE__*/_pureRef(ObjClass, \"assign\"));\nvar objKeys = ( /*#__PURE__*/_pureRef(ObjClass, \"keys\"));\nfunction _deepFreeze(val, visited) {\n    if ((isArray(val) || isObject(val) || isFunction(val)) && !objIsFrozen(val)) {\n        for (var lp = 0; lp < visited.length; lp++) {\n            if (visited[lp] === val) {\n                return val;\n            }\n        }\n        visited.push(val);\n        objForEachKey(val, function (_key, propValue) {\n            _deepFreeze(propValue, visited);\n        });\n        objFreeze(val);\n    }\n    return val;\n}\nfunction objDeepFreeze(value) {\n    return _objFreeze ? _deepFreeze(value, []) : value;\n}\nvar objFreeze = ( /* #__PURE__*/_pureAssign(_objFreeze, _doNothing));\nvar objSeal = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"seal\")), _doNothing));\nvar objGetPrototypeOf = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"getPrototypeOf\")), _getProto));\nvar objEntries = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"entries\")), polyObjEntries));\nvar objValues = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"values\")), polyObjValues));\nvar objIs = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"is\")), polyObjIs));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnum(values) {\n    return _createKeyValueMap(values, 1 , 0 , objFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnumKeyMap(values) {\n    return _createKeyValueMap(values, 0 , 0 , objFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnumValueMap(values) {\n    return _createKeyValueMap(values, 1 , 1 , objFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createSimpleMap(values) {\n    var mapClass = {};\n    objForEachKey(values, function (key, value) {\n        _assignMapValue(mapClass, key, value[1]);\n        _assignMapValue(mapClass, value[0], value[1]);\n    });\n    return objFreeze(mapClass);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createTypeMap(values) {\n    return createSimpleMap(values);\n}\n\nvar _wellKnownSymbolMap = /*#__PURE__*/ createEnumKeyMap({\n    asyncIterator: 0 ,\n    hasInstance: 1 ,\n    isConcatSpreadable: 2 ,\n    iterator: 3 ,\n    match: 4 ,\n    matchAll: 5 ,\n    replace: 6 ,\n    search: 7 ,\n    species: 8 ,\n    split: 9 ,\n    toPrimitive: 10 ,\n    toStringTag: 11 ,\n    unscopables: 12\n});\n\nvar GLOBAL_CONFIG_KEY = \"__tsUtils$gblCfg\";\nvar _globalCfg;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getGlobalValue() {\n    var result;\n    if (typeof globalThis !== UNDEFINED) {\n        result = globalThis;\n    }\n    if (!result && typeof self !== UNDEFINED) {\n        result = self;\n    }\n    if (!result && typeof window !== UNDEFINED) {\n        result = window;\n    }\n    if (!result && typeof global !== UNDEFINED) {\n        result = global;\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getGlobalConfig() {\n    if (!_globalCfg) {\n        var gbl = safe(_getGlobalValue).v || {};\n        _globalCfg = gbl[GLOBAL_CONFIG_KEY] = gbl[GLOBAL_CONFIG_KEY] || {};\n    }\n    return _globalCfg;\n}\n\nvar mathMin = ( /*#__PURE__*/_pureRef(MathCls, \"min\"));\nvar mathMax = ( /*#__PURE__*/_pureRef(MathCls, \"max\"));\n\nvar strSlice = ( /*#__PURE__*/_unwrapFunction(\"slice\", StrProto));\n\nvar strSubstring = ( /*#__PURE__*/_unwrapFunction(\"substring\", StrProto));\nvar strSubstr = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"substr\", StrProto, polyStrSubstr));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrSubstr(value, start, length) {\n    _throwIfNullOrUndefined(value);\n    if (length < 0) {\n        return EMPTY;\n    }\n    start = start || 0;\n    if (start < 0) {\n        start = mathMax(start + value[LENGTH], 0);\n    }\n    if (isUndefined(length)) {\n        return strSlice(value, start);\n    }\n    return strSlice(value, start, start + length);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strLeft(value, count) {\n    return strSubstring(value, 0, count);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strRight(value, count) {\n    return count <= 0 ? EMPTY : (value[LENGTH] > count ? strSlice(value, -count) : value);\n}\n\nfunction _tagAsPolyfill(target, polyfillTypeName) {\n    if (target) {\n        safe(function () {\n            target[POLYFILL_TAG] = true;\n            target[POLYFILL_TYPE_NAME] = polyfillTypeName;\n        });\n        safe(objDefine, [target, POLYFILL_TAG, {\n                v: true,\n                w: false,\n                e: false\n            }]);\n        safe(objDefine, [target, POLYFILL_TYPE_NAME, {\n                v: polyfillTypeName,\n                w: false,\n                e: false\n            }]);\n    }\n    return target;\n}\n\nvar objCreate = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"create\")), polyObjCreate));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjCreate(obj, properties) {\n    var newObj = null;\n    function tempFunc() { }\n    if (!isStrictNullOrUndefined(obj)) {\n        var type = typeof obj;\n        if (type !== OBJECT && type !== FUNCTION) {\n            throwTypeError(\"Prototype must be an Object or function: \" + dumpObj(obj));\n        }\n        tempFunc[PROTOTYPE] = obj;\n        safe(function () {\n            tempFunc[__PROTO__] = obj;\n        });\n        newObj = new tempFunc();\n    }\n    else {\n        newObj = {};\n    }\n    if (properties) {\n        safe(objDefineProperties, [newObj, properties]);\n    }\n    return newObj;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction utcNow() {\n    return (Date.now || polyUtcNow)();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyUtcNow() {\n    return new Date().getTime();\n}\n\nvar _globalLazyTestHooks;\nfunction _initTestHooks() {\n    _globalLazyTestHooks = _getGlobalConfig();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getLazy(cb) {\n    var lazyValue = {};\n    !_globalLazyTestHooks && _initTestHooks();\n    lazyValue.b = _globalLazyTestHooks.lzy;\n    objDefineProp(lazyValue, \"v\", {\n        configurable: true,\n        get: function () {\n            var result = cb();\n            if (!_globalLazyTestHooks.lzy) {\n                objDefineProp(lazyValue, \"v\", {\n                    value: result\n                });\n            }\n            lazyValue.b = _globalLazyTestHooks.lzy;\n            return result;\n        }\n    });\n    return lazyValue;\n}\nfunction setBypassLazyCache(newValue) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _globalLazyTestHooks.lzy = newValue;\n}\nfunction getWritableLazy(cb) {\n    var lazyValue = {};\n    !_globalLazyTestHooks && _initTestHooks();\n    lazyValue.b = _globalLazyTestHooks.lzy;\n    var _setValue = function (newValue) {\n        objDefineProp(lazyValue, \"v\", {\n            value: newValue,\n            writable: true\n        });\n        if (lazyValue.b) {\n            delete lazyValue.b;\n        }\n    };\n    objDefineProp(lazyValue, \"v\", {\n        configurable: true,\n        get: function () {\n            var result = cb();\n            if (!_globalLazyTestHooks.lzy) {\n                _setValue(result);\n            }\n            if (_globalLazyTestHooks.lzy && lazyValue.b !== _globalLazyTestHooks.lzy) {\n                lazyValue.b = _globalLazyTestHooks.lzy;\n            }\n            return result;\n        },\n        set: _setValue\n    });\n    return lazyValue;\n}\n\nvar mathRandom = ( /*#__PURE__*/_pureRef(MathCls, \"random\"));\n\nvar _uniqueInstanceId = ( /*#__PURE__*/getLazy(function () {\n    var value = (utcNow().toString(36).slice(2));\n    while (value.length < 16) {\n        value += mathRandom().toString(36).slice(2);\n    }\n    value = value.substring(0, 16);\n    return value;\n}));\n\nvar UNIQUE_REGISTRY_ID = \"_urid\";\nvar POLY_SYM = \"$nw21sym\";\nvar _polySymbols;\nvar _polyId = 0;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _globalSymbolRegistry() {\n    if (!_polySymbols) {\n        var gblCfg = _getGlobalConfig();\n        _polySymbols = gblCfg.gblSym = gblCfg.gblSym || { k: {}, s: {} };\n    }\n    return _polySymbols;\n}\nvar _wellKnownSymbolCache;\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyNewSymbol(description) {\n    var uniqueId = \"_\" + _polyId++ + \"_\" + _uniqueInstanceId.v;\n    var symString = SYMBOL + \"(\" + description + \")\";\n    function _setProp(name, value) {\n        objDefine(theSymbol, name, {\n            v: value,\n            e: false,\n            w: false\n        });\n    }\n    var theSymbol = objCreate(null);\n    _setProp(\"description\", asString(description));\n    _setProp(TO_STRING, function () { return symString + POLY_SYM + uniqueId; });\n    _setProp(\"valueOf\", function () { return theSymbol; });\n    _setProp(\"v\", symString);\n    _setProp(\"_uid\", uniqueId);\n    return _tagAsPolyfill(theSymbol, \"symbol\");\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polySymbolFor(key) {\n    var registry = _globalSymbolRegistry();\n    if (!objHasOwn(registry.k, key)) {\n        var newSymbol_1 = polyNewSymbol(key);\n        var regId_1 = objKeys(registry.s).length;\n        newSymbol_1[UNIQUE_REGISTRY_ID] = function () { return regId_1 + \"_\" + newSymbol_1[TO_STRING](); };\n        registry.k[key] = newSymbol_1;\n        registry.s[newSymbol_1[UNIQUE_REGISTRY_ID]()] = asString(key);\n    }\n    return registry.k[key];\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polySymbolKeyFor(sym) {\n    if (!sym || !sym[TO_STRING] || strSubstring(sym[TO_STRING](), 0, 6) != SYMBOL) {\n        throwTypeError(sym + \" is not a symbol\");\n    }\n    var regId = _isPolyfill(sym) && sym[UNIQUE_REGISTRY_ID] && sym[UNIQUE_REGISTRY_ID]();\n    return regId ? _globalSymbolRegistry().s[regId] : undefined;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyGetKnownSymbol(name) {\n    !_wellKnownSymbolCache && (_wellKnownSymbolCache = {});\n    var result;\n    var knownName = _wellKnownSymbolMap[name];\n    if (knownName) {\n        result = _wellKnownSymbolCache[knownName] = _wellKnownSymbolCache[knownName] || polyNewSymbol(SYMBOL + \".\" + knownName);\n    }\n    return result;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createCachedValue(value) {\n    return objDefineProp({\n        toJSON: function () { return value; }\n    }, \"v\", { value: value });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createDeferredCachedValue(cb) {\n    var theValue = {\n        toJSON: function () { return theValue.v; }\n    };\n    return objDefineProp(theValue, \"v\", {\n        get: function () {\n            var result = cb();\n            cb = NULL_VALUE;\n            objDefineProp(theValue, \"v\", { value: result });\n            return result;\n        },\n        configurable: true\n    });\n}\n\nvar WINDOW = \"window\";\nvar _cachedGlobal;\nfunction _getGlobalInstFn(getFn, theArgs) {\n    var cachedValue;\n    return function () {\n        !_globalLazyTestHooks && _initTestHooks();\n        if (!cachedValue || _globalLazyTestHooks.lzy) {\n            cachedValue = createCachedValue(safe(getFn, theArgs).v);\n        }\n        return cachedValue.v;\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction lazySafeGetInst(name) {\n    return getLazy(function () { return safe((getInst), [name]).v || UNDEF_VALUE; });\n}\nfunction getGlobal(useCached) {\n    !_globalLazyTestHooks && _initTestHooks();\n    if (!_cachedGlobal || useCached === false || _globalLazyTestHooks.lzy) {\n        _cachedGlobal = createCachedValue(safe(_getGlobalValue).v || NULL_VALUE);\n    }\n    return _cachedGlobal.v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getInst(name, useCached) {\n    var gbl;\n    if (!_cachedGlobal || useCached === false) {\n        gbl = getGlobal(useCached);\n    }\n    else {\n        gbl = _cachedGlobal.v;\n    }\n    if (gbl && gbl[name]) {\n        return gbl[name];\n    }\n    if (name === WINDOW) {\n        try {\n            return window;\n        }\n        catch (e) {\n        }\n    }\n    return NULL_VALUE;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasDocument() {\n    return !!( /*#__PURE__*/getDocument());\n}\nvar getDocument = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"document\"]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasWindow() {\n    return !!( /*#__PURE__*/getWindow());\n}\nvar getWindow = ( /*#__PURE__*/_getGlobalInstFn(getInst, [WINDOW]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasNavigator() {\n    return !!( /*#__PURE__*/getNavigator());\n}\nvar getNavigator = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"navigator\"]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasHistory() {\n    return !!( /*#__PURE__*/getHistory());\n}\nvar getHistory = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"history\"]));\nvar isNode = ( /*#__PURE__*/_getGlobalInstFn(function () {\n    return !!( /*#__PURE__*/safe(function () { return (process && (process.versions || {}).node); }).v);\n}));\nvar isWebWorker = ( /*#__PURE__*/_getGlobalInstFn(function () {\n    return !!( /*#__PURE__*/safe(function () { return self && self instanceof WorkerGlobalScope; }).v);\n}));\n\nvar _symbol;\nvar _symbolFor;\nvar _symbolKeyFor;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _initSymbol() {\n    _symbol = ( /*#__PURE__*/createCachedValue(safe((getInst), [SYMBOL]).v));\n    return _symbol;\n}\nfunction _getSymbolKey(key) {\n    var gblSym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return (gblSym.v ? gblSym.v[key] : UNDEF_VALUE);\n}\nvar isSymbol = ( /*#__PURE__*/_createIsWithPoly(\"symbol\"));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasSymbol() {\n    return !!( /*#__PURE__*/getSymbol());\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getSymbol() {\n    !_globalLazyTestHooks && _initTestHooks();\n    return ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol()).v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getKnownSymbol(name, noPoly) {\n    var knownName = _wellKnownSymbolMap[name];\n    !_globalLazyTestHooks && _initTestHooks();\n    var sym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return sym.v ? sym.v[knownName || name] : (!noPoly ? polyGetKnownSymbol(name) : UNDEF_VALUE);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction newSymbol(description, noPoly) {\n    !_globalLazyTestHooks && _initTestHooks();\n    var sym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return sym.v ? sym.v(description) : (!noPoly ? polyNewSymbol(description) : NULL_VALUE);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction symbolFor(key) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _symbolFor = ((!_globalLazyTestHooks.lzy ? _symbolFor : 0) || ( /*#__PURE__*/createCachedValue(safe((_getSymbolKey), [\"for\"]).v)));\n    return (_symbolFor.v || polySymbolFor)(key);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction symbolKeyFor(sym) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _symbolKeyFor = ((!_globalLazyTestHooks.lzy ? _symbolKeyFor : 0) || ( /*#__PURE__*/createCachedValue(safe((_getSymbolKey), [\"keyFor\"]).v)));\n    return (_symbolKeyFor.v || polySymbolKeyFor)(sym);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction isIterator(value) {\n    return !!value && isFunction(value.next);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isIterable(value) {\n    return !isStrictNullOrUndefined(value) && isFunction(value[getKnownSymbol(3 )]);\n}\n\nvar _iterSymbol$1;\nfunction iterForOf(iter, callbackfn, thisArg) {\n    if (iter) {\n        if (!isIterator(iter)) {\n            !_iterSymbol$1 && (_iterSymbol$1 = createCachedValue(getKnownSymbol(3 )));\n            iter = iter[_iterSymbol$1.v] ? iter[_iterSymbol$1.v]() : NULL_VALUE;\n        }\n        if (isIterator(iter)) {\n            var err = UNDEF_VALUE;\n            var iterResult = UNDEF_VALUE;\n            try {\n                var count = 0;\n                while (!(iterResult = iter.next()).done) {\n                    if (callbackfn[CALL](thisArg || iter, iterResult.value, count, iter) === -1) {\n                        break;\n                    }\n                    count++;\n                }\n            }\n            catch (failed) {\n                err = { e: failed };\n                if (iter.throw) {\n                    iterResult = NULL_VALUE;\n                    iter.throw(err);\n                }\n            }\n            finally {\n                try {\n                    if (iterResult && !iterResult.done) {\n                        iter.return && iter.return(iterResult);\n                    }\n                }\n                finally {\n                    if (err) {\n                        // eslint-disable-next-line no-unsafe-finally\n                        throw err.e;\n                    }\n                }\n            }\n        }\n    }\n}\n\nfunction fnApply(fn, thisArg, argArray) {\n    return fn.apply(thisArg, argArray);\n}\nfunction fnCall(fn, thisArg) {\n    return fn.apply(thisArg, ArrSlice[CALL](arguments, 2));\n}\nfunction fnBind(fn, thisArg) {\n    return fn.bind.apply(fn, ArrSlice[CALL](arguments, 1));\n}\n\nfunction arrAppend(target, elms) {\n    if (!isUndefined(elms) && target) {\n        if (isArray(elms)) {\n            fnApply(target.push, target, elms);\n        }\n        else if (isIterator(elms) || isIterable(elms)) {\n            iterForOf(elms, function (elm) {\n                target.push(elm);\n            });\n        }\n        else {\n            target.push(elms);\n        }\n    }\n    return target;\n}\n\nvar arrEvery = /*#__PURE__*/ _unwrapFunction(\"every\", ArrProto);\nvar arrFilter = /*#__PURE__*/ _unwrapFunction(\"filter\", ArrProto);\n\nvar arrIndexOf = ( /*#__PURE__*/_unwrapFunction(\"indexOf\", ArrProto));\nvar arrLastIndexOf = ( /*#__PURE__*/_unwrapFunction(\"lastIndexOf\", ArrProto));\n\nvar arrMap = ( /*#__PURE__*/_unwrapFunction(\"map\", ArrProto));\n\nfunction arrSlice(theArray, start, end) {\n    return ((theArray ? theArray[\"slice\"] : NULL_VALUE) || ArrSlice).apply(theArray, ArrSlice[CALL](arguments, 1));\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyIsArray(value) {\n    if (isNullOrUndefined(value)) {\n        return false;\n    }\n    return objToString(value) === \"[object Array]\";\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyArrIncludes(theArray, searchElement, fromIndex) {\n    return arrIndexOf(theArray, searchElement, fromIndex) !== -1;\n}\nfunction polyArrFind(theArray, callbackFn, thisArg) {\n    var result;\n    var idx = polyArrFindIndex(theArray, callbackFn, thisArg);\n    return idx !== -1 ? theArray[idx] : result;\n}\nfunction polyArrFindIndex(theArray, callbackFn, thisArg) {\n    var result = -1;\n    arrForEach(theArray, function (value, index) {\n        if (callbackFn[CALL](thisArg | theArray, value, index, theArray)) {\n            result = index;\n            return -1;\n        }\n    });\n    return result;\n}\nfunction polyArrFindLast(theArray, callbackFn, thisArg) {\n    var result;\n    var idx = polyArrFindLastIndex(theArray, callbackFn, thisArg);\n    return idx !== -1 ? theArray[idx] : result;\n}\nfunction polyArrFindLastIndex(theArray, callbackFn, thisArg) {\n    var result = -1;\n    var len = theArray[LENGTH] >>> 0;\n    for (var idx = len - 1; idx >= 0; idx--) {\n        if (idx in theArray && callbackFn[CALL](thisArg | theArray, theArray[idx], idx, theArray)) {\n            result = idx;\n            break;\n        }\n    }\n    return result;\n}\nfunction polyArrFrom(theValue, mapFn, thisArg) {\n    if (isArray(theValue)) {\n        var result_1 = arrSlice(theValue);\n        return mapFn ? arrMap(result_1, mapFn, thisArg) : result_1;\n    }\n    var result = [];\n    iterForOf(theValue, function (value, cnt) {\n        return result.push(mapFn ? mapFn[CALL](thisArg, value, cnt) : value);\n    });\n    return result;\n}\n\nvar arrFind = /*#__PURE__*/ _unwrapFunctionWithPoly(\"find\", ArrProto, polyArrFind);\nvar arrFindIndex = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findIndex\", ArrProto, polyArrFindIndex);\nvar arrFindLast = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findLast\", ArrProto, polyArrFindLast);\nvar arrFindLastIndex = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findLastIndex\", ArrProto, polyArrFindLastIndex);\n\nvar arrFrom = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ArrCls, \"from\")), polyArrFrom));\n\nvar arrIncludes = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"includes\", ArrProto, polyArrIncludes));\nvar arrContains = arrIncludes;\n\nvar arrReduce = ( /*#__PURE__*/_unwrapFunction(\"reduce\", ArrProto));\n\nvar arrSome = ( /*#__PURE__*/_unwrapFunction(\"some\", ArrProto));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createFnDeferredProxy(hostFn, funcName) {\n    return function () {\n        var theArgs = ArrSlice[CALL](arguments);\n        var theHost = hostFn();\n        return fnApply(theHost[funcName], theHost, theArgs);\n    };\n}\nfunction createProxyFuncs(target, host, funcDefs) {\n    if (target && host && isArray(funcDefs)) {\n        var isDeferred_1 = isFunction(host);\n        arrForEach(funcDefs, function (funcDef) {\n            var targetName = (funcDef.as || funcDef.n);\n            if (funcDef.rp === false && target[targetName]) {\n                return;\n            }\n            target[targetName] = isDeferred_1 ?\n                createFnDeferredProxy(host, funcDef.n) :\n                fnBind(host[funcDef.n], host);\n        });\n    }\n    return target;\n}\n\nvar _iterSymbol;\n/*#__NO_SIDE_EFFECTS__*/\nfunction readArgs(theArgs, start, end) {\n    if (!objHasOwn(theArgs, LENGTH)) {\n        !_iterSymbol && (_iterSymbol = createCachedValue(hasSymbol() && getKnownSymbol(3 )));\n        var iterFn = void 0;\n        if (_iterSymbol.v) {\n            iterFn = theArgs[_iterSymbol.v];\n        }\n        if (iterFn) {\n            var values_1 = [];\n            var from_1 = (start === UNDEF_VALUE || start < 0) ? 0 : start;\n            var to_1 = end < 0 || start < 0 ? UNDEF_VALUE : end;\n            iterForOf(iterFn[CALL](theArgs), function (value, cnt) {\n                if (to_1 !== UNDEF_VALUE && cnt >= to_1) {\n                    return -1;\n                }\n                if (cnt >= from_1) {\n                    values_1.push(value);\n                }\n            });\n            if ((start === UNDEF_VALUE || start >= 0) && (end === UNDEF_VALUE || end >= 0)) {\n                return values_1;\n            }\n            theArgs = values_1;\n        }\n    }\n    return arrSlice(theArgs, start, end);\n}\n\nvar _isProtoArray;\nvar objSetPrototypeOf = ( /* #__PURE__*/_pureAssign(( /* #__PURE__ */_pureRef(ObjClass, \"setPrototypeOf\")), _polyObjSetPrototypeOf));\nfunction _polyObjSetPrototypeOf(obj, proto) {\n    var _a;\n    !_isProtoArray && (_isProtoArray = createCachedValue((_a = {}, _a[__PROTO__] = [], _a) instanceof Array));\n    _isProtoArray.v ? obj[__PROTO__] = proto : objForEachKey(proto, function (key, value) { return obj[key] = value; });\n    return obj;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createCustomError(name, d, b) {\n    safe(objDefine, [d, NAME, { v: name, c: true, e: false }]);\n    d = objSetPrototypeOf(d, b);\n    function __() {\n        this[CONSTRUCTOR] = d;\n        safe(objDefine, [this, NAME, { v: name, c: true, e: false }]);\n    }\n    d[PROTOTYPE] = b === NULL_VALUE ? objCreate(b) : (__[PROTOTYPE] = b[PROTOTYPE], new __());\n    return d;\n}\nfunction _setName(baseClass, name) {\n    name && (baseClass[NAME] = name);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createCustomError(name, constructCb, errorBase) {\n    var theBaseClass = errorBase || Error;\n    var orgName = theBaseClass[PROTOTYPE][NAME];\n    var captureFn = Error.captureStackTrace;\n    return _createCustomError(name, function () {\n        var _this = this;\n        var theArgs = arguments;\n        try {\n            safe(_setName, [theBaseClass, name]);\n            var _self = fnApply(theBaseClass, _this, ArrSlice[CALL](theArgs)) || _this;\n            if (_self !== _this) {\n                var orgProto = objGetPrototypeOf(_this);\n                if (orgProto !== objGetPrototypeOf(_self)) {\n                    objSetPrototypeOf(_self, orgProto);\n                }\n            }\n            captureFn && captureFn(_self, _this[CONSTRUCTOR]);\n            constructCb && constructCb(_self, theArgs);\n            return _self;\n        }\n        finally {\n            safe(_setName, [theBaseClass, orgName]);\n        }\n    }, theBaseClass);\n}\nvar _unsupportedError;\nfunction throwUnsupported(message) {\n    if (!_unsupportedError) {\n        _unsupportedError = createCustomError(\"UnsupportedError\");\n    }\n    throw new _unsupportedError(message);\n}\n\nfunction isElement(value) {\n    return !!value && value.nodeType === 1 &&\n        !!value.nodeName &&\n        !!(typeof Element !== \"undefined\" && value instanceof Element);\n}\nfunction isElementLike(value) {\n    return !!value && value.nodeType === 1 && !!value.nodeName;\n}\n\nfunction isEmpty(value) {\n    var result = isStrictNullOrUndefined(value);\n    if (!result) {\n        if (isString(value) || isArray(value)) {\n            result = (value.length === 0);\n        }\n        else if (isMapLike(value) || isSetLike(value)) {\n            result = (value.size === 0);\n        }\n        else if (isObject(value)) {\n            result = objKeys(value).length === 0;\n        }\n    }\n    return result;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createTrimFn(exp) {\n    return function _doTrim(value) {\n        _throwIfNullOrUndefined(value);\n        if (value && value.replace) {\n            value = value.replace(exp, EMPTY);\n        }\n        return value;\n    };\n}\nvar polyStrTrim = ( /*#__PURE__*/_createTrimFn(/^\\s+|(?=\\s)\\s+$/g));\nvar polyStrTrimStart = ( /*#__PURE__*/_createTrimFn(/^\\s+/g));\nvar polyStrTrimEnd = ( /*#__PURE__*/_createTrimFn(/(?=\\s)\\s+$/g));\n\nvar strTrim = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trim\", StrProto, polyStrTrim));\nvar strTrimStart = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trimStart\", StrProto, polyStrTrimStart));\nvar strTrimLeft = ( /*#__PURE__*/_pureAssign(strTrimStart));\nvar strTrimEnd = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trimEnd\", StrProto, polyStrTrimEnd));\nvar strTrimRight = ( /*#__PURE__*/_pureAssign(strTrimEnd));\n\nvar strUpper = ( /*#__PURE__*/_unwrapFunction(\"toUpperCase\", StrProto));\nvar strLower = ( /*#__PURE__*/_unwrapFunction(\"toLowerCase\", StrProto));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _convertCase(value, newPrefix, upperWord) {\n    return strTrim(asString(value)).replace(/((_|\\W)+(\\w){0,1}|([a-z])([A-Z]))/g, function (_match, _g1, _g2, wordStart, upperPrefix, upperLetter) {\n        var convertMatch = wordStart || upperLetter || EMPTY;\n        if (upperWord) {\n            convertMatch = strUpper(convertMatch);\n        }\n        return (upperPrefix || EMPTY) + newPrefix + convertMatch;\n    });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strLetterCase(value) {\n    return asString(value).replace(/(_|\\b)\\w/g, strUpper);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strCamelCase(value, upperFirst) {\n    var result = _convertCase(value, \"\", true);\n    return result.replace(/^\\w/, upperFirst ? strUpper : strLower);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strKebabCase(value, scream) {\n    var result = _convertCase(value, \"-\");\n    return (scream ? strUpper : strLower)(result);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strSnakeCase(value, scream) {\n    var result = _convertCase(value, \"_\");\n    return (scream ? strUpper : strLower)(result);\n}\n\nvar mathFloor = ( /*#__PURE__*/_pureRef(MathCls, \"floor\"));\nvar mathCeil = ( /*#__PURE__*/_pureRef(MathCls, \"ceil\"));\n\nvar mathTrunc = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(MathCls, \"trunc\")), polyMathTrunc));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyMathTrunc(value) {\n    var theValue = +value;\n    return (theValue > 0 ? mathFloor : mathCeil)(theValue);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction mathToInt(value, throwInfinity) {\n    var result = +value;\n    if (throwInfinity && (result === Infinity || result == Infinity)) {\n        throwRangeError(\"invalid value [\" + dumpObj(value) + \"]\");\n    }\n    return result !== result || result === 0 ? 0 : mathTrunc(result);\n}\n\nvar strRepeat = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"repeat\", StrProto, polyStrRepeat));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrRepeat(value, count) {\n    _throwIfNullOrUndefined(value);\n    count = mathToInt(count, true);\n    if (count < 0) {\n        throwRangeError(\"invalid count must be >= 0 && < Infinity\");\n    }\n    var pad = isString(value) ? value : asString(value);\n    var result = EMPTY;\n    for (; count > 0; (count >>>= 1) && (pad += pad)) {\n        if (count & 1) {\n            result += pad;\n        }\n    }\n    return result;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _padValue(value, targetLength, padString) {\n    var result = EMPTY;\n    targetLength = mathToInt(targetLength, true);\n    targetLength >>= 0;\n    var len = value[LENGTH];\n    if (len < targetLength) {\n        result = isNullOrUndefined(padString) ? \" \" : asString(padString);\n        targetLength = targetLength - len;\n        if (targetLength > result[LENGTH]) {\n            result = strRepeat(result, mathCeil(targetLength / result[LENGTH]));\n        }\n        if (result[LENGTH] > targetLength) {\n            result = strSubstring(result, 0, targetLength);\n        }\n    }\n    return result;\n}\nvar strPadStart = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"padStart\", StrProto, polyStrPadStart));\nvar strPadEnd = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"padEnd\", StrProto, polyStrPadEnd));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrPadStart(value, targetLength, padString) {\n    return _padValue(value, targetLength, padString) + value;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrPadEnd(value, targetLength, padString) {\n    return value + _padValue(value, targetLength, padString);\n}\n\nvar DBL_QUOTE = \"\\\"\";\nvar INVALID_JS_NAME = /([^\\w\\d_$])/g;\nvar _htmlEntityCache;\n/*#__NO_SIDE_EFFECTS__*/\nfunction normalizeJsName(jsName, camelCase) {\n    var result = asString(jsName).replace(INVALID_JS_NAME, \"_\");\n    return !isUndefined(camelCase) ? strCamelCase(result, !camelCase) : result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction encodeAsJson(value, format) {\n    var result;\n    if (isString(value)) {\n        result = DBL_QUOTE + value.replace(/[^\\w .,\\-!@#$%\\^&*\\(\\)_+={}\\[\\]:;|<>?]/g, function (match) {\n            if (match === DBL_QUOTE || match === \"\\\\\") {\n                return \"\\\\\" + match;\n            }\n            var hex = match.charCodeAt(0)[TO_STRING](16);\n            return \"\\\\u\" + strPadStart(strUpper(hex), 4, \"0\");\n        }) + DBL_QUOTE;\n    }\n    else {\n        try {\n            result = JSON.stringify(value, NULL_VALUE, format ? (isNumber(format) ? format : 4) : UNDEF_VALUE);\n        }\n        catch (e) {\n            result = DBL_QUOTE + dumpObj(e) + DBL_QUOTE;\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction encodeAsHtml(value) {\n    !_htmlEntityCache && (_htmlEntityCache = {\n        \"&\": \"amp\",\n        \"<\": \"lt\",\n        \">\": \"gt\",\n        \"\\\"\": \"quot\",\n        \"'\": \"#39\"\n    });\n    return asString(value).replace(/[&<>\"']/g, function (match) { return \"&\" + _htmlEntityCache[match] + \";\"; });\n}\n\nvar _fnToString;\nvar _objCtrFnString;\nvar _gblWindow;\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPlainObject(value) {\n    if (!value || typeof value !== OBJECT) {\n        return false;\n    }\n    if (!_gblWindow) {\n        _gblWindow = hasWindow() ? getWindow() : true;\n    }\n    var result = false;\n    if (value !== _gblWindow) {\n        if (!_objCtrFnString) {\n            _fnToString = Function[PROTOTYPE][TO_STRING];\n            _objCtrFnString = _fnToString[CALL](ObjClass);\n        }\n        try {\n            var proto = objGetPrototypeOf(value);\n            result = !proto;\n            if (!result) {\n                if (objHasOwnProperty(proto, CONSTRUCTOR)) {\n                    proto = proto[CONSTRUCTOR];\n                }\n                result = !!(proto && typeof proto === FUNCTION && _fnToString[CALL](proto) === _objCtrFnString);\n            }\n        }\n        catch (ex) {\n        }\n    }\n    return result;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _defaultDeepCopyHandler(details) {\n    details.value && plainObjDeepCopyHandler(details);\n    return true;\n}\nvar defaultDeepCopyHandlers = [\n    arrayDeepCopyHandler,\n    plainObjDeepCopyHandler,\n    functionDeepCopyHandler,\n    dateDeepCopyHandler\n];\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getSetVisited(visitMap, source, newPath, cb) {\n    var theEntry;\n    arrForEach(visitMap, function (entry) {\n        if (entry.k === source) {\n            theEntry = entry;\n            return -1;\n        }\n    });\n    if (!theEntry) {\n        theEntry = { k: source, v: source };\n        visitMap.push(theEntry);\n        cb(theEntry);\n    }\n    return theEntry.v;\n}\nfunction _deepCopy(visitMap, value, ctx, key) {\n    var userHandler = ctx.handler;\n    var newPath = ctx.path ? (key ? ctx.path.concat(key) : ctx.path) : [];\n    var newCtx = {\n        handler: ctx.handler,\n        src: ctx.src,\n        path: newPath\n    };\n    var theType = typeof value;\n    var isPlain = false;\n    var isPrim = value === NULL_VALUE;\n    if (!isPrim) {\n        if (value && theType === OBJECT) {\n            isPlain = isPlainObject(value);\n        }\n        else {\n            isPrim = isPrimitiveType(theType);\n        }\n    }\n    var details = {\n        type: theType,\n        isPrim: isPrim,\n        isPlain: isPlain,\n        value: value,\n        result: value,\n        path: newPath,\n        origin: ctx.src,\n        copy: function (source, newKey) {\n            return _deepCopy(visitMap, source, newKey ? newCtx : ctx, newKey);\n        },\n        copyTo: function (target, source) {\n            return _copyProps(visitMap, target, source, newCtx);\n        }\n    };\n    if (!details.isPrim) {\n        return _getSetVisited(visitMap, value, newPath, function (newEntry) {\n            objDefine(details, \"result\", {\n                g: function () {\n                    return newEntry.v;\n                },\n                s: function (newValue) {\n                    newEntry.v = newValue;\n                }\n            });\n            var idx = 0;\n            var handler = userHandler;\n            while (!(handler || (idx < defaultDeepCopyHandlers.length ? defaultDeepCopyHandlers[idx++] : _defaultDeepCopyHandler))[CALL](ctx, details)) {\n                handler = NULL_VALUE;\n            }\n        });\n    }\n    if (userHandler && userHandler[CALL](ctx, details)) {\n        return details.result;\n    }\n    return value;\n}\nfunction _copyProps(visitMap, target, source, ctx) {\n    if (!isNullOrUndefined(source)) {\n        for (var key in source) {\n            target[key] = _deepCopy(visitMap, source[key], ctx, key);\n        }\n    }\n    return target;\n}\nfunction objCopyProps(target, source, handler) {\n    var ctx = {\n        handler: handler,\n        src: source,\n        path: []\n    };\n    return _copyProps([], target, source, ctx);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction objDeepCopy(source, handler) {\n    var ctx = {\n        handler: handler,\n        src: source\n    };\n    return _deepCopy([], source, ctx);\n}\nfunction arrayDeepCopyHandler(details) {\n    var value = details.value;\n    if (isArray(value)) {\n        var target = details.result = [];\n        target.length = value.length;\n        details.copyTo(target, value);\n        return true;\n    }\n    return false;\n}\nfunction dateDeepCopyHandler(details) {\n    var value = details.value;\n    if (isDate(value)) {\n        details.result = new Date(value.getTime());\n        return true;\n    }\n    return false;\n}\nfunction functionDeepCopyHandler(details) {\n    if (details.type === FUNCTION) {\n        return true;\n    }\n    return false;\n}\nfunction plainObjDeepCopyHandler(details) {\n    var value = details.value;\n    if (value && details.isPlain) {\n        var target = details.result = {};\n        details.copyTo(target, value);\n        return true;\n    }\n    return false;\n}\n\nfunction _doExtend(target, theArgs) {\n    arrForEach(theArgs, function (theArg) {\n        objCopyProps(target, theArg);\n    });\n    return target;\n}\nfunction deepExtend(target, obj1, obj2, obj3, obj4, obj5, obj6) {\n    return _doExtend(objDeepCopy(target) || {}, ArrSlice[CALL](arguments));\n}\nfunction objExtend(target, obj1, obj2, obj3, obj4, obj5, obj6) {\n    return _doExtend(target || {}, ArrSlice[CALL](arguments));\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrSymSplit(value, splitter, limit) {\n    var splitFn = splitter ? splitter[getKnownSymbol(9 )] : UNDEF_VALUE;\n    return splitFn ? splitFn(value, limit) : [value];\n}\n\nvar strSplit = ( /*#__PURE__*/_unwrapFunction(\"split\", StrProto));\nvar strSymSplit = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"split\", StrProto, !hasSymbol() ? polyStrSymSplit : NULL_VALUE));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction getValueByKey(target, path, defValue) {\n    if (!path || !target) {\n        return defValue;\n    }\n    var parts = strSplit(path, \".\");\n    var cnt = parts.length;\n    for (var lp = 0; lp < cnt && !isNullOrUndefined(target); lp++) {\n        target = target[parts[lp]];\n    }\n    return (!isNullOrUndefined(target) ? target : defValue);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getValueByIter(target, iter, defValue) {\n    if (!iter || !target) {\n        return defValue;\n    }\n    iterForOf(iter, function (value) {\n        if (isNullOrUndefined(target)) {\n            return -1;\n        }\n        target = target[value];\n    });\n    return (!isNullOrUndefined(target) ? target : defValue);\n}\nfunction setValueByKey(target, path, value) {\n    if (target && path) {\n        var parts = strSplit(path, \".\");\n        var lastKey = parts.pop();\n        arrForEach(parts, function (key) {\n            if (isNullOrUndefined(target[key])) {\n                target[key] = {};\n            }\n            target = target[key];\n        });\n        target[lastKey] = value;\n    }\n}\nfunction setValueByIter(target, iter, value) {\n    if (target && iter) {\n        var lastKey_1;\n        iterForOf(iter, function (key) {\n            if (lastKey_1) {\n                if (isNullOrUndefined(target[lastKey_1])) {\n                    target[lastKey_1] = {};\n                }\n                target = target[lastKey_1];\n            }\n            lastKey_1 = key;\n        });\n        target[lastKey_1] = value;\n    }\n}\n\nvar getLength = ( /*#__PURE__*/_unwrapProp(LENGTH));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction getIntValue(value, defValue) {\n    if (!isNullOrUndefined(value)) {\n        if (isNumber(value)) {\n            return value;\n        }\n        var theValue = parseInt(value, 10);\n        return isNaN(theValue) ? defValue : theValue;\n    }\n    return defValue;\n}\nvar isInteger = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(NumberCls, \"isInteger\")), _polyNumberIsInteger));\nfunction _polyNumberIsInteger(value) {\n    return isNumber(value) && !isNaN(value) &&\n        isFinite(value) &&\n        mathFloor(value) === value;\n}\nfunction isFiniteNumber(value) {\n    return isNumber(value) && !isNaN(value) && isFinite(value);\n}\n\nvar _perf;\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasPerformance() {\n    return !!getPerformance();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getPerformance() {\n    !_globalLazyTestHooks && _initTestHooks();\n    if (!_perf || _globalLazyTestHooks.lzy) {\n        _perf = createCachedValue(safe((getInst), [\"performance\"]).v);\n    }\n    return _perf.v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction perfNow() {\n    var perf = getPerformance();\n    if (perf && perf.now) {\n        return perf.now();\n    }\n    return utcNow();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction elapsedTime(startTime) {\n    return perfNow() - startTime;\n}\n\nvar MATCH_ANY = \"(.*)\";\nvar MATCH_SINGLE = \"(.)\";\nfunction _createRegExp(value, escapeRgx, replaceFn, ignoreCase, fullMatch) {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp((fullMatch ? \"^\" : EMPTY) + replaceFn(value.replace(escapeRgx, \"\\\\$1\")) + (fullMatch ? \"$\" : EMPTY), ignoreCase ? \"i\" : \"\");\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createWildcardRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#\\.\\?{}()\\[\\]\\\\\\/\\\"\\'])/g, function (value) {\n        return value.replace(/\\*/g, MATCH_ANY);\n    }, !!ignoreCase, fullMatch);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createFilenameRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#\\.{}()\\\\\\/\\[\\]\\\"\\'])/g, function (value) {\n        return value.replace(/(\\\\\\\\|\\\\\\/|\\*|\\?)/g, function (_all, g1) {\n            if (g1 == \"\\\\/\" || g1 == \"\\\\\\\\\") {\n                return \"[\\\\\\\\\\\\/]{1}\";\n            }\n            return g1 == \"*\" ? MATCH_ANY : MATCH_SINGLE;\n        });\n    }, !!ignoreCase, fullMatch);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction makeGlobRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#\\.{}()\\\\\\/\\[\\]\\\"\\'])/g, function (value) {\n        return value.replace(/(\\*\\*\\\\[\\\\\\/]|\\\\\\\\|\\\\\\/|\\*\\*|\\*|\\?)/g, function (_all, g1) {\n            if (g1 == \"**\\\\/\" || g1 == \"**\\\\\\\\\") {\n                return \"(.*[\\\\\\\\\\\\/])*\";\n            }\n            if (g1 === \"\\\\/\" || g1 == \"\\\\\\\\\") {\n                return \"[\\\\\\\\\\\\/]{1}\";\n            }\n            if (g1 === \"**\") {\n                return MATCH_ANY;\n            }\n            return g1 === \"*\" ? \"([^\\\\\\\\\\\\/]*)\" : \"([^\\\\\\\\\\\\/]{1})\";\n        });\n    }, !!ignoreCase, fullMatch);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction safeGetLazy(cb, defValue) {\n    return getLazy(function () {\n        var result = safe(cb);\n        return result.e ? defValue : result.v;\n    });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction safeGetWritableLazy(cb, defValue) {\n    return getWritableLazy(function () {\n        var result = safe(cb);\n        return result.e ? defValue : result.v;\n    });\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _checkLength(value, props) {\n    var result;\n    arrForEach(props, function (prop) {\n        if (prop in value) {\n            var propValue = value[prop];\n            result = (isFunction(propValue) ? propValue() : propValue) > 0;\n            return -1;\n        }\n    });\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _hasValue(value, depth) {\n    var result = value === false || value === 0;\n    if (!result && !isNullOrUndefined(value)) {\n        if (isArray(value)) {\n            result = value[LENGTH] > 0;\n        }\n        else if (isDate(value)) {\n            result = !isNaN(value.getTime());\n        }\n        else if (isBoolean(value)) {\n            return true;\n        }\n        else if (isObject(value)) {\n            try {\n                var chkValue = _checkLength(value, [LENGTH, \"byteLength\", \"size\", \"count\"]);\n                if (isBoolean(chkValue)) {\n                    return chkValue;\n                }\n                if (isFunction(value.valueOf) && depth < 5) {\n                    return _hasValue(value.valueOf(), ++depth);\n                }\n            }\n            catch (e) {\n            }\n            return !!objKeys(value)[LENGTH];\n        }\n        else {\n            result = isTruthy(value);\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasValue(value) {\n    return _hasValue(value, 0);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createIterable(ctx) {\n    return makeIterable({}, ctx);\n}\nfunction makeIterable(target, ctx) {\n    var itSymbol = getKnownSymbol(3 );\n    function _createIterator() {\n        return createIterator(ctx);\n    }\n    target[itSymbol] = _createIterator;\n    return target;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createIterator(ctx) {\n    var isDone = false;\n    function _value() {\n        return ctx.v;\n    }\n    function _next() {\n        if (!isDone) {\n            isDone = (ctx.n ? ctx.n(arguments) : true);\n        }\n        var result = {\n            done: isDone\n        };\n        if (!isDone) {\n            objDefine(result, \"value\", { g: _value });\n        }\n        return result;\n    }\n    function _return(value) {\n        isDone = true;\n        return {\n            done: true,\n            value: ctx.r && ctx.r(value)\n        };\n    }\n    function _throw(e) {\n        isDone = true;\n        return {\n            done: true,\n            value: ctx.t && ctx.t(e)\n        };\n    }\n    var theIterator = {\n        next: _next\n    };\n    if (ctx.r) {\n        theIterator.return = _return;\n    }\n    if (ctx.t) {\n        theIterator.throw = _throw;\n    }\n    return theIterator;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createArrayIterator(values) {\n    var idx = -1;\n    var theValues = values ? values.slice() : [];\n    var len = theValues[LENGTH];\n    function _value() {\n        if (idx >= 0 && idx < len) {\n            return theValues[idx];\n        }\n    }\n    function _getNext() {\n        idx++;\n        return idx >= len;\n    }\n    var ctx = {\n        n: _getNext\n    };\n    objDefine(ctx, \"v\", { g: _value });\n    return createIterator(ctx);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createRangeIterator(start, end, step) {\n    var nextValue = start;\n    var theValue = UNDEF_VALUE;\n    if (isNullOrUndefined(end)) {\n        end = start;\n    }\n    var theStep = step;\n    if (!theStep) {\n        theStep = (start <= end) ? 1 : -1;\n    }\n    function _value() {\n        return theValue;\n    }\n    function _getNext() {\n        var isDone = (theStep > 0) ? (nextValue > end) : (nextValue < end);\n        if (!isDone) {\n            theValue = nextValue;\n            nextValue += theStep;\n        }\n        return isDone;\n    }\n    return createIterator(objDefine({\n        n: _getNext\n    }, \"v\", { g: _value }));\n}\n\nvar mathAbs = ( /*#__PURE__*/_pureRef(MathCls, \"abs\"));\n\nvar mathExp = ( /*#__PURE__*/_pureRef(MathCls, \"exp\"));\nvar mathLog = ( /*#__PURE__*/_pureRef(MathCls, \"log\"));\n\nvar mathAsin = ( /*#__PURE__*/_pureRef(MathCls, \"asin\"));\nvar mathAcos = ( /*#__PURE__*/_pureRef(MathCls, \"acos\"));\nvar mathAtan = ( /*#__PURE__*/_pureRef(MathCls, \"atan\"));\nvar mathAtan2 = ( /*#__PURE__*/_pureRef(MathCls, \"atan2\"));\n\nvar mathPow = ( /*#__PURE__*/_pureRef(MathCls, \"pow\"));\nvar mathSqrt = ( /*#__PURE__*/_pureRef(MathCls, \"sqrt\"));\n\nvar mathRound = ( /*#__PURE__*/_pureRef(MathCls, \"round\"));\n\nvar mathSin = ( /*#__PURE__*/_pureRef(MathCls, \"sin\"));\nvar mathCos = ( /*#__PURE__*/_pureRef(MathCls, \"cos\"));\nvar mathTan = ( /*#__PURE__*/_pureRef(MathCls, \"tan\"));\n\nfunction _returnEmptyArray() {\n    return [];\n}\nvar objGetOwnPropertyNames = ( /* #__PURE__ */_pureAssign(( /* #__PURE__ */_pureRef(ObjClass, \"getOwnPropertyNames\")), _returnEmptyArray));\n\nvar recursionCheckOwnDescriptors;\nfunction polyObjGetOwnPropertyDescriptors(obj) {\n    var result = {};\n    _throwIfNullOrUndefined(obj);\n    if (!recursionCheckOwnDescriptors) {\n        try {\n            recursionCheckOwnDescriptors = true;\n            arrForEach(objGetOwnPropertyNames(obj), function (propName) {\n                var descriptor = objGetOwnPropertyDescriptor(obj, propName);\n                if (descriptor !== undefined) {\n                    result[propName] = descriptor;\n                }\n            });\n            arrForEach(polyObjGetOwnPropertySymbols(obj), function (sym) {\n                var descriptor = objGetOwnPropertyDescriptor(obj, sym);\n                if (descriptor !== undefined) {\n                    result[sym] = descriptor;\n                }\n            });\n        }\n        finally {\n            recursionCheckOwnDescriptors = false;\n        }\n    }\n    return result;\n}\nvar recursionCheckOwnSymbols;\nfunction polyObjGetOwnPropertySymbols(obj) {\n    var result = [];\n    var objHasOwn = ObjClass.hasOwn || polyObjHasOwn;\n    if (!recursionCheckOwnSymbols) {\n        try {\n            recursionCheckOwnSymbols = true;\n            var symEnum = 0 ;\n            while (symEnum <= 12 ) {\n                var sym = getKnownSymbol(symEnum);\n                if (sym && objHasOwn(obj, sym)) {\n                    result.push(sym);\n                }\n                symEnum++;\n            }\n        }\n        finally {\n            recursionCheckOwnSymbols = false;\n        }\n    }\n    return result;\n}\n\nvar objGetOwnPropertyDescriptors = ( /* #__PURE__ */_pureAssign(( /* #__PURE__ */_pureRef(ObjClass, \"getOwnPropertyDescriptors\")), polyObjGetOwnPropertyDescriptors));\n\nfunction polyObjFromEntries(entries) {\n    var result = {};\n    function addEntry(entry) {\n        if (isArray(entry) && entry.length >= 2) {\n            result[entry[0]] = entry[1];\n        }\n    }\n    if (isArray(entries)) {\n        arrForEach(entries, addEntry);\n    }\n    else if (isIterable(entries)) {\n        iterForOf(entries, addEntry);\n    }\n    return result;\n}\n\nvar objFromEntries = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"fromEntries\")), polyObjFromEntries));\n\nfunction polyObjIsExtensible(obj) {\n    if (isStrictNullOrUndefined(obj) || (!isObject(obj) && !isFunction(obj))) {\n        return false;\n    }\n    return true;\n}\n\nvar objPreventExtensions = ( /* #__PURE__*/_pureAssign(( /* #__PURE__ */_pureRef(ObjClass, \"preventExtensions\")), _doNothing));\nvar objIsExtensible = ( /* #__PURE__*/_pureAssign(( /* #__PURE__ */_pureRef(ObjClass, \"isExtensible\")), polyObjIsExtensible));\n\nvar strEndsWith = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"endsWith\", StrProto, polyStrEndsWith));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrEndsWith(value, searchString, length) {\n    _throwIfNotString(value);\n    var searchValue = isString(searchString) ? searchString : asString(searchString);\n    var end = (!isUndefined(length) && length < value[LENGTH]) ? length : value[LENGTH];\n    return strSubstring(value, end - searchValue[LENGTH], end) === searchValue;\n}\n\nvar strIndexOf = ( /*#__PURE__*/_unwrapFunction(\"indexOf\", StrProto));\nvar strLastIndexOf = ( /*#__PURE__*/_unwrapFunction(\"lastIndexOf\", StrProto));\n\nvar strIncludes = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"includes\", StrProto, polyStrIncludes));\nvar strContains = ( /*#__PURE__*/_pureAssign(strIncludes));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrIncludes(value, searchString, position) {\n    if (isRegExp(searchString)) {\n        throwTypeError(\"'searchString' must not be a regular expression\" + dumpObj(searchString));\n    }\n    return strIndexOf(value, asString(searchString), position) !== -1;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction strIsNullOrWhiteSpace(value) {\n    if (isString(value)) {\n        return value.replace(/[\\s\\t\\r\\n\\f]+/g, EMPTY) === EMPTY;\n    }\n    return isNullOrUndefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strIsNullOrEmpty(value) {\n    if (isString(value)) {\n        return value === EMPTY;\n    }\n    return isNullOrUndefined(value);\n}\n\nvar strStartsWith = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"startsWith\", StrProto, polyStrStartsWith));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrStartsWith(value, searchString, position) {\n    _throwIfNotString(value);\n    var searchValue = isString(searchString) ? searchString : asString(searchString);\n    var pos = position > 0 ? position : 0;\n    return strSubstring(value, pos, pos + searchValue[LENGTH]) === searchValue;\n}\n\nvar REF = \"ref\";\nvar UNREF = \"unref\";\nvar HAS_REF = \"hasRef\";\nvar ENABLED = \"enabled\";\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createTimerHandler(startTimer, refreshFn, cancelFn) {\n    var ref = true;\n    var timerId = startTimer ? refreshFn(NULL_VALUE) : NULL_VALUE;\n    var theTimerHandler;\n    function _unref() {\n        ref = false;\n        timerId && timerId[UNREF] && timerId[UNREF]();\n        return theTimerHandler;\n    }\n    function _cancel() {\n        timerId && cancelFn(timerId);\n        timerId = NULL_VALUE;\n    }\n    function _refresh() {\n        timerId = refreshFn(timerId);\n        if (!ref) {\n            _unref();\n        }\n        return theTimerHandler;\n    }\n    function _setEnabled(value) {\n        !value && timerId && _cancel();\n        value && !timerId && _refresh();\n    }\n    theTimerHandler = {\n        cancel: _cancel,\n        refresh: _refresh\n    };\n    theTimerHandler[HAS_REF] = function () {\n        if (timerId && timerId[HAS_REF]) {\n            return timerId[HAS_REF]();\n        }\n        return ref;\n    };\n    theTimerHandler[REF] = function () {\n        ref = true;\n        timerId && timerId[REF] && timerId[REF]();\n        return theTimerHandler;\n    };\n    theTimerHandler[UNREF] = _unref;\n    theTimerHandler = objDefineProp(theTimerHandler, ENABLED, {\n        get: function () { return !!timerId; },\n        set: _setEnabled\n    });\n    return {\n        h: theTimerHandler,\n        dn: function () {\n            timerId = NULL_VALUE;\n        }\n    };\n}\n\nfunction _createTimeoutWith(startTimer, overrideFn, theArgs) {\n    var isArr = isArray(overrideFn);\n    var len = isArr ? overrideFn.length : 0;\n    var setFn = (len > 0 ? overrideFn[0] : (!isArr ? overrideFn : UNDEF_VALUE)) || setTimeout;\n    var clearFn = (len > 1 ? overrideFn[1] : UNDEF_VALUE) || clearTimeout;\n    var timerFn = theArgs[0];\n    theArgs[0] = function () {\n        handler.dn();\n        fnApply(timerFn, UNDEF_VALUE, ArrSlice[CALL](arguments));\n    };\n    var handler = _createTimerHandler(startTimer, function (timerId) {\n        if (timerId) {\n            if (timerId.refresh) {\n                timerId.refresh();\n                return timerId;\n            }\n            fnApply(clearFn, UNDEF_VALUE, [timerId]);\n        }\n        return fnApply(setFn, UNDEF_VALUE, theArgs);\n    }, function (timerId) {\n        fnApply(clearFn, UNDEF_VALUE, [timerId]);\n    });\n    return handler.h;\n}\nfunction scheduleTimeout(callback, timeout) {\n    return _createTimeoutWith(true, UNDEF_VALUE, ArrSlice[CALL](arguments));\n}\nfunction scheduleTimeoutWith(overrideFn, callback, timeout) {\n    return _createTimeoutWith(true, overrideFn, ArrSlice[CALL](arguments, 1));\n}\nfunction createTimeout(callback, timeout) {\n    return _createTimeoutWith(false, UNDEF_VALUE, ArrSlice[CALL](arguments));\n}\nfunction createTimeoutWith(overrideFn, callback, timeout) {\n    return _createTimeoutWith(false, overrideFn, ArrSlice[CALL](arguments, 1));\n}\n\nvar _defaultIdleTimeout = 100;\nvar _maxExecutionTime = 50;\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasIdleCallback() {\n    return !!( /*#__PURE__*/getIdleCallback());\n}\nvar getIdleCallback = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"requestIdleCallback\"]));\nvar getCancelIdleCallback = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"cancelIdleCallback\"]));\nfunction setDefaultIdleTimeout(timeout) {\n    _defaultIdleTimeout = timeout;\n}\nfunction setDefaultMaxExecutionTime(maxTime) {\n    _maxExecutionTime = maxTime;\n}\nfunction scheduleIdleCallback(callback, options) {\n    function _createDeadline(timedOut) {\n        var startTime = perfNow();\n        return {\n            didTimeout: timedOut,\n            timeRemaining: function () {\n                return _maxExecutionTime - elapsedTime(startTime);\n            }\n        };\n    }\n    if (hasIdleCallback()) {\n        var handler_1 = _createTimerHandler(true, function (idleId) {\n            idleId && getCancelIdleCallback()(idleId);\n            return getIdleCallback()(function (deadline) {\n                handler_1.dn();\n                callback(deadline || _createDeadline(false));\n            }, options);\n        }, function (idleId) {\n            getCancelIdleCallback()(idleId);\n        });\n        return handler_1.h;\n    }\n    var timeout = (options || {}).timeout;\n    if (isUndefined(timeout)) {\n        timeout = _defaultIdleTimeout;\n    }\n    return scheduleTimeout(function () {\n        callback(_createDeadline(true));\n    }, timeout);\n}\n\nfunction scheduleInterval(callback, timeout) {\n    var theArguments = ArrSlice[CALL](arguments);\n    var handler = _createTimerHandler(true, function (intervalId) {\n        intervalId && clearInterval(intervalId);\n        return fnApply(setInterval, UNDEF_VALUE, theArguments);\n    }, function (intervalId) {\n        fnApply(clearInterval, UNDEF_VALUE, [intervalId]);\n    });\n    return handler.h;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjKeys(obj) {\n    _throwIfNullOrUndefined(obj);\n    if (!isObject(obj)) {\n        throwTypeError(\"non-object \" + dumpObj(obj));\n    }\n    var result = [];\n    for (var prop in obj) {\n        if (objHasOwn(obj, prop)) {\n            result.push(prop);\n        }\n    }\n    return result;\n}\n\nexport { arrAppend, arrContains, arrEvery, arrFilter, arrFind, arrFindIndex, arrFindLast, arrFindLastIndex, arrForEach, arrFrom, arrIncludes, arrIndexOf, arrLastIndexOf, arrMap, arrReduce, arrSlice, arrSome, arrayDeepCopyHandler, asString, createArrayIterator, createCachedValue, createCustomError, createDeferredCachedValue, createEnum, createEnumKeyMap, createEnumValueMap, createFilenameRegex, createFnDeferredProxy, createIterable, createIterator, createProxyFuncs, createRangeIterator, createSimpleMap, createTimeout, createTimeoutWith, createTypeMap, createWildcardRegex, dateDeepCopyHandler, deepExtend, dumpObj, elapsedTime, encodeAsHtml, encodeAsJson, fnApply, fnBind, fnCall, functionDeepCopyHandler, getCancelIdleCallback, getDocument, getGlobal, getHistory, getIdleCallback, getInst, getIntValue, getKnownSymbol, getLazy, getLength, getNavigator, getPerformance, getSymbol, getValueByIter, getValueByKey, getWindow, getWritableLazy, hasDocument, hasHistory, hasIdleCallback, hasNavigator, hasPerformance, hasSymbol, hasValue, hasWindow, isArray, isArrayBuffer, isBigInt, isBlob, isBoolean, isDate, isDefined, isElement, isElementLike, isEmpty, isError, isFile, isFiniteNumber, isFormData, isFunction, isInteger, isIterable, isIterator, isMap, isMapLike, isNode, isNotTruthy, isNullOrUndefined, isNumber, isObject, isPlainObject, isPrimitive, isPrimitiveType, isPromise, isPromiseLike, isRegExp, isSet, isSetLike, isStrictNullOrUndefined, isStrictUndefined, isString, isSymbol, isThenable, isTruthy, isTypeof, isUndefined, isWeakMap, isWeakSet, isWebWorker, iterForOf, lazySafeGetInst, makeGlobRegex, makeIterable, mathAbs, mathAcos, mathAsin, mathAtan, mathAtan2, mathCeil, mathCos, mathExp, mathFloor, mathLog, mathMax, mathMin, mathPow, mathRandom, mathRound, mathSin, mathSqrt, mathTan, mathToInt, mathTrunc, newSymbol, normalizeJsName, objAssign, objCopyProps, objCreate, objDeepCopy, objDeepFreeze, objDefine, objDefineAccessors, objDefineGet, objDefineProp, objDefineProperties, objDefineProps, objEntries, objExtend, objForEachKey, objFreeze, objFromEntries, objGetOwnPropertyDescriptor, objGetOwnPropertyDescriptors, objGetOwnPropertyNames, objGetOwnPropertySymbols, objGetPrototypeOf, objHasOwn, objHasOwnProperty, objIs, objIsExtensible, objIsFrozen, objIsSealed, objKeys, objPreventExtensions, objPropertyIsEnumerable, objSeal, objSetPrototypeOf, objToString, objValues, perfNow, plainObjDeepCopyHandler, polyArrFind, polyArrFindIndex, polyArrFindLast, polyArrFindLastIndex, polyArrFrom, polyArrIncludes, polyGetKnownSymbol, polyIsArray, polyNewSymbol, polyObjEntries, polyObjHasOwn, polyObjIs, polyObjKeys, polyStrIncludes, polyStrSubstr, polyStrSymSplit, polyStrTrim, polyStrTrimEnd, polyStrTrimStart, polySymbolFor, polySymbolKeyFor, polyUtcNow, readArgs, safe, safeGet, safeGetLazy, safeGetWritableLazy, scheduleIdleCallback, scheduleInterval, scheduleTimeout, scheduleTimeoutWith, setBypassLazyCache, setDefaultIdleTimeout, setDefaultMaxExecutionTime, setValueByIter, setValueByKey, strCamelCase, strContains, strEndsWith, strIncludes, strIndexOf, strIsNullOrEmpty, strIsNullOrWhiteSpace, strKebabCase, strLastIndexOf, strLeft, strLetterCase, strLower, strPadEnd, strPadStart, strRepeat, strRight, strSlice, strSnakeCase, strSplit, strStartsWith, strSubstr, strSubstring, strSymSplit, strTrim, strTrimEnd, strTrimLeft, strTrimRight, strTrimStart, strUpper, symbolFor, symbolKeyFor, throwError, throwRangeError, throwTypeError, throwUnsupported, utcNow };\n//# sourceMappingURL=ts-utils.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { getGlobal, objAssign, objCreate, objDefineProp, objHasOwnProperty, throwTypeError } from \"@nevware21/ts-utils\";\r\nimport { ObjClass, ObjProto, strDefault, strShimFunction, strShimPrototype } from \"./Constants\";\r\n// Most of these functions have been directly shamelessly \"lifted\" from the https://github.com/@microsoft/tslib and\r\n// modified to be ES5 compatible and applying several minification and tree-shaking techniques so that Application Insights\r\n// can successfully use TypeScript \"importHelpers\" which imports tslib during compilation but it will use these at runtime\r\n// Which is also why all of the functions have not been included as Application Insights currently doesn't use or require\r\n// them.\r\nexport var SymbolObj = (getGlobal() || {})[\"Symbol\"];\r\nexport var ReflectObj = (getGlobal() || {})[\"Reflect\"];\r\nexport var __hasReflect = !!ReflectObj;\r\nvar strDecorate = \"decorate\";\r\nvar strMetadata = \"metadata\";\r\nvar strGetOwnPropertySymbols = \"getOwnPropertySymbols\";\r\nvar strIterator = \"iterator\";\r\nvar strHasOwnProperty = \"hasOwnProperty\";\r\nexport var __objAssignFnImpl = function (t) {\r\n    // tslint:disable-next-line: ban-comma-operator\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) {\r\n            if (ObjProto[strHasOwnProperty].call(s, p)) {\r\n                t[p] = s[p];\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n};\r\nexport var __assignFn = objAssign || __objAssignFnImpl;\r\n// tslint:disable-next-line: only-arrow-functions\r\nvar extendStaticsFn = function (d, b) {\r\n    extendStaticsFn = ObjClass[\"setPrototypeOf\"] ||\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        ({ __proto__: [] } instanceof Array && function (d, b) {\r\n            d.__proto__ = b;\r\n        }) ||\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        function (d, b) {\r\n            for (var p in b) {\r\n                if (b[strHasOwnProperty](p)) {\r\n                    d[p] = b[p];\r\n                }\r\n            }\r\n        };\r\n    return extendStaticsFn(d, b);\r\n};\r\nexport function __extendsFn(d, b) {\r\n    if (typeof b !== strShimFunction && b !== null) {\r\n        throwTypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    }\r\n    extendStaticsFn(d, b);\r\n    function __() {\r\n        this.constructor = d;\r\n    }\r\n    // tslint:disable-next-line: ban-comma-operator\r\n    d[strShimPrototype] = b === null ? objCreate(b) : (__[strShimPrototype] = b[strShimPrototype], new __());\r\n}\r\nexport function __restFn(s, e) {\r\n    var t = {};\r\n    for (var k in s) {\r\n        if (objHasOwnProperty(s, k) && e.indexOf(k) < 0) {\r\n            t[k] = s[k];\r\n        }\r\n    }\r\n    if (s != null && typeof ObjClass[strGetOwnPropertySymbols] === strShimFunction) {\r\n        for (var i = 0, p = ObjClass[strGetOwnPropertySymbols](s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && ObjProto[\"propertyIsEnumerable\"].call(s, p[i])) {\r\n                t[p[i]] = s[p[i]];\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n}\r\nexport function __decorateFn(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = ObjClass[\"getOwnPropertyDescriptor\"](target, key) : desc, d;\r\n    if (__hasReflect && typeof ReflectObj[strDecorate] === strShimFunction) {\r\n        r = ReflectObj[strDecorate](decorators, target, key, desc);\r\n    }\r\n    else {\r\n        for (var i = decorators.length - 1; i >= 0; i--) {\r\n            // eslint-disable-next-line no-cond-assign\r\n            if (d = decorators[i]) {\r\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n            }\r\n        }\r\n    }\r\n    // tslint:disable-next-line:ban-comma-operator\r\n    return c > 3 && r && objDefineProp(target, key, r), r;\r\n}\r\nexport function __paramFn(paramIndex, decorator) {\r\n    return function (target, key) {\r\n        decorator(target, key, paramIndex);\r\n    };\r\n}\r\nexport function __metadataFn(metadataKey, metadataValue) {\r\n    if (__hasReflect && ReflectObj[strMetadata] === strShimFunction) {\r\n        return ReflectObj[strMetadata](metadataKey, metadataValue);\r\n    }\r\n}\r\nexport function __exportStarFn(m, o) {\r\n    for (var p in m) {\r\n        if (p !== strDefault && !objHasOwnProperty(o, p)) {\r\n            __createBindingFn(o, m, p);\r\n        }\r\n    }\r\n}\r\nexport function __createBindingFn(o, m, k, k2) {\r\n    if (k2 === undefined) {\r\n        k2 = k;\r\n    }\r\n    if (!!objDefineProp) {\r\n        objDefineProp(o, k2, {\r\n            enumerable: true,\r\n            get: function () {\r\n                return m[k];\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        o[k2] = m[k];\r\n    }\r\n}\r\nexport function __valuesFn(o) {\r\n    var s = typeof SymbolObj === strShimFunction && SymbolObj[strIterator], m = s && o[s], i = 0;\r\n    if (m) {\r\n        return m.call(o);\r\n    }\r\n    if (o && typeof o.length === \"number\") {\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) {\r\n                    o = void 0;\r\n                }\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n    throwTypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\nexport function __readFn(o, n) {\r\n    var m = typeof SymbolObj === strShimFunction && o[SymbolObj[strIterator]];\r\n    if (!m) {\r\n        return o;\r\n    }\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\r\n            ar.push(r.value);\r\n        }\r\n    }\r\n    catch (error) {\r\n        e = {\r\n            error: error\r\n        };\r\n    }\r\n    finally {\r\n        try {\r\n            // tslint:disable-next-line:no-conditional-assignment\r\n            if (r && !r.done && (m = i[\"return\"])) {\r\n                m.call(i);\r\n            }\r\n        }\r\n        finally {\r\n            if (e) {\r\n                // eslint-disable-next-line no-unsafe-finally\r\n                throw e.error;\r\n            }\r\n        }\r\n    }\r\n    return ar;\r\n}\r\n/** @deprecated */\r\nexport function __spreadArraysFn() {\r\n    var theArgs = arguments;\r\n    // Calculate new total size\r\n    for (var s = 0, i = 0, il = theArgs.length; i < il; i++) {\r\n        s += theArgs[i].length;\r\n    }\r\n    // Create new full array\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++) {\r\n        for (var a = theArgs[i], j = 0, jl = a.length; j < jl; j++, k++) {\r\n            r[k] = a[j];\r\n        }\r\n    }\r\n    return r;\r\n}\r\nexport function __spreadArrayFn(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\r\n        to[j] = from[i];\r\n    }\r\n    return to;\r\n}\r\nexport function __makeTemplateObjectFn(cooked, raw) {\r\n    if (objDefineProp) {\r\n        objDefineProp(cooked, \"raw\", { value: raw });\r\n    }\r\n    else {\r\n        cooked.raw = raw;\r\n    }\r\n    return cooked;\r\n}\r\nexport function __importStarFn(mod) {\r\n    if (mod && mod.__esModule) {\r\n        return mod;\r\n    }\r\n    var result = {};\r\n    if (mod != null) {\r\n        for (var k in mod) {\r\n            if (k !== strDefault && Object.prototype.hasOwnProperty.call(mod, k)) {\r\n                __createBindingFn(result, mod, k);\r\n            }\r\n        }\r\n    }\r\n    // Set default module\r\n    if (!!objDefineProp) {\r\n        objDefineProp(result, strDefault, { enumerable: true, value: mod });\r\n    }\r\n    else {\r\n        result[strDefault] = mod;\r\n    }\r\n    return result;\r\n}\r\nexport function __importDefaultFn(mod) {\r\n    return (mod && mod.__esModule) ? mod : { strDefault: mod };\r\n}\r\n//# sourceMappingURL=TsLibShims.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar _a;\r\nimport { getGlobal, objCreate, objHasOwnProperty, throwTypeError } from \"@nevware21/ts-utils\";\r\n;\r\nvar UNDEFINED = \"undefined\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Constructor = 'constructor';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Prototype = 'prototype';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strFunction = 'function';\r\n/**\r\n * Used to define the name of the instance function lookup table\r\n * @ignore\r\n */\r\nvar DynInstFuncTable = '_dynInstFuncs';\r\n/**\r\n * Name used to tag the dynamic prototype function\r\n * @ignore\r\n */\r\nvar DynProxyTag = '_isDynProxy';\r\n/**\r\n * Name added to a prototype to define the dynamic prototype \"class\" name used to lookup the function table\r\n * @ignore\r\n */\r\nvar DynClassName = '_dynClass';\r\n/**\r\n * Prefix added to the classname to avoid any name clashes with other instance level properties\r\n * @ignore\r\n */\r\nvar DynClassNamePrefix = '_dynCls$';\r\n/**\r\n * A tag which is used to check if we have already to attempted to set the instance function if one is not present\r\n * @ignore\r\n */\r\nvar DynInstChkTag = '_dynInstChk';\r\n/**\r\n * A tag which is used to check if we are allows to try and set an instance function is one is not present. Using the same\r\n * tag name as the function level but a different const name for readability only.\r\n */\r\nvar DynAllowInstChkTag = DynInstChkTag;\r\n/**\r\n * The global (imported) instances where the global performance options are stored\r\n */\r\nvar DynProtoDefaultOptions = '_dfOpts';\r\n/**\r\n * Value used as the name of a class when it cannot be determined\r\n * @ignore\r\n */\r\nvar UnknownValue = '_unknown_';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar str__Proto = \"__proto__\";\r\n/**\r\n * The polyfill version of __proto__ so that it doesn't cause issues for anyone not expecting it to exist\r\n */\r\nvar DynProtoBaseProto = \"_dyn\" + str__Proto;\r\n/**\r\n * Runtime Global holder for dynamicProto settings\r\n */\r\nvar DynProtoGlobalSettings = \"__dynProto$Gbl\";\r\n/**\r\n * Track the current prototype for IE8 as you can't look back to get the prototype\r\n */\r\nvar DynProtoCurrent = \"_dynInstProto\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strUseBaseInst = 'useBaseInst';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strSetInstFuncs = 'setInstFuncs';\r\nvar Obj = Object;\r\n/**\r\n * Pre-lookup to check if we are running on a modern browser (i.e. not IE8)\r\n * @ignore\r\n */\r\nvar _objGetPrototypeOf = Obj[\"getPrototypeOf\"];\r\n/**\r\n * Pre-lookup to check for the existence of this function\r\n */\r\nvar _objGetOwnProps = Obj[\"getOwnPropertyNames\"];\r\n// Since 1.1.7 moving these to the runtime global to work around mixed version and module issues\r\n// See Issue https://github.com/microsoft/DynamicProto-JS/issues/57 for details\r\nvar _gbl = getGlobal();\r\nvar _gblInst = _gbl[DynProtoGlobalSettings] || (_gbl[DynProtoGlobalSettings] = {\r\n    o: (_a = {},\r\n        _a[strSetInstFuncs] = true,\r\n        _a[strUseBaseInst] = true,\r\n        _a),\r\n    n: 1000 // Start new global index @ 1000 so we \"fix\" some cases when mixed with 1.1.6 or earlier\r\n});\r\n/**\r\n * Helper used to check whether the target is an Object prototype or Array prototype\r\n * @ignore\r\n */\r\nfunction _isObjectOrArrayPrototype(target) {\r\n    return target && (target === Obj[Prototype] || target === Array[Prototype]);\r\n}\r\n/**\r\n * Helper used to check whether the target is an Object prototype, Array prototype or Function prototype\r\n * @ignore\r\n */\r\nfunction _isObjectArrayOrFunctionPrototype(target) {\r\n    return _isObjectOrArrayPrototype(target) || target === Function[Prototype];\r\n}\r\n/**\r\n * Helper used to get the prototype of the target object as getPrototypeOf is not available in an ES3 environment.\r\n * @ignore\r\n */\r\nfunction _getObjProto(target) {\r\n    var newProto;\r\n    if (target) {\r\n        // This method doesn't exist in older browsers (e.g. IE8)\r\n        if (_objGetPrototypeOf) {\r\n            return _objGetPrototypeOf(target);\r\n        }\r\n        var curProto = target[str__Proto] || target[Prototype] || (target[Constructor] ? target[Constructor][Prototype] : null);\r\n        // Using the pre-calculated value as IE8 doesn't support looking up the prototype of a prototype and thus fails for more than 1 base class\r\n        newProto = target[DynProtoBaseProto] || curProto;\r\n        if (!objHasOwnProperty(target, DynProtoBaseProto)) {\r\n            // As this prototype doesn't have this property then this is from an inherited class so newProto is the base to return so save it\r\n            // so we can look it up value (which for a multiple hierarchy dynamicProto will be the base class)\r\n            delete target[DynProtoCurrent]; // Delete any current value allocated to this instance so we pick up the value from prototype hierarchy\r\n            newProto = target[DynProtoBaseProto] = target[DynProtoCurrent] || target[DynProtoBaseProto];\r\n            target[DynProtoCurrent] = curProto;\r\n        }\r\n    }\r\n    return newProto;\r\n}\r\n/**\r\n * Helper to get the properties of an object, including none enumerable ones as functions on a prototype in ES6\r\n * are not enumerable.\r\n * @param target\r\n */\r\nfunction _forEachProp(target, func) {\r\n    var props = [];\r\n    if (_objGetOwnProps) {\r\n        props = _objGetOwnProps(target);\r\n    }\r\n    else {\r\n        for (var name_1 in target) {\r\n            if (typeof name_1 === \"string\" && objHasOwnProperty(target, name_1)) {\r\n                props.push(name_1);\r\n            }\r\n        }\r\n    }\r\n    if (props && props.length > 0) {\r\n        for (var lp = 0; lp < props.length; lp++) {\r\n            func(props[lp]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Helper function to check whether the provided function name is a potential candidate for dynamic\r\n * callback and prototype generation.\r\n * @param target The target object, may be a prototype or class object\r\n * @param funcName The function name\r\n * @param skipOwn Skips the check for own property\r\n * @ignore\r\n */\r\nfunction _isDynamicCandidate(target, funcName, skipOwn) {\r\n    return (funcName !== Constructor && typeof target[funcName] === strFunction && (skipOwn || objHasOwnProperty(target, funcName)) && funcName !== str__Proto && funcName !== Prototype);\r\n}\r\n/**\r\n * Helper to throw a TypeError exception\r\n * @param message the message\r\n * @ignore\r\n */\r\nfunction _throwTypeError(message) {\r\n    throwTypeError(\"DynamicProto: \" + message);\r\n}\r\n/**\r\n * Returns a collection of the instance functions that are defined directly on the thisTarget object, it does\r\n * not return any inherited functions\r\n * @param thisTarget The object to get the instance functions from\r\n * @ignore\r\n */\r\nfunction _getInstanceFuncs(thisTarget) {\r\n    // Get the base proto\r\n    var instFuncs = objCreate(null);\r\n    // Save any existing instance functions\r\n    _forEachProp(thisTarget, function (name) {\r\n        // Don't include any dynamic prototype instances - as we only want the real functions\r\n        if (!instFuncs[name] && _isDynamicCandidate(thisTarget, name, false)) {\r\n            // Create an instance callback for passing the base function to the caller\r\n            instFuncs[name] = thisTarget[name];\r\n        }\r\n    });\r\n    return instFuncs;\r\n}\r\n/**\r\n * Returns whether the value is included in the array\r\n * @param values The array of values\r\n * @param value  The value\r\n */\r\nfunction _hasVisited(values, value) {\r\n    for (var lp = values.length - 1; lp >= 0; lp--) {\r\n        if (values[lp] === value) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Returns an object that contains callback functions for all \"base/super\" functions, this is used to \"save\"\r\n * enabling calling super.xxx() functions without requiring that the base \"class\" has defined a prototype references\r\n * @param target The current instance\r\n * @ignore\r\n */\r\nfunction _getBaseFuncs(classProto, thisTarget, instFuncs, useBaseInst) {\r\n    function _instFuncProxy(target, funcHost, funcName) {\r\n        var theFunc = funcHost[funcName];\r\n        if (theFunc[DynProxyTag] && useBaseInst) {\r\n            // grab and reuse the hosted looking function (if available) otherwise the original passed function\r\n            var instFuncTable = target[DynInstFuncTable] || {};\r\n            if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n                theFunc = (instFuncTable[funcHost[DynClassName]] || {})[funcName] || theFunc;\r\n            }\r\n        }\r\n        return function () {\r\n            // eslint-disable-next-line prefer-rest-params\r\n            return theFunc.apply(target, arguments);\r\n        };\r\n    }\r\n    // Start creating a new baseFuncs by creating proxies for the instance functions (as they may get replaced)\r\n    var baseFuncs = objCreate(null);\r\n    _forEachProp(instFuncs, function (name) {\r\n        // Create an instance callback for passing the base function to the caller\r\n        baseFuncs[name] = _instFuncProxy(thisTarget, instFuncs, name);\r\n    });\r\n    // Get the base prototype functions\r\n    var baseProto = _getObjProto(classProto);\r\n    var visited = [];\r\n    // Don't include base object functions for Object, Array or Function\r\n    while (baseProto && !_isObjectArrayOrFunctionPrototype(baseProto) && !_hasVisited(visited, baseProto)) {\r\n        // look for prototype functions\r\n        _forEachProp(baseProto, function (name) {\r\n            // Don't include any dynamic prototype instances - as we only want the real functions\r\n            // For IE 7/8 the prototype lookup doesn't provide the full chain so we need to bypass the \r\n            // hasOwnProperty check we get all of the methods, main difference is that IE7/8 doesn't return\r\n            // the Object prototype methods while bypassing the check\r\n            if (!baseFuncs[name] && _isDynamicCandidate(baseProto, name, !_objGetPrototypeOf)) {\r\n                // Create an instance callback for passing the base function to the caller\r\n                baseFuncs[name] = _instFuncProxy(thisTarget, baseProto, name);\r\n            }\r\n        });\r\n        // We need to find all possible functions that might be overloaded by walking the entire prototype chain\r\n        // This avoids the caller from needing to check whether it's direct base class implements the function or not\r\n        // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.\r\n        visited.push(baseProto);\r\n        baseProto = _getObjProto(baseProto);\r\n    }\r\n    return baseFuncs;\r\n}\r\nfunction _getInstFunc(target, funcName, proto, currentDynProtoProxy) {\r\n    var instFunc = null;\r\n    // We need to check whether the class name is defined directly on this prototype otherwise\r\n    // it will walk the proto chain and return any parent proto classname.\r\n    if (target && objHasOwnProperty(proto, DynClassName)) {\r\n        var instFuncTable = target[DynInstFuncTable] || objCreate(null);\r\n        instFunc = (instFuncTable[proto[DynClassName]] || objCreate(null))[funcName];\r\n        if (!instFunc) {\r\n            // Avoid stack overflow from recursive calling the same function\r\n            _throwTypeError(\"Missing [\" + funcName + \"] \" + strFunction);\r\n        }\r\n        // We have the instance function, lets check it we can speed up further calls\r\n        // by adding the instance function back directly on the instance (avoiding the dynamic func lookup)\r\n        if (!instFunc[DynInstChkTag] && instFuncTable[DynAllowInstChkTag] !== false) {\r\n            // If the instance already has an instance function we can't replace it\r\n            var canAddInst = !objHasOwnProperty(target, funcName);\r\n            // Get current prototype\r\n            var objProto = _getObjProto(target);\r\n            var visited = [];\r\n            // Lookup the function starting at the top (instance level prototype) and traverse down, if the first matching function\r\n            // if nothing is found or if the first hit is a dynamic proto instance then we can safely add an instance shortcut\r\n            while (canAddInst && objProto && !_isObjectArrayOrFunctionPrototype(objProto) && !_hasVisited(visited, objProto)) {\r\n                var protoFunc = objProto[funcName];\r\n                if (protoFunc) {\r\n                    canAddInst = (protoFunc === currentDynProtoProxy);\r\n                    break;\r\n                }\r\n                // We need to find all possible initial functions to ensure that we don't bypass a valid override function\r\n                visited.push(objProto);\r\n                objProto = _getObjProto(objProto);\r\n            }\r\n            try {\r\n                if (canAddInst) {\r\n                    // This instance doesn't have an instance func and the class hierarchy does have a higher level prototype version\r\n                    // so it's safe to directly assign for any subsequent calls (for better performance)\r\n                    target[funcName] = instFunc;\r\n                }\r\n                // Block further attempts to set the instance function for any\r\n                instFunc[DynInstChkTag] = 1;\r\n            }\r\n            catch (e) {\r\n                // Don't crash if the object is readonly or the runtime doesn't allow changing this\r\n                // And set a flag so we don't try again for any function\r\n                instFuncTable[DynAllowInstChkTag] = false;\r\n            }\r\n        }\r\n    }\r\n    return instFunc;\r\n}\r\nfunction _getProtoFunc(funcName, proto, currentDynProtoProxy) {\r\n    var protoFunc = proto[funcName];\r\n    // Check that the prototype function is not a self reference -- try to avoid stack overflow!\r\n    if (protoFunc === currentDynProtoProxy) {\r\n        // It is so lookup the base prototype\r\n        protoFunc = _getObjProto(proto)[funcName];\r\n    }\r\n    if (typeof protoFunc !== strFunction) {\r\n        _throwTypeError(\"[\" + funcName + \"] is not a \" + strFunction);\r\n    }\r\n    return protoFunc;\r\n}\r\n/**\r\n * Add the required dynamic prototype methods to the the class prototype\r\n * @param proto - The class prototype\r\n * @param className - The instance classname\r\n * @param target - The target instance\r\n * @param baseInstFuncs - The base instance functions\r\n * @param setInstanceFunc - Flag to allow prototype function to reset the instance function if one does not exist\r\n * @ignore\r\n */\r\nfunction _populatePrototype(proto, className, target, baseInstFuncs, setInstanceFunc) {\r\n    function _createDynamicPrototype(proto, funcName) {\r\n        var dynProtoProxy = function () {\r\n            // Use the instance or prototype function\r\n            var instFunc = _getInstFunc(this, funcName, proto, dynProtoProxy) || _getProtoFunc(funcName, proto, dynProtoProxy);\r\n            // eslint-disable-next-line prefer-rest-params\r\n            return instFunc.apply(this, arguments);\r\n        };\r\n        // Tag this function as a proxy to support replacing dynamic proxy elements (primary use case is for unit testing\r\n        // via which can dynamically replace the prototype function reference)\r\n        dynProtoProxy[DynProxyTag] = 1;\r\n        return dynProtoProxy;\r\n    }\r\n    if (!_isObjectOrArrayPrototype(proto)) {\r\n        var instFuncTable = target[DynInstFuncTable] = target[DynInstFuncTable] || objCreate(null);\r\n        if (!_isObjectOrArrayPrototype(instFuncTable)) {\r\n            var instFuncs_1 = instFuncTable[className] = (instFuncTable[className] || objCreate(null)); // fetch and assign if as it may not exist yet\r\n            // Set whether we are allow to lookup instances, if someone has set to false then do not re-enable\r\n            if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n                instFuncTable[DynAllowInstChkTag] = !!setInstanceFunc;\r\n            }\r\n            if (!_isObjectOrArrayPrototype(instFuncs_1)) {\r\n                _forEachProp(target, function (name) {\r\n                    // Only add overridden functions\r\n                    if (_isDynamicCandidate(target, name, false) && target[name] !== baseInstFuncs[name]) {\r\n                        // Save the instance Function to the lookup table and remove it from the instance as it's not a dynamic proto function\r\n                        instFuncs_1[name] = target[name];\r\n                        delete target[name];\r\n                        // Add a dynamic proto if one doesn't exist or if a prototype function exists and it's not a dynamic one\r\n                        if (!objHasOwnProperty(proto, name) || (proto[name] && !proto[name][DynProxyTag])) {\r\n                            proto[name] = _createDynamicPrototype(proto, name);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Checks whether the passed prototype object appears to be correct by walking the prototype hierarchy of the instance\r\n * @param classProto The class prototype instance\r\n * @param thisTarget The current instance that will be checked whether the passed prototype instance is in the hierarchy\r\n * @ignore\r\n */\r\nfunction _checkPrototype(classProto, thisTarget) {\r\n    // This method doesn't existing in older browsers (e.g. IE8)\r\n    if (_objGetPrototypeOf) {\r\n        // As this is primarily a coding time check, don't bother checking if running in IE8 or lower\r\n        var visited = [];\r\n        var thisProto = _getObjProto(thisTarget);\r\n        while (thisProto && !_isObjectArrayOrFunctionPrototype(thisProto) && !_hasVisited(visited, thisProto)) {\r\n            if (thisProto === classProto) {\r\n                return true;\r\n            }\r\n            // This avoids the caller from needing to check whether it's direct base class implements the function or not\r\n            // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.\r\n            visited.push(thisProto);\r\n            thisProto = _getObjProto(thisProto);\r\n        }\r\n        return false;\r\n    }\r\n    // If objGetPrototypeOf doesn't exist then just assume everything is ok.\r\n    return true;\r\n}\r\n/**\r\n * Gets the current prototype name using the ES6 name if available otherwise falling back to a use unknown as the name.\r\n * It's not critical for this to return a name, it's used to decorate the generated unique name for easier debugging only.\r\n * @param target\r\n * @param unknownValue\r\n * @ignore\r\n */\r\nfunction _getObjName(target, unknownValue) {\r\n    if (objHasOwnProperty(target, Prototype)) {\r\n        // Look like a prototype\r\n        return target.name || unknownValue || UnknownValue;\r\n    }\r\n    return (((target || {})[Constructor]) || {}).name || unknownValue || UnknownValue;\r\n}\r\n/**\r\n * Helper function when creating dynamic (inline) functions for classes, this helper performs the following tasks :-\r\n * - Saves references to all defined base class functions\r\n * - Calls the delegateFunc with the current target (this) and a base object reference that can be used to call all \"super\" functions.\r\n * - Will populate the class prototype for all overridden functions to support class extension that call the prototype instance.\r\n * Callers should use this helper when declaring all function within the constructor of a class, as mentioned above the delegateFunc is\r\n * passed both the target \"this\" and an object that can be used to call any base (super) functions, using this based object in place of\r\n * super.XXX() (which gets expanded to _super.prototype.XXX()) provides a better minification outcome and also ensures the correct \"this\"\r\n * context is maintained as TypeScript creates incorrect references using super.XXXX() for dynamically defined functions i.e. Functions\r\n * defined in the constructor or some other function (rather than declared as complete typescript functions).\r\n * ### Usage\r\n * ```typescript\r\n * import dynamicProto from \"@microsoft/dynamicproto-js\";\r\n * class ExampleClass extends BaseClass {\r\n *     constructor() {\r\n *         dynamicProto(ExampleClass, this, (_self, base) => {\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.newFunc = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     ...\r\n *                 }\r\n *             }\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.myFunction = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     // Call the base version of the function that we are overriding\r\n *                     base.myFunction();\r\n *                 }\r\n *                 ...\r\n *             }\r\n *             _self.initialize = () => {\r\n *                 ...\r\n *             }\r\n *             // Warnings: While the following will work as _self is simply a reference to\r\n *             // this, if anyone overrides myFunction() the overridden will be called first\r\n *             // as the normal JavaScript method resolution will occur and the defined\r\n *             // _self.initialize() function is actually gets removed from the instance and\r\n *             // a proxy prototype version is created to reference the created method.\r\n *             _self.initialize();\r\n *         });\r\n *     }\r\n * }\r\n * ```\r\n * @typeparam DPType This is the generic type of the class, used to keep intellisense valid\r\n * @typeparam DPCls The type that contains the prototype of the current class\r\n * @param theClass - This is the current class instance which contains the prototype for the current class\r\n * @param target - The current \"this\" (target) reference, when the class has been extended this.prototype will not be the 'theClass' value.\r\n * @param delegateFunc - The callback function (closure) that will create the dynamic function\r\n * @param options - Additional options to configure how the dynamic prototype operates\r\n */\r\nexport default function dynamicProto(theClass, target, delegateFunc, options) {\r\n    // Make sure that the passed theClass argument looks correct\r\n    if (!objHasOwnProperty(theClass, Prototype)) {\r\n        _throwTypeError(\"theClass is an invalid class definition.\");\r\n    }\r\n    // Quick check to make sure that the passed theClass argument looks correct (this is a common copy/paste error)\r\n    var classProto = theClass[Prototype];\r\n    if (!_checkPrototype(classProto, target)) {\r\n        _throwTypeError(\"[\" + _getObjName(theClass) + \"] not in hierarchy of [\" + _getObjName(target) + \"]\");\r\n    }\r\n    var className = null;\r\n    if (objHasOwnProperty(classProto, DynClassName)) {\r\n        // Only grab the class name if it's defined on this prototype (i.e. don't walk the prototype chain)\r\n        className = classProto[DynClassName];\r\n    }\r\n    else {\r\n        // As not all browser support name on the prototype creating a unique dynamic one if we have not already\r\n        // assigned one, so we can use a simple string as the lookup rather than an object for the dynamic instance\r\n        // function table lookup.\r\n        className = DynClassNamePrefix + _getObjName(theClass, \"_\") + \"$\" + _gblInst.n;\r\n        _gblInst.n++;\r\n        classProto[DynClassName] = className;\r\n    }\r\n    var perfOptions = dynamicProto[DynProtoDefaultOptions];\r\n    var useBaseInst = !!perfOptions[strUseBaseInst];\r\n    if (useBaseInst && options && options[strUseBaseInst] !== undefined) {\r\n        useBaseInst = !!options[strUseBaseInst];\r\n    }\r\n    // Get the current instance functions\r\n    var instFuncs = _getInstanceFuncs(target);\r\n    // Get all of the functions for any base instance (before they are potentially overridden)\r\n    var baseFuncs = _getBaseFuncs(classProto, target, instFuncs, useBaseInst);\r\n    // Execute the delegate passing in both the current target \"this\" and \"base\" function references\r\n    // Note casting the same type as we don't actually have the base class here and this will provide some intellisense support\r\n    delegateFunc(target, baseFuncs);\r\n    // Don't allow setting instance functions for older IE instances\r\n    var setInstanceFunc = !!_objGetPrototypeOf && !!perfOptions[strSetInstFuncs];\r\n    if (setInstanceFunc && options) {\r\n        setInstanceFunc = !!options[strSetInstFuncs];\r\n    }\r\n    // Populate the Prototype for any overridden instance functions\r\n    _populatePrototype(classProto, className, target, instFuncs, setInstanceFunc !== false);\r\n}\r\n/**\r\n * Exposes the default global options to allow global configuration, if the global values are disabled these will override\r\n * any passed values. This is primarily exposed to support unit-testing without the need for individual classes to expose\r\n * their internal usage of dynamic proto.\r\n */\r\ndynamicProto[DynProtoDefaultOptions] = _gblInst.o;\r\n//# sourceMappingURL=DynamicProto.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnum, createTypeMap } from \"@nevware21/ts-utils\";\r\n/**\r\n * Create an enum style object which has both the key \\=\\> value and value \\=\\> key mappings\r\n * @param values - The values to populate on the new object\r\n * @returns\r\n */\r\nexport var createEnumStyle = createEnum;\r\n/**\r\n * Create a 2 index map that maps an enum's key and value to the defined map value, X[\"key\"] \\=\\> mapValue and X[0] \\=\\> mapValue.\r\n * Generic values\r\n * - E = the const enum type (typeof eRequestHeaders);\r\n * - V = Identifies the valid values for the keys, this should include both the enum numeric and string key of the type. The\r\n * resulting \"Value\" of each entry identifies the valid values withing the assignments.\r\n * @param values - The values to populate on the new object\r\n * @returns\r\n */\r\nexport var createValueMap = createTypeMap;\r\n//# sourceMappingURL=EnumHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, createCustomError, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nvar aggregationErrorType;\r\n/**\r\n * Throws an Aggregation Error which includes all of the errors that led to this error occurring\r\n * @param message - The message describing the aggregation error (the sourceError details are added to this)\r\n * @param sourceErrors - An array of the errors that caused this situation\r\n */\r\nexport function throwAggregationError(message, sourceErrors) {\r\n    if (!aggregationErrorType) {\r\n        aggregationErrorType = createCustomError(\"AggregationError\", function (self, args) {\r\n            if (args[_DYN_LENGTH /* @min:%2elength */] > 1) {\r\n                // Save the provided errors\r\n                self.errors = args[1];\r\n            }\r\n        });\r\n    }\r\n    var theMessage = message || \"One or more errors occurred.\";\r\n    arrForEach(sourceErrors, function (srcError, idx) {\r\n        theMessage += \"\\n\".concat(idx, \" > \").concat(dumpObj(srcError));\r\n    });\r\n    throw new aggregationErrorType(theMessage, sourceErrors || []);\r\n}\r\n//# sourceMappingURL=AggregationError.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES5 which can result in a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_TO_LOWER_CASE = \"toLowerCase\"; // Count: 11\r\nexport var _DYN_LENGTH = \"length\"; // Count: 55\r\nexport var _DYN_WARN_TO_CONSOLE = \"warnToConsole\"; // Count: 4\r\nexport var _DYN_THROW_INTERNAL = \"throwInternal\"; // Count: 5\r\nexport var _DYN_WATCH = \"watch\"; // Count: 7\r\nexport var _DYN_APPLY = \"apply\"; // Count: 7\r\nexport var _DYN_PUSH = \"push\"; // Count: 35\r\nexport var _DYN_SPLICE = \"splice\"; // Count: 8\r\nexport var _DYN_LOGGER = \"logger\"; // Count: 20\r\nexport var _DYN_CANCEL = \"cancel\"; // Count: 6\r\nexport var _DYN_INITIALIZE = \"initialize\"; // Count: 5\r\nexport var _DYN_IDENTIFIER = \"identifier\"; // Count: 8\r\nexport var _DYN_REMOVE_NOTIFICATION_0 = \"removeNotificationListener\"; // Count: 4\r\nexport var _DYN_ADD_NOTIFICATION_LIS1 = \"addNotificationListener\"; // Count: 4\r\nexport var _DYN_IS_INITIALIZED = \"isInitialized\"; // Count: 10\r\nexport var _DYN_VALUE = \"value\"; // Count: 5\r\nexport var _DYN_GET_NOTIFY_MGR = \"getNotifyMgr\"; // Count: 5\r\nexport var _DYN_GET_PLUGIN = \"getPlugin\"; // Count: 5\r\nexport var _DYN_NAME = \"name\"; // Count: 9\r\nexport var _DYN_PROCESS_NEXT = \"processNext\"; // Count: 15\r\nexport var _DYN_GET_PROCESS_TEL_CONT2 = \"getProcessTelContext\"; // Count: 2\r\nexport var _DYN_ENABLED = \"enabled\"; // Count: 6\r\nexport var _DYN_STOP_POLLING_INTERNA3 = \"stopPollingInternalLogs\"; // Count: 2\r\nexport var _DYN_UNLOAD = \"unload\"; // Count: 7\r\nexport var _DYN_ON_COMPLETE = \"onComplete\"; // Count: 4\r\nexport var _DYN_VERSION = \"version\"; // Count: 4\r\nexport var _DYN_LOGGING_LEVEL_CONSOL4 = \"loggingLevelConsole\"; // Count: 2\r\nexport var _DYN_CREATE_NEW = \"createNew\"; // Count: 7\r\nexport var _DYN_TEARDOWN = \"teardown\"; // Count: 9\r\nexport var _DYN_MESSAGE_ID = \"messageId\"; // Count: 4\r\nexport var _DYN_MESSAGE = \"message\"; // Count: 7\r\nexport var _DYN_DIAG_LOG = \"diagLog\"; // Count: 9\r\nexport var _DYN__DO_TEARDOWN = \"_doTeardown\"; // Count: 5\r\nexport var _DYN_UPDATE = \"update\"; // Count: 5\r\nexport var _DYN_GET_NEXT = \"getNext\"; // Count: 10\r\nexport var _DYN_SET_NEXT_PLUGIN = \"setNextPlugin\"; // Count: 5\r\nexport var _DYN_USER_AGENT = \"userAgent\"; // Count: 5\r\nexport var _DYN_SPLIT = \"split\"; // Count: 7\r\nexport var _DYN_REPLACE = \"replace\"; // Count: 9\r\nexport var _DYN_TYPE = \"type\"; // Count: 13\r\nexport var _DYN_EVT_NAME = \"evtName\"; // Count: 4\r\nexport var _DYN_STATUS = \"status\"; // Count: 5\r\nexport var _DYN_GET_ALL_RESPONSE_HEA5 = \"getAllResponseHeaders\"; // Count: 2\r\nexport var _DYN_IS_CHILD_EVT = \"isChildEvt\"; // Count: 3\r\nexport var _DYN_DATA = \"data\"; // Count: 6\r\nexport var _DYN_GET_CTX = \"getCtx\"; // Count: 6\r\nexport var _DYN_SET_CTX = \"setCtx\"; // Count: 10\r\nexport var _DYN_ITEMS_RECEIVED = \"itemsReceived\"; // Count: 3\r\nexport var _DYN_URL_STRING = \"urlString\"; // Count: 5\r\nexport var _DYN_HEADERS = \"headers\"; // Count: 5\r\nexport var _DYN_TIMEOUT = \"timeout\"; // Count: 6\r\nexport var _DYN_TRACE_FLAGS = \"traceFlags\"; // Count: 5\r\nexport var _DYN_GET_ATTRIBUTE = \"getAttribute\"; // Count: 3\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// ###################################################################################################################################################\r\n// Note: DON'T Export these const from the package as we are still targeting IE/ES5 this will export a mutable variables that someone could change ###\r\n// ###################################################################################################################################################\r\nexport var UNDEFINED_VALUE = undefined;\r\nexport var STR_EMPTY = \"\";\r\nexport var STR_CHANNELS = \"channels\";\r\nexport var STR_CORE = \"core\";\r\nexport var STR_CREATE_PERF_MGR = \"createPerfMgr\";\r\nexport var STR_DISABLED = \"disabled\";\r\nexport var STR_EXTENSION_CONFIG = \"extensionConfig\";\r\nexport var STR_EXTENSIONS = \"extensions\";\r\nexport var STR_PROCESS_TELEMETRY = \"processTelemetry\";\r\nexport var STR_PRIORITY = \"priority\";\r\nexport var STR_EVENTS_SENT = \"eventsSent\";\r\nexport var STR_EVENTS_DISCARDED = \"eventsDiscarded\";\r\nexport var STR_EVENTS_SEND_REQUEST = \"eventsSendRequest\";\r\nexport var STR_PERF_EVENT = \"perfEvent\";\r\nexport var STR_OFFLINE_STORE = \"offlineEventsStored\";\r\nexport var STR_OFFLINE_SENT = \"offlineBatchSent\";\r\nexport var STR_OFFLINE_DROP = \"offlineBatchDrop\";\r\nexport var STR_GET_PERF_MGR = \"getPerfMgr\";\r\nexport var STR_DOMAIN = \"domain\";\r\nexport var STR_PATH = \"path\";\r\nexport var STR_NOT_DYNAMIC_ERROR = \"Not dynamic - \";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { ObjAssign, ObjClass } from \"@microsoft/applicationinsights-shims\";\r\nimport { arrForEach, asString as asString21, isArray, isBoolean, isError, isFunction, isNullOrUndefined, isNumber, isObject, isPlainObject, isString, isUndefined, objDeepFreeze, objDefine, objForEachKey, objHasOwn, strIndexOf, strTrim } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_GET_ALL_RESPONSE_HEA5, _DYN_LENGTH, _DYN_NAME, _DYN_REPLACE, _DYN_SPLIT, _DYN_STATUS, _DYN_TO_LOWER_CASE } from \"../__DynamicConstants\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// RESTRICT and AVOID circular dependencies you should not import other contained modules or export the contents of this file directly\r\n// Added to help with minification\r\nvar strGetPrototypeOf = \"getPrototypeOf\";\r\nvar rCamelCase = /-([a-z])/g;\r\nvar rNormalizeInvalid = /([^\\w\\d_$])/g;\r\nvar rLeadingNumeric = /^(\\d+[\\w\\d_$])/;\r\nexport var _getObjProto = Object[strGetPrototypeOf];\r\nexport function isNotUndefined(value) {\r\n    return !isUndefined(value);\r\n}\r\nexport function isNotNullOrUndefined(value) {\r\n    return !isNullOrUndefined(value);\r\n}\r\n/**\r\n * Validates that the string name conforms to the JS IdentifierName specification and if not\r\n * normalizes the name so that it would. This method does not identify or change any keywords\r\n * meaning that if you pass in a known keyword the same value will be returned.\r\n * This is a simplified version\r\n * @param name - The name to validate\r\n */\r\nexport function normalizeJsName(name) {\r\n    var value = name;\r\n    if (value && isString(value)) {\r\n        // CamelCase everything after the \"-\" and remove the dash\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rCamelCase, function (_all, letter) {\r\n            return letter.toUpperCase();\r\n        });\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rNormalizeInvalid, \"_\");\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rLeadingNumeric, function (_all, match) {\r\n            return \"_\" + match;\r\n        });\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * A simple wrapper (for minification support) to check if the value contains the search string.\r\n * @param value - The string value to check for the existence of the search value\r\n * @param search - The value search within the value\r\n */\r\nexport function strContains(value, search) {\r\n    if (value && search) {\r\n        return strIndexOf(value, search) !== -1;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Convert a date to I.S.O. format in IE8\r\n */\r\nexport function toISOString(date) {\r\n    return date && date.toISOString() || \"\";\r\n}\r\nexport var deepFreeze = objDeepFreeze;\r\n/**\r\n * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n */\r\nexport function getExceptionName(object) {\r\n    if (isError(object)) {\r\n        return object[_DYN_NAME /* @min:%2ename */];\r\n    }\r\n    return STR_EMPTY;\r\n}\r\n/**\r\n * Sets the provided value on the target instance using the field name when the provided chk function returns true, the chk\r\n * function will only be called if the new value is no equal to the original value.\r\n * @param target - The target object\r\n * @param field - The key of the target\r\n * @param value - The value to set\r\n * @param valChk - [Optional] Callback to check the value that if supplied will be called check if the new value can be set\r\n * @param srcChk - [Optional] Callback to check to original value that if supplied will be called if the new value should be set (if allowed)\r\n * @returns The existing or new value, depending what was set\r\n */\r\nexport function setValue(target, field, value, valChk, srcChk) {\r\n    var theValue = value;\r\n    if (target) {\r\n        theValue = target[field];\r\n        if (theValue !== value && (!srcChk || srcChk(theValue)) && (!valChk || valChk(value))) {\r\n            theValue = value;\r\n            target[field] = theValue;\r\n        }\r\n    }\r\n    return theValue;\r\n}\r\n/**\r\n * Returns the current value from the target object if not null or undefined otherwise sets the new value and returns it\r\n * @param target - The target object to return or set the default value\r\n * @param field - The key for the field to set on the target\r\n * @param defValue - [Optional] The value to set if not already present, when not provided a empty object will be added\r\n */\r\nexport function getSetValue(target, field, defValue) {\r\n    var theValue;\r\n    if (target) {\r\n        theValue = target[field];\r\n        if (!theValue && isNullOrUndefined(theValue)) {\r\n            // Supports having the default as null\r\n            theValue = !isUndefined(defValue) ? defValue : {};\r\n            target[field] = theValue;\r\n        }\r\n    }\r\n    else {\r\n        // Expanded for performance so we only check defValue if required\r\n        theValue = !isUndefined(defValue) ? defValue : {};\r\n    }\r\n    return theValue;\r\n}\r\nfunction _createProxyFunction(source, funcName) {\r\n    var srcFunc = null;\r\n    var src = null;\r\n    if (isFunction(source)) {\r\n        srcFunc = source;\r\n    }\r\n    else {\r\n        src = source;\r\n    }\r\n    return function () {\r\n        // Capture the original arguments passed to the method\r\n        var originalArguments = arguments;\r\n        if (srcFunc) {\r\n            src = srcFunc();\r\n        }\r\n        if (src) {\r\n            return src[funcName][_DYN_APPLY /* @min:%2eapply */](src, originalArguments);\r\n        }\r\n    };\r\n}\r\n/**\r\n * Effectively assigns all enumerable properties (not just own properties) and functions (including inherited prototype) from\r\n * the source object to the target, it attempts to use proxy getters / setters (if possible) and proxy functions to avoid potential\r\n * implementation issues by assigning prototype functions as instance ones\r\n *\r\n * This method is the primary method used to \"update\" the snippet proxy with the ultimate implementations.\r\n *\r\n * Special ES3 Notes:\r\n * Updates (setting) of direct property values on the target or indirectly on the source object WILL NOT WORK PROPERLY, updates to the\r\n * properties of \"referenced\" object will work (target.context.newValue = 10 =\\> will be reflected in the source.context as it's the\r\n * same object). ES3 Failures: assigning target.myProp = 3 -\\> Won't change source.myProp = 3, likewise the reverse would also fail.\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param chkSet - An optional callback to determine whether a specific property/function should be proxied\r\n */\r\nexport function proxyAssign(target, source, chkSet) {\r\n    if (target && source && isObject(target) && isObject(source)) {\r\n        var _loop_1 = function (field) {\r\n            if (isString(field)) {\r\n                var value = source[field];\r\n                if (isFunction(value)) {\r\n                    if (!chkSet || chkSet(field, true, source, target)) {\r\n                        // Create a proxy function rather than just copying the (possible) prototype to the new object as an instance function\r\n                        target[field] = _createProxyFunction(source, field);\r\n                    }\r\n                }\r\n                else if (!chkSet || chkSet(field, false, source, target)) {\r\n                    if (objHasOwn(target, field)) {\r\n                        // Remove any previous instance property\r\n                        delete target[field];\r\n                    }\r\n                    objDefine(target, field, {\r\n                        g: function () {\r\n                            return source[field];\r\n                        },\r\n                        s: function (theValue) {\r\n                            source[field] = theValue;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        // effectively apply/proxy full source to the target instance\r\n        for (var field in source) {\r\n            _loop_1(field);\r\n        }\r\n    }\r\n    return target;\r\n}\r\n/**\r\n * Creates a proxy function on the target which internally will call the source version with all arguments passed to the target method.\r\n *\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param name - The function name that will be added on the target\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param theFunc - The function name on the source that will be proxied on the target\r\n * @param overwriteTarget - If `false` this will not replace any pre-existing name otherwise (the default) it will overwrite any existing name\r\n */\r\nexport function proxyFunctionAs(target, name, source, theFunc, overwriteTarget) {\r\n    if (target && name && source) {\r\n        if (overwriteTarget !== false || isUndefined(target[name])) {\r\n            target[name] = _createProxyFunction(source, theFunc);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Creates proxy functions on the target which internally will call the source version with all arguments passed to the target method.\r\n *\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param functionsToProxy - An array of function names that will be proxied on the target\r\n * @param overwriteTarget - If false this will not replace any pre-existing name otherwise (the default) it will overwrite any existing name\r\n */\r\nexport function proxyFunctions(target, source, functionsToProxy, overwriteTarget) {\r\n    if (target && source && isObject(target) && isArray(functionsToProxy)) {\r\n        arrForEach(functionsToProxy, function (theFuncName) {\r\n            if (isString(theFuncName)) {\r\n                proxyFunctionAs(target, theFuncName, source, theFuncName, overwriteTarget);\r\n            }\r\n        });\r\n    }\r\n    return target;\r\n}\r\n/**\r\n * Simpler helper to create a dynamic class that implements the interface and populates the values with the defaults.\r\n * Only instance properties (hasOwnProperty) values are copied from the defaults to the new instance\r\n * @param defaults - Simple helper\r\n */\r\nexport function createClassFromInterface(defaults) {\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            var _this = this;\r\n            if (defaults) {\r\n                objForEachKey(defaults, function (field, value) {\r\n                    _this[field] = value;\r\n                });\r\n            }\r\n        }\r\n        return class_1;\r\n    }());\r\n}\r\n/**\r\n * A helper function to assist with JIT performance for objects that have properties added / removed dynamically\r\n * this is primarily for chromium based browsers and has limited effects on Firefox and none of IE. Only call this\r\n * function after you have finished \"updating\" the object, calling this within loops reduces or defeats the benefits.\r\n * This helps when iterating using for..in, objKeys() and objForEach()\r\n * @param theObject - The object to be optimized if possible\r\n */\r\nexport function optimizeObject(theObject) {\r\n    // V8 Optimization to cause the JIT compiler to create a new optimized object for looking up the own properties\r\n    // primarily for object with <= 19 properties for >= 20 the effect is reduced or non-existent\r\n    if (theObject && ObjAssign) {\r\n        theObject = ObjClass(ObjAssign({}, theObject));\r\n    }\r\n    return theObject;\r\n}\r\nexport function objExtend(obj1, obj2, obj3, obj4, obj5, obj6) {\r\n    // Variables\r\n    var theArgs = arguments;\r\n    var extended = theArgs[0] || {};\r\n    var argLen = theArgs[_DYN_LENGTH /* @min:%2elength */];\r\n    var deep = false;\r\n    var idx = 1;\r\n    // Check for \"Deep\" flag\r\n    if (argLen > 0 && isBoolean(extended)) {\r\n        deep = extended;\r\n        extended = theArgs[idx] || {};\r\n        idx++;\r\n    }\r\n    // Handle case when target is a string or something (possible in deep copy)\r\n    if (!isObject(extended)) {\r\n        extended = {};\r\n    }\r\n    // Loop through each remaining object and conduct a merge\r\n    for (; idx < argLen; idx++) {\r\n        var arg = theArgs[idx];\r\n        var isArgArray = isArray(arg);\r\n        var isArgObj = isObject(arg);\r\n        for (var prop in arg) {\r\n            var propOk = (isArgArray && (prop in arg)) || (isArgObj && objHasOwn(arg, prop));\r\n            if (!propOk) {\r\n                continue;\r\n            }\r\n            var newValue = arg[prop];\r\n            var isNewArray = void 0;\r\n            // If deep merge and property is an object, merge properties\r\n            if (deep && newValue && ((isNewArray = isArray(newValue)) || isPlainObject(newValue))) {\r\n                // Grab the current value of the extended object\r\n                var clone = extended[prop];\r\n                if (isNewArray) {\r\n                    if (!isArray(clone)) {\r\n                        // We can't \"merge\" an array with a non-array so overwrite the original\r\n                        clone = [];\r\n                    }\r\n                }\r\n                else if (!isPlainObject(clone)) {\r\n                    // We can't \"merge\" an object with a non-object\r\n                    clone = {};\r\n                }\r\n                // Never move the original objects always clone them\r\n                newValue = objExtend(deep, clone, newValue);\r\n            }\r\n            // Assign the new (or previous) value (unless undefined)\r\n            if (newValue !== undefined) {\r\n                extended[prop] = newValue;\r\n            }\r\n        }\r\n    }\r\n    return extended;\r\n}\r\nexport var asString = asString21;\r\nexport function isFeatureEnabled(feature, cfg) {\r\n    var rlt = false;\r\n    var ft = cfg && cfg.featureOptIn && cfg.featureOptIn[feature];\r\n    if (feature && ft) {\r\n        var mode = ft.mode;\r\n        // NOTE: None will be considered as true\r\n        rlt = (mode == 3 /* FeatureOptInMode.enable */) || (mode == 1 /* FeatureOptInMode.none */);\r\n    }\r\n    return rlt;\r\n}\r\nexport function getResponseText(xhr) {\r\n    try {\r\n        return xhr.responseText;\r\n    }\r\n    catch (e) {\r\n        // Best effort, as XHR may throw while XDR wont so just ignore\r\n    }\r\n    return null;\r\n}\r\nexport function formatErrorMessageXdr(xdr, message) {\r\n    if (xdr) {\r\n        return \"XDomainRequest,Response:\" + getResponseText(xdr) || \"\";\r\n    }\r\n    return message;\r\n}\r\nexport function formatErrorMessageXhr(xhr, message) {\r\n    if (xhr) {\r\n        return \"XMLHttpRequest,Status:\" + xhr[_DYN_STATUS /* @min:%2estatus */] + \",Response:\" + getResponseText(xhr) || xhr.response || \"\";\r\n    }\r\n    return message;\r\n}\r\nexport function prependTransports(theTransports, newTransports) {\r\n    if (newTransports) {\r\n        if (isNumber(newTransports)) {\r\n            theTransports = [newTransports].concat(theTransports);\r\n        }\r\n        else if (isArray(newTransports)) {\r\n            theTransports = newTransports.concat(theTransports);\r\n        }\r\n    }\r\n    return theTransports;\r\n}\r\nvar strDisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nvar strWithCredentials = \"withCredentials\";\r\nvar strTimeout = \"timeout\";\r\n/**\r\n * Create and open an XMLHttpRequest object\r\n * @param method - The request method\r\n * @param urlString - The url\r\n * @param withCredentials - Option flag indicating that credentials should be sent\r\n * @param disabled - Optional flag indicating that the XHR object should be marked as disabled and not tracked (default is false)\r\n * @param isSync - Optional flag indicating if the instance should be a synchronous request (defaults to false)\r\n * @param timeout - Optional value identifying the timeout value that should be assigned to the XHR request\r\n * @returns A new opened XHR request\r\n */\r\nexport function openXhr(method, urlString, withCredentials, disabled, isSync, timeout) {\r\n    if (disabled === void 0) { disabled = false; }\r\n    if (isSync === void 0) { isSync = false; }\r\n    function _wrapSetXhrProp(xhr, prop, value) {\r\n        try {\r\n            xhr[prop] = value;\r\n        }\r\n        catch (e) {\r\n            // - Wrapping as depending on the environment setting the property may fail (non-terminally)\r\n        }\r\n    }\r\n    var xhr = new XMLHttpRequest();\r\n    if (disabled) {\r\n        // Tag the instance so it's not tracked (trackDependency)\r\n        // If the environment has locked down the XMLHttpRequest (preventExtensions and/or freeze), this would\r\n        // cause the request to fail and we no telemetry would be sent\r\n        _wrapSetXhrProp(xhr, strDisabledPropertyName, disabled);\r\n    }\r\n    if (withCredentials) {\r\n        // Some libraries require that the withCredentials flag is set \"before\" open and\r\n        // - Wrapping as IE 10 has started throwing when setting before open\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    xhr.open(method, urlString, !isSync);\r\n    if (withCredentials) {\r\n        // withCredentials should be set AFTER open (https://xhr.spec.whatwg.org/#the-withcredentials-attribute)\r\n        // And older firefox instances from 11+ will throw for sync events (current versions don't) which happens during unload processing\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    // Only set the timeout for asynchronous requests as\r\n    // \"Timeout shouldn't be used for synchronous XMLHttpRequests requests used in a document environment or it will throw an InvalidAccessError exception.\"\"\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/timeout\r\n    if (!isSync && timeout) {\r\n        _wrapSetXhrProp(xhr, strTimeout, timeout);\r\n    }\r\n    return xhr;\r\n}\r\n/**\r\n* Converts the XHR getAllResponseHeaders to a map containing the header key and value.\r\n* @internal\r\n*/\r\n// tslint:disable-next-line: align\r\nexport function convertAllHeadersToMap(headersString) {\r\n    var headers = {};\r\n    if (isString(headersString)) {\r\n        var headersArray = strTrim(headersString)[_DYN_SPLIT /* @min:%2esplit */](/[\\r\\n]+/);\r\n        arrForEach(headersArray, function (headerEntry) {\r\n            if (headerEntry) {\r\n                var idx = headerEntry.indexOf(\": \");\r\n                if (idx !== -1) {\r\n                    // The new spec has the headers returning all as lowercase -- but not all browsers do this yet\r\n                    var header = strTrim(headerEntry.substring(0, idx))[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n                    var value = strTrim(headerEntry.substring(idx + 1));\r\n                    headers[header] = value;\r\n                }\r\n                else {\r\n                    headers[strTrim(headerEntry)] = 1;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return headers;\r\n}\r\n/**\r\n* append the XHR headers.\r\n* @internal\r\n*/\r\nexport function _appendHeader(theHeaders, xhr, name) {\r\n    if (!theHeaders[name] && xhr && xhr.getResponseHeader) {\r\n        var value = xhr.getResponseHeader(name);\r\n        if (value) {\r\n            theHeaders[name] = strTrim(value);\r\n        }\r\n    }\r\n    return theHeaders;\r\n}\r\nvar STR_KILL_DURATION_HEADER = \"kill-duration\";\r\nvar STR_KILL_DURATION_SECONDS_HEADER = \"kill-duration-seconds\";\r\nvar STR_TIME_DELTA_HEADER = \"time-delta-millis\";\r\n/**\r\n* get the XHR getAllResponseHeaders.\r\n* @internal\r\n*/\r\nexport function _getAllResponseHeaders(xhr, isOneDs) {\r\n    var theHeaders = {};\r\n    if (!xhr[_DYN_GET_ALL_RESPONSE_HEA5 /* @min:%2egetAllResponseHeaders */]) {\r\n        // Firefox 2-63 doesn't have getAllResponseHeaders function but it does have getResponseHeader\r\n        // Only call these if getAllResponseHeaders doesn't exist, otherwise we can get invalid response errors\r\n        // as collector is not currently returning the correct header to allow JS to access these headers\r\n        if (!!isOneDs) {\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_TIME_DELTA_HEADER);\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_KILL_DURATION_HEADER);\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_KILL_DURATION_SECONDS_HEADER);\r\n        }\r\n    }\r\n    else {\r\n        theHeaders = convertAllHeadersToMap(xhr[_DYN_GET_ALL_RESPONSE_HEA5 /* @min:%2egetAllResponseHeaders */]());\r\n    }\r\n    return theHeaders;\r\n}\r\n//# sourceMappingURL=HelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { getGlobal, strShimObject, strShimPrototype, strShimUndefined } from \"@microsoft/applicationinsights-shims\";\r\nimport { getDocument, getInst, getNavigator, getPerformance, hasNavigator, isFunction, isString, isUndefined, mathMax, strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH, _DYN_NAME, _DYN_SPLIT, _DYN_TO_LOWER_CASE, _DYN_USER_AGENT } from \"../__DynamicConstants\";\r\nimport { strContains } from \"./HelperFuncs\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n/**\r\n * This file exists to hold environment utilities that are required to check and\r\n * validate the current operating environment. Unless otherwise required, please\r\n * only use defined methods (functions) in this class so that users of these\r\n * functions/properties only need to include those that are used within their own modules.\r\n */\r\nvar strDocumentMode = \"documentMode\";\r\nvar strLocation = \"location\";\r\nvar strConsole = \"console\";\r\nvar strJSON = \"JSON\";\r\nvar strCrypto = \"crypto\";\r\nvar strMsCrypto = \"msCrypto\";\r\nvar strReactNative = \"ReactNative\";\r\nvar strMsie = \"msie\";\r\nvar strTrident = \"trident/\";\r\nvar strXMLHttpRequest = \"XMLHttpRequest\";\r\nvar _isTrident = null;\r\nvar _navUserAgentCheck = null;\r\nvar _enableMocks = false;\r\nvar _useXDomainRequest = null;\r\nvar _beaconsSupported = null;\r\nfunction _hasProperty(theClass, property) {\r\n    var supported = false;\r\n    if (theClass) {\r\n        try {\r\n            supported = property in theClass;\r\n            if (!supported) {\r\n                var proto = theClass[strShimPrototype];\r\n                if (proto) {\r\n                    supported = property in proto;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Do Nothing\r\n        }\r\n        if (!supported) {\r\n            try {\r\n                var tmp = new theClass();\r\n                supported = !isUndefined(tmp[property]);\r\n            }\r\n            catch (e) {\r\n                // Do Nothing\r\n            }\r\n        }\r\n    }\r\n    return supported;\r\n}\r\n/**\r\n * Enable the lookup of test mock objects if requested\r\n * @param enabled - A flag to enable or disable the mock\r\n */\r\nexport function setEnableEnvMocks(enabled) {\r\n    _enableMocks = enabled;\r\n}\r\n/**\r\n * Returns the global location object if it is present otherwise null.\r\n * This helper is used to access the location object without causing an exception\r\n * \"Uncaught ReferenceError: location is not defined\"\r\n */\r\nexport function getLocation(checkForMock) {\r\n    if (checkForMock && _enableMocks) {\r\n        var mockLocation = getInst(\"__mockLocation\");\r\n        if (mockLocation) {\r\n            return mockLocation;\r\n        }\r\n    }\r\n    if (typeof location === strShimObject && location) {\r\n        return location;\r\n    }\r\n    return getInst(strLocation);\r\n}\r\n/**\r\n * Returns the global console object\r\n */\r\nexport function getConsole() {\r\n    if (typeof console !== strShimUndefined) {\r\n        return console;\r\n    }\r\n    return getInst(strConsole);\r\n}\r\n/**\r\n * Checks if JSON object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a history\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: JSON is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasJSON() {\r\n    return Boolean((typeof JSON === strShimObject && JSON) || getInst(strJSON) !== null);\r\n}\r\n/**\r\n * Returns the global JSON object if it is present otherwise null.\r\n * This helper is used to access the JSON object without causing an exception\r\n * \"Uncaught ReferenceError: JSON is not defined\"\r\n */\r\nexport function getJSON() {\r\n    if (hasJSON()) {\r\n        return JSON || getInst(strJSON);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getCrypto() {\r\n    return getInst(strCrypto);\r\n}\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getMsCrypto() {\r\n    return getInst(strMsCrypto);\r\n}\r\n/**\r\n * Returns whether the environment is reporting that we are running in a React Native Environment\r\n */\r\nexport function isReactNative() {\r\n    // If running in React Native, navigator.product will be populated\r\n    var nav = getNavigator();\r\n    if (nav && nav.product) {\r\n        return nav.product === strReactNative;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Identifies whether the current environment appears to be IE\r\n */\r\nexport function isIE() {\r\n    var nav = getNavigator();\r\n    if (nav && (nav[_DYN_USER_AGENT /* @min:%2euserAgent */] !== _navUserAgentCheck || _isTrident === null)) {\r\n        // Added to support test mocking of the user agent\r\n        _navUserAgentCheck = nav[_DYN_USER_AGENT /* @min:%2euserAgent */];\r\n        var userAgent = (_navUserAgentCheck || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n        _isTrident = (strContains(userAgent, strMsie) || strContains(userAgent, strTrident));\r\n    }\r\n    return _isTrident;\r\n}\r\n/**\r\n * Gets IE version returning the document emulation mode if we are running on IE, or null otherwise\r\n */\r\nexport function getIEVersion(userAgentStr) {\r\n    if (userAgentStr === void 0) { userAgentStr = null; }\r\n    if (!userAgentStr) {\r\n        var navigator_1 = getNavigator() || {};\r\n        userAgentStr = navigator_1 ? (navigator_1.userAgent || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() : STR_EMPTY;\r\n    }\r\n    var ua = (userAgentStr || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    // Also check for documentMode in case X-UA-Compatible meta tag was included in HTML.\r\n    if (strContains(ua, strMsie)) {\r\n        var doc = getDocument() || {};\r\n        return mathMax(parseInt(ua[_DYN_SPLIT /* @min:%2esplit */](strMsie)[1]), (doc[strDocumentMode] || 0));\r\n    }\r\n    else if (strContains(ua, strTrident)) {\r\n        var tridentVer = parseInt(ua[_DYN_SPLIT /* @min:%2esplit */](strTrident)[1]);\r\n        if (tridentVer) {\r\n            return tridentVer + 4;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function isSafari(userAgentStr) {\r\n    if (!userAgentStr || !isString(userAgentStr)) {\r\n        var navigator_2 = getNavigator() || {};\r\n        userAgentStr = navigator_2 ? (navigator_2.userAgent || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() : STR_EMPTY;\r\n    }\r\n    var ua = (userAgentStr || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    return (strIndexOf(ua, \"safari\") >= 0);\r\n}\r\n/**\r\n * Checks if HTML5 Beacons are supported in the current environment.\r\n * @param useCached - [Optional] used for testing to bypass the cached lookup, when `true` this will\r\n * cause the cached global to be reset.\r\n * @returns True if supported, false otherwise.\r\n */\r\nexport function isBeaconsSupported(useCached) {\r\n    if (_beaconsSupported === null || useCached === false) {\r\n        _beaconsSupported = hasNavigator() && Boolean(getNavigator().sendBeacon);\r\n    }\r\n    return _beaconsSupported;\r\n}\r\n/**\r\n * Checks if the Fetch API is supported in the current environment.\r\n * @param withKeepAlive - [Optional] If True, check if fetch is available and it supports the keepalive feature, otherwise only check if fetch is supported\r\n * @returns True if supported, otherwise false\r\n */\r\nexport function isFetchSupported(withKeepAlive) {\r\n    var isSupported = false;\r\n    try {\r\n        isSupported = !!getInst(\"fetch\");\r\n        var request = getInst(\"Request\");\r\n        if (isSupported && withKeepAlive && request) {\r\n            isSupported = _hasProperty(request, \"keepalive\");\r\n        }\r\n    }\r\n    catch (e) {\r\n        // Just Swallow any failure during availability checks\r\n    }\r\n    return isSupported;\r\n}\r\nexport function useXDomainRequest() {\r\n    if (_useXDomainRequest === null) {\r\n        _useXDomainRequest = (typeof XDomainRequest !== strShimUndefined);\r\n        if (_useXDomainRequest && isXhrSupported()) {\r\n            _useXDomainRequest = _useXDomainRequest && !_hasProperty(getInst(strXMLHttpRequest), \"withCredentials\");\r\n        }\r\n    }\r\n    return _useXDomainRequest;\r\n}\r\n/**\r\n * Checks if XMLHttpRequest is supported\r\n * @returns True if supported, otherwise false\r\n */\r\nexport function isXhrSupported() {\r\n    var isSupported = false;\r\n    try {\r\n        var xmlHttpRequest = getInst(strXMLHttpRequest);\r\n        isSupported = !!xmlHttpRequest;\r\n    }\r\n    catch (e) {\r\n        // Just Swallow any failure during availability checks\r\n    }\r\n    return isSupported;\r\n}\r\nfunction _getNamedValue(values, name) {\r\n    if (values) {\r\n        for (var i = 0; i < values[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n            var value = values[i];\r\n            if (value[_DYN_NAME /* @min:%2ename */]) {\r\n                if (value[_DYN_NAME /* @min:%2ename */] === name) {\r\n                    return value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {};\r\n}\r\n/**\r\n * Helper function to fetch the named meta-tag from the page.\r\n * @param name - The name of the meta-tag to find.\r\n */\r\nexport function findMetaTag(name) {\r\n    var doc = getDocument();\r\n    if (doc && name) {\r\n        // Look for a meta-tag\r\n        return _getNamedValue(doc.querySelectorAll(\"meta\"), name).content;\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Helper function to fetch the named server timing value from the page response (first navigation event).\r\n * @param name - The name of the server timing value to find.\r\n */\r\nexport function findNamedServerTiming(name) {\r\n    var value;\r\n    var perf = getPerformance();\r\n    if (perf) {\r\n        // Try looking for a server-timing header\r\n        var navPerf = perf.getEntriesByType(\"navigation\") || [];\r\n        value = _getNamedValue((navPerf[_DYN_LENGTH /* @min:%2elength */] > 0 ? navPerf[0] : {}).serverTiming, name).description;\r\n    }\r\n    return value;\r\n}\r\n// TODO: should reuse this method for analytics plugin\r\nexport function dispatchEvent(target, evnt) {\r\n    if (target && target.dispatchEvent && evnt) {\r\n        target.dispatchEvent(evnt);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function createCustomDomEvent(eventName, details) {\r\n    var event = null;\r\n    var detail = { detail: details || null };\r\n    if (isFunction(CustomEvent)) { // Use CustomEvent constructor when available\r\n        event = new CustomEvent(eventName, detail);\r\n    }\r\n    else { // CustomEvent has no constructor in IE\r\n        var doc = getDocument();\r\n        if (doc && doc.createEvent) {\r\n            event = doc.createEvent(\"CustomEvent\");\r\n            event.initCustomEvent(eventName, true, true, detail);\r\n        }\r\n    }\r\n    return event;\r\n}\r\nexport function sendCustomEvent(evtName, cfg, customDetails) {\r\n    var global = getGlobal();\r\n    if (global && global.CustomEvent) {\r\n        try {\r\n            var details = { cfg: cfg || null, customDetails: customDetails || null };\r\n            return dispatchEvent(global, createCustomDomEvent(evtName, details));\r\n        }\r\n        catch (e) {\r\n            // eslint-disable-next-line no-empty\r\n        }\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=EnvUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { mathFloor, utcNow } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { getCrypto, getMsCrypto, isIE } from \"./EnvUtils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nvar UInt32Mask = 0x100000000;\r\nvar MaxUInt32 = 0xffffffff;\r\nvar SEED1 = 123456789;\r\nvar SEED2 = 987654321;\r\n// MWC based Random generator (for IE)\r\nvar _mwcSeeded = false;\r\nvar _mwcW = SEED1;\r\nvar _mwcZ = SEED2;\r\n// Takes any integer\r\nfunction _mwcSeed(seedValue) {\r\n    if (seedValue < 0) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        seedValue >>>= 0;\r\n    }\r\n    _mwcW = (SEED1 + seedValue) & MaxUInt32;\r\n    _mwcZ = (SEED2 - seedValue) & MaxUInt32;\r\n    _mwcSeeded = true;\r\n}\r\nfunction _autoSeedMwc() {\r\n    // Simple initialization using default Math.random() - So we inherit any entropy from the browser\r\n    // and bitwise XOR with the current milliseconds\r\n    try {\r\n        var now = utcNow() & 0x7fffffff;\r\n        _mwcSeed(((Math.random() * UInt32Mask) ^ now) + now);\r\n    }\r\n    catch (e) {\r\n        // Don't crash if something goes wrong\r\n    }\r\n}\r\n/**\r\n * Generate a random value between 0 and maxValue, max value should be limited to a 32-bit maximum.\r\n * So maxValue(16) will produce a number from 0..16 (range of 17)\r\n * @param maxValue - The max value for the range\r\n */\r\nexport function randomValue(maxValue) {\r\n    if (maxValue > 0) {\r\n        return mathFloor((random32() / MaxUInt32) * (maxValue + 1)) >>> 0;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * generate a random 32-bit number (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), defaults un-unsigned.\r\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\r\n */\r\nexport function random32(signed) {\r\n    var value = 0;\r\n    var c = getCrypto() || getMsCrypto();\r\n    if (c && c.getRandomValues) {\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = c.getRandomValues(new Uint32Array(1))[0] & MaxUInt32;\r\n    }\r\n    if (value === 0 && isIE()) {\r\n        // For IE 6, 7, 8 (especially on XP) Math.random is not very random\r\n        if (!_mwcSeeded) {\r\n            // Set the seed for the Mwc algorithm\r\n            _autoSeedMwc();\r\n        }\r\n        // Don't use Math.random for IE\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = mwcRandom32() & MaxUInt32;\r\n    }\r\n    if (value === 0) {\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = mathFloor((UInt32Mask * Math.random()) | 0);\r\n    }\r\n    if (!signed) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        value >>>= 0;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Seed the MWC random number generator with the specified seed or a random value\r\n * @param value - optional the number to used as the seed, if undefined, null or zero a random value will be chosen\r\n */\r\nexport function mwcRandomSeed(value) {\r\n    if (!value) {\r\n        _autoSeedMwc();\r\n    }\r\n    else {\r\n        _mwcSeed(value);\r\n    }\r\n}\r\n/**\r\n * Generate a random 32-bit number between (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), using MWC (Multiply with carry)\r\n * instead of Math.random() defaults to un-signed.\r\n * Used as a replacement random generator for IE to avoid issues with older IE instances.\r\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\r\n */\r\nexport function mwcRandom32(signed) {\r\n    _mwcZ = (36969 * (_mwcZ & 0xFFFF) + (_mwcZ >> 16)) & MaxUInt32;\r\n    _mwcW = (18000 * (_mwcW & 0xFFFF) + (_mwcW >> 16)) & MaxUInt32;\r\n    var value = (((_mwcZ << 16) + (_mwcW & 0xFFFF)) >>> 0) & MaxUInt32 | 0;\r\n    if (!signed) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        value >>>= 0;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Generate random base64 id string.\r\n * The default length is 22 which is 132-bits so almost the same as a GUID but as base64 (the previous default was 5)\r\n * @param maxLength - Optional value to specify the length of the id to be generated, defaults to 22\r\n */\r\nexport function newId(maxLength) {\r\n    if (maxLength === void 0) { maxLength = 22; }\r\n    var base64chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n    // Start with an initial random number, consuming the value in reverse byte order\r\n    var number = random32() >>> 0; // Make sure it's a +ve number\r\n    var chars = 0;\r\n    var result = STR_EMPTY;\r\n    while (result[_DYN_LENGTH /* @min:%2elength */] < maxLength) {\r\n        chars++;\r\n        result += base64chars.charAt(number & 0x3F);\r\n        number >>>= 6; // Zero fill with right shift\r\n        if (chars === 5) {\r\n            // 5 base64 characters === 30 bits so we don't have enough bits for another base64 char\r\n            // So add on another 30 bits and make sure it's +ve\r\n            number = (((random32() << 2) & 0xFFFFFFFF) | (number & 0x03)) >>> 0;\r\n            chars = 0; // We need to reset the number every 5 chars (30 bits)\r\n        }\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=RandomHelper.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { objDefine } from \"@nevware21/ts-utils\";\r\nimport { normalizeJsName } from \"./HelperFuncs\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nimport { newId } from \"./RandomHelper\";\r\nvar version = '3.3.6';\r\nvar instanceName = \".\" + newId(6);\r\nvar _dataUid = 0;\r\n// Accepts only:\r\n//  - Node\r\n//    - Node.ELEMENT_NODE\r\n//    - Node.DOCUMENT_NODE\r\n//  - Object\r\n//    - Any\r\nfunction _canAcceptData(target) {\r\n    return target.nodeType === 1 || target.nodeType === 9 || !(+target.nodeType);\r\n}\r\nfunction _getCache(data, target) {\r\n    var theCache = target[data.id];\r\n    if (!theCache) {\r\n        theCache = {};\r\n        try {\r\n            if (_canAcceptData(target)) {\r\n                objDefine(target, data.id, {\r\n                    e: false,\r\n                    v: theCache\r\n                });\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Not all environments allow extending all objects, so just ignore the cache in those cases\r\n        }\r\n    }\r\n    return theCache;\r\n}\r\nexport function createUniqueNamespace(name, includeVersion) {\r\n    if (includeVersion === void 0) { includeVersion = false; }\r\n    return normalizeJsName(name + (_dataUid++) + (includeVersion ? \".\" + version : STR_EMPTY) + instanceName);\r\n}\r\nexport function createElmNodeData(name) {\r\n    var data = {\r\n        id: createUniqueNamespace(\"_aiData-\" + (name || STR_EMPTY) + \".\" + version),\r\n        accept: function (target) {\r\n            return _canAcceptData(target);\r\n        },\r\n        get: function (target, name, defValue, addDefault) {\r\n            var theCache = target[data.id];\r\n            if (!theCache) {\r\n                if (addDefault) {\r\n                    // Side effect is adds the cache\r\n                    theCache = _getCache(data, target);\r\n                    theCache[normalizeJsName(name)] = defValue;\r\n                }\r\n                return defValue;\r\n            }\r\n            return theCache[normalizeJsName(name)];\r\n        },\r\n        kill: function (target, name) {\r\n            if (target && target[name]) {\r\n                try {\r\n                    delete target[name];\r\n                }\r\n                catch (e) {\r\n                    // Just cleaning up, so if this fails -- ignore\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return data;\r\n}\r\n//# sourceMappingURL=DataCacheHelper.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { asString, isArray, isDefined, isNullOrUndefined, isObject, isPlainObject, isUndefined, objForEachKey, objHasOwn } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nfunction _isConfigDefaults(value) {\r\n    return (value && isObject(value) && (value.isVal || value.fb || objHasOwn(value, \"v\") || objHasOwn(value, \"mrg\") || objHasOwn(value, \"ref\") || value.set));\r\n}\r\nfunction _getDefault(dynamicHandler, theConfig, cfgDefaults) {\r\n    var defValue;\r\n    var isDefaultValid = cfgDefaults.dfVal || isDefined;\r\n    // There is a fallback config key so try and grab that first\r\n    if (theConfig && cfgDefaults.fb) {\r\n        var fallbacks = cfgDefaults.fb;\r\n        if (!isArray(fallbacks)) {\r\n            fallbacks = [fallbacks];\r\n        }\r\n        for (var lp = 0; lp < fallbacks[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n            var fallback = fallbacks[lp];\r\n            var fbValue = theConfig[fallback];\r\n            if (isDefaultValid(fbValue)) {\r\n                defValue = fbValue;\r\n            }\r\n            else if (dynamicHandler) {\r\n                // Needed to ensure that the fallback value (and potentially) new field is also dynamic even if null/undefined\r\n                fbValue = dynamicHandler.cfg[fallback];\r\n                if (isDefaultValid(fbValue)) {\r\n                    defValue = fbValue;\r\n                }\r\n                // Needed to ensure that the fallback value (and potentially) new field is also dynamic even if null/undefined\r\n                dynamicHandler.set(dynamicHandler.cfg, asString(fallback), fbValue);\r\n            }\r\n            if (isDefaultValid(defValue)) {\r\n                // We have a valid default so break out of the look\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    // If the value is still not defined and we have a default value then use that\r\n    if (!isDefaultValid(defValue) && isDefaultValid(cfgDefaults.v)) {\r\n        defValue = cfgDefaults.v;\r\n    }\r\n    return defValue;\r\n}\r\n/**\r\n * Recursively resolve the default value\r\n * @param dynamicHandler\r\n * @param theConfig\r\n * @param cfgDefaults\r\n * @returns\r\n */\r\nfunction _resolveDefaultValue(dynamicHandler, theConfig, cfgDefaults) {\r\n    var theValue = cfgDefaults;\r\n    if (cfgDefaults && _isConfigDefaults(cfgDefaults)) {\r\n        theValue = _getDefault(dynamicHandler, theConfig, cfgDefaults);\r\n    }\r\n    if (theValue) {\r\n        if (_isConfigDefaults(theValue)) {\r\n            theValue = _resolveDefaultValue(dynamicHandler, theConfig, theValue);\r\n        }\r\n        var newValue_1;\r\n        if (isArray(theValue)) {\r\n            newValue_1 = [];\r\n            newValue_1[_DYN_LENGTH /* @min:%2elength */] = theValue[_DYN_LENGTH /* @min:%2elength */];\r\n        }\r\n        else if (isPlainObject(theValue)) {\r\n            newValue_1 = {};\r\n        }\r\n        if (newValue_1) {\r\n            objForEachKey(theValue, function (key, value) {\r\n                if (value && _isConfigDefaults(value)) {\r\n                    value = _resolveDefaultValue(dynamicHandler, theConfig, value);\r\n                }\r\n                newValue_1[key] = value;\r\n            });\r\n            theValue = newValue_1;\r\n        }\r\n    }\r\n    return theValue;\r\n}\r\n/**\r\n * Applies the default value on the config property and makes sure that it's dynamic\r\n * @param theConfig\r\n * @param name\r\n * @param defaultValue\r\n */\r\nexport function _applyDefaultValue(dynamicHandler, theConfig, name, defaultValue) {\r\n    // Resolve the initial config value from the provided value or use the defined default\r\n    var isValid;\r\n    var setFn;\r\n    var defValue;\r\n    var cfgDefaults = defaultValue;\r\n    var mergeDf;\r\n    var reference;\r\n    var readOnly;\r\n    var blkDynamicValue;\r\n    if (_isConfigDefaults(cfgDefaults)) {\r\n        // looks like a IConfigDefault\r\n        isValid = cfgDefaults.isVal;\r\n        setFn = cfgDefaults.set;\r\n        readOnly = cfgDefaults.rdOnly;\r\n        blkDynamicValue = cfgDefaults.blkVal;\r\n        mergeDf = cfgDefaults.mrg;\r\n        reference = cfgDefaults.ref;\r\n        if (!reference && isUndefined(reference)) {\r\n            reference = !!mergeDf;\r\n        }\r\n        defValue = _getDefault(dynamicHandler, theConfig, cfgDefaults);\r\n    }\r\n    else {\r\n        defValue = defaultValue;\r\n    }\r\n    if (blkDynamicValue) {\r\n        // Mark the property so that any value assigned will be blocked from conversion, we need to do this\r\n        // before assigning or fetching the value to ensure it's not converted\r\n        dynamicHandler.blkVal(theConfig, name);\r\n    }\r\n    // Set the value to the default value;\r\n    var theValue;\r\n    var usingDefault = true;\r\n    var cfgValue = theConfig[name];\r\n    // try and get and user provided values\r\n    if (cfgValue || !isNullOrUndefined(cfgValue)) {\r\n        // Use the defined theConfig[name] value\r\n        theValue = cfgValue;\r\n        usingDefault = false;\r\n        // The values are different and we have a special default value check, which is used to\r\n        // override config values like empty strings to continue using the default\r\n        if (isValid && theValue !== defValue && !isValid(theValue)) {\r\n            theValue = defValue;\r\n            usingDefault = true;\r\n        }\r\n        if (setFn) {\r\n            theValue = setFn(theValue, defValue, theConfig);\r\n            usingDefault = theValue === defValue;\r\n        }\r\n    }\r\n    if (!usingDefault) {\r\n        if (isPlainObject(theValue) || isArray(defValue)) {\r\n            // we are using the user supplied value and it's an object\r\n            if (mergeDf && defValue && (isPlainObject(defValue) || isArray(defValue))) {\r\n                // Resolve/apply the defaults\r\n                objForEachKey(defValue, function (dfName, dfValue) {\r\n                    // Sets the value and makes it dynamic (if it doesn't already exist)\r\n                    _applyDefaultValue(dynamicHandler, theValue, dfName, dfValue);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    else if (defValue) {\r\n        // Just resolve the default\r\n        theValue = _resolveDefaultValue(dynamicHandler, theConfig, defValue);\r\n    }\r\n    else {\r\n        theValue = defValue;\r\n    }\r\n    // if (theValue && usingDefault && (isPlainObject(theValue) || isArray(theValue))) {\r\n    //     theValue = _cfgDeepCopy(theValue);\r\n    // }\r\n    // Needed to ensure that the (potentially) new field is dynamic even if null/undefined\r\n    dynamicHandler.set(theConfig, name, theValue);\r\n    if (reference) {\r\n        dynamicHandler.ref(theConfig, name);\r\n    }\r\n    if (readOnly) {\r\n        dynamicHandler.rdOnly(theConfig, name);\r\n    }\r\n}\r\n//# sourceMappingURL=ConfigDefaults.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { isArray, isPlainObject, objForEachKey, symbolFor, throwTypeError } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\n// Using Symbol.for so that if the same symbol was already created it would be returned\r\n// To handle multiple instances using potentially different versions we are not using\r\n// createUniqueNamespace()\r\nexport var CFG_HANDLER_LINK = symbolFor(\"[[ai_dynCfg_1]]\");\r\n/**\r\n * @internal\r\n * @ignore\r\n * The symbol to tag objects / arrays with if they should not be converted\r\n */\r\nvar BLOCK_DYNAMIC = symbolFor(\"[[ai_blkDynCfg_1]]\");\r\n/**\r\n * @internal\r\n * @ignore\r\n * The symbol to tag objects to indicate that when included into the configuration that\r\n * they should be converted into a trackable dynamic object.\r\n */\r\nvar FORCE_DYNAMIC = symbolFor(\"[[ai_frcDynCfg_1]]\");\r\nexport function _cfgDeepCopy(source) {\r\n    if (source) {\r\n        var target_1;\r\n        if (isArray(source)) {\r\n            target_1 = [];\r\n            target_1[_DYN_LENGTH /* @min:%2elength */] = source[_DYN_LENGTH /* @min:%2elength */];\r\n        }\r\n        else if (isPlainObject(source)) {\r\n            target_1 = {};\r\n        }\r\n        if (target_1) {\r\n            // Copying index values by property name as the extensionConfig can be an array or object\r\n            objForEachKey(source, function (key, value) {\r\n                // Perform a deep copy of the object\r\n                target_1[key] = _cfgDeepCopy(value);\r\n            });\r\n            return target_1;\r\n        }\r\n    }\r\n    return source;\r\n}\r\n/**\r\n * @internal\r\n * Get the dynamic config handler if the value is already dynamic\r\n * @returns\r\n */\r\nexport function getDynamicConfigHandler(value) {\r\n    if (value) {\r\n        var handler = value[CFG_HANDLER_LINK] || value;\r\n        if (handler.cfg && (handler.cfg === value || handler.cfg[CFG_HANDLER_LINK] === handler)) {\r\n            return handler;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Mark the provided value so that if it's included into the configuration it will NOT have\r\n * its properties converted into a dynamic (reactive) object. If the object is not a plain object\r\n * or an array (ie. a class) this function has not affect as only Objects and Arrays are converted\r\n * into dynamic objects in the dynamic configuration.\r\n *\r\n * When you have tagged a value as both {@link forceDynamicConversion} and blocked force will take precedence.\r\n *\r\n * You should only need to use this function, if you are creating dynamic \"classes\" from objects\r\n * which confirm to the require interface. A common case for this is during unit testing where it's\r\n * easier to create mock extensions.\r\n *\r\n * If `value` is falsy (null / undefined / 0 / empty string etc) it will not be tagged and\r\n * if there is an exception adding the property to the value (because its frozen etc) the\r\n * exception will be swallowed\r\n *\r\n * @example\r\n * ```ts\r\n * // This is a valid \"extension\", but it is technically an object\r\n * // So when included in the config.extensions it WILL be cloned and then\r\n * // converted into a dynamic object, where all of its properties will become\r\n * // get/set object properties and will be tracked. While this WILL still\r\n * // function, when attempt to use a mocking framework on top of this the\r\n * // functions are now technically get accessors which return a function\r\n * // and this can cause some mocking frameworks to fail.\r\n * let mockChannel = {\r\n *      pause: () => { },\r\n*      resume: () => { },\r\n*      teardown: () => { },\r\n*      flush: (async: any, callBack: any) => { },\r\n*      processTelemetry: (env: any) => { },\r\n*      setNextPlugin: (next: any) => { },\r\n*      initialize: (config: any, core: any, extensions: any) => { },\r\n*      identifier: \"testChannel\",\r\n*      priority: 1003\r\n* };\r\n * ```\r\n * @param value - The object that you want to block from being converted into a\r\n * trackable dynamic object\r\n * @returns The original value\r\n */\r\nexport function blockDynamicConversion(value) {\r\n    if (value && (isPlainObject(value) || isArray(value))) {\r\n        try {\r\n            value[BLOCK_DYNAMIC] = true;\r\n        }\r\n        catch (e) {\r\n            // Don't throw for this case as it's an ask only\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * This is the reverse case of {@link blockDynamicConversion} in that this will tag an\r\n * object to indicate that it should always be converted into a dynamic trackable object\r\n * even when not an object or array. So all properties of this object will become\r\n * get / set accessor functions.\r\n *\r\n * When you have tagged a value as both {@link forceDynamicConversion} and blocked force will take precedence.\r\n *\r\n * If `value` is falsy (null / undefined / 0 / empty string etc) it will not be tagged and\r\n * if there is an exception adding the property to the value (because its frozen etc) the\r\n * exception will be swallowed.\r\n * @param value - The object that should be tagged and converted if included into a dynamic\r\n * configuration.\r\n * @returns The original value\r\n */\r\nexport function forceDynamicConversion(value) {\r\n    if (value) {\r\n        try {\r\n            value[FORCE_DYNAMIC] = true;\r\n        }\r\n        catch (e) {\r\n            // Don't throw for this case as it's an ask only\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * @internal\r\n * @ignore\r\n * Helper function to check whether an object can or should be converted into a dynamic\r\n * object.\r\n * @param value - The object to check whether it should be converted\r\n * @returns `true` if the value should be converted otherwise `false`.\r\n */\r\nexport function _canMakeDynamic(getFunc, state, value) {\r\n    var result = false;\r\n    // Object must exist and be truthy\r\n    if (value && !getFunc[state.blkVal]) {\r\n        // Tagged as always convert\r\n        result = value[FORCE_DYNAMIC];\r\n        // Check that it's not explicitly tagged as blocked\r\n        if (!result && !value[BLOCK_DYNAMIC]) {\r\n            // Only convert plain objects or arrays by default\r\n            result = isPlainObject(value) || isArray(value);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Throws an invalid access exception\r\n * @param message - The message to include in the exception\r\n */\r\nexport function throwInvalidAccess(message) {\r\n    throwTypeError(\"InvalidAccess:\" + message);\r\n}\r\n//# sourceMappingURL=DynamicSupport.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, dumpObj, isArray, objDefine, objDefineProp, objForEachKey, objGetOwnPropertyDescriptor } from \"@nevware21/ts-utils\";\r\nimport { UNDEFINED_VALUE } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_APPLY, _DYN_LOGGER, _DYN_PUSH, _DYN_SPLICE, _DYN_THROW_INTERNAL } from \"../__DynamicConstants\";\r\nimport { CFG_HANDLER_LINK, _canMakeDynamic, blockDynamicConversion, throwInvalidAccess } from \"./DynamicSupport\";\r\nvar arrayMethodsToPatch = [\r\n    \"push\",\r\n    \"pop\",\r\n    \"shift\",\r\n    \"unshift\",\r\n    \"splice\"\r\n];\r\nexport var _throwDynamicError = function (logger, name, desc, e) {\r\n    logger && logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](3 /* eLoggingSeverity.DEBUG */, 108 /* _eInternalMessageId.DynamicConfigException */, \"\".concat(desc, \" [\").concat(name, \"] failed - \") + dumpObj(e));\r\n};\r\nfunction _patchArray(state, target, name) {\r\n    if (isArray(target)) {\r\n        // Monkey Patch the methods that might change the array\r\n        arrForEach(arrayMethodsToPatch, function (method) {\r\n            var orgMethod = target[method];\r\n            target[method] = function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var result = orgMethod[_DYN_APPLY /* @min:%2eapply */](this, args);\r\n                // items may be added, removed or moved so need to make some new dynamic properties\r\n                _makeDynamicObject(state, target, name, \"Patching\");\r\n                return result;\r\n            };\r\n        });\r\n    }\r\n}\r\nfunction _getOwnPropGetter(target, name) {\r\n    var propDesc = objGetOwnPropertyDescriptor(target, name);\r\n    return propDesc && propDesc.get;\r\n}\r\nfunction _createDynamicProperty(state, theConfig, name, value) {\r\n    // Does not appear to be dynamic so lets make it so\r\n    var detail = {\r\n        n: name,\r\n        h: [],\r\n        trk: function (handler) {\r\n            if (handler && handler.fn) {\r\n                if (arrIndexOf(detail.h, handler) === -1) {\r\n                    // Add this handler to the collection that should be notified when the value changes\r\n                    detail.h[_DYN_PUSH /* @min:%2epush */](handler);\r\n                }\r\n                state.trk(handler, detail);\r\n            }\r\n        },\r\n        clr: function (handler) {\r\n            var idx = arrIndexOf(detail.h, handler);\r\n            if (idx !== -1) {\r\n                detail.h[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n            }\r\n        }\r\n    };\r\n    // Flag to optimize lookup response time by avoiding additional function calls\r\n    var checkDynamic = true;\r\n    var isObjectOrArray = false;\r\n    function _getProperty() {\r\n        if (checkDynamic) {\r\n            isObjectOrArray = isObjectOrArray || _canMakeDynamic(_getProperty, state, value);\r\n            // Make sure that if it's an object that we make it dynamic\r\n            if (value && !value[CFG_HANDLER_LINK] && isObjectOrArray) {\r\n                // It doesn't look like it's already dynamic so lets make sure it's converted the object into a dynamic Config as well\r\n                value = _makeDynamicObject(state, value, name, \"Converting\");\r\n            }\r\n            // If it needed to be converted it now has been\r\n            checkDynamic = false;\r\n        }\r\n        // If there is an active handler then add it to the tracking set of handlers\r\n        var activeHandler = state.act;\r\n        if (activeHandler) {\r\n            detail.trk(activeHandler);\r\n        }\r\n        return value;\r\n    }\r\n    // Tag this getter as our dynamic property and provide shortcut for notifying a change\r\n    _getProperty[state.prop] = {\r\n        chng: function () {\r\n            state.add(detail);\r\n        }\r\n    };\r\n    function _setProperty(newValue) {\r\n        if (value !== newValue) {\r\n            if (!!_getProperty[state.ro] && !state.upd) {\r\n                // field is marked as readonly so return false\r\n                throwInvalidAccess(\"[\" + name + \"] is read-only:\" + dumpObj(theConfig));\r\n            }\r\n            if (checkDynamic) {\r\n                isObjectOrArray = isObjectOrArray || _canMakeDynamic(_getProperty, state, value);\r\n                checkDynamic = false;\r\n            }\r\n            // The value must be a plain object or an array to enforce the reference (in-place updates)\r\n            var isReferenced = isObjectOrArray && _getProperty[state.rf];\r\n            if (isObjectOrArray) {\r\n                // We are about to replace a plain object or an array\r\n                if (isReferenced) {\r\n                    // Reassign the properties from the current value to the same properties from the newValue\r\n                    // This will set properties not in the newValue to undefined\r\n                    objForEachKey(value, function (key) {\r\n                        value[key] = newValue ? newValue[key] : UNDEFINED_VALUE;\r\n                    });\r\n                    // Now assign / re-assign value with all of the keys from newValue\r\n                    try {\r\n                        objForEachKey(newValue, function (key, theValue) {\r\n                            _setDynamicProperty(state, value, key, theValue);\r\n                        });\r\n                        // Now drop newValue so when we assign value later it keeps the existing reference\r\n                        newValue = value;\r\n                    }\r\n                    catch (e) {\r\n                        // Unable to convert to dynamic property so just leave as non-dynamic\r\n                        _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"Assigning\", e);\r\n                        // Mark as not an object or array so we don't try and do this again\r\n                        isObjectOrArray = false;\r\n                    }\r\n                }\r\n                else if (value && value[CFG_HANDLER_LINK]) {\r\n                    // As we are replacing the value, if it's already dynamic then we need to notify the listeners\r\n                    // for every property it has already\r\n                    objForEachKey(value, function (key) {\r\n                        // Check if the value is dynamic\r\n                        var getter = _getOwnPropGetter(value, key);\r\n                        if (getter) {\r\n                            // And if it is tell it's listeners that the value has changed\r\n                            var valueState = getter[state.prop];\r\n                            valueState && valueState.chng();\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (newValue !== value) {\r\n                var newIsObjectOrArray = newValue && _canMakeDynamic(_getProperty, state, newValue);\r\n                if (!isReferenced && newIsObjectOrArray) {\r\n                    // As the newValue is an object/array lets preemptively make it dynamic\r\n                    newValue = _makeDynamicObject(state, newValue, name, \"Converting\");\r\n                }\r\n                // Now assign the internal \"value\" to the newValue\r\n                value = newValue;\r\n                isObjectOrArray = newIsObjectOrArray;\r\n            }\r\n            // Cause any listeners to be scheduled for notification\r\n            state.add(detail);\r\n        }\r\n    }\r\n    objDefine(theConfig, detail.n, { g: _getProperty, s: _setProperty });\r\n}\r\nexport function _setDynamicProperty(state, target, name, value) {\r\n    if (target) {\r\n        // To be a dynamic property it needs to have a get function\r\n        var getter = _getOwnPropGetter(target, name);\r\n        var isDynamic = getter && !!getter[state.prop];\r\n        if (!isDynamic) {\r\n            _createDynamicProperty(state, target, name, value);\r\n        }\r\n        else {\r\n            // Looks like it's already dynamic just assign the new value\r\n            target[name] = value;\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexport function _setDynamicPropertyState(state, target, name, flags) {\r\n    if (target) {\r\n        // To be a dynamic property it needs to have a get function\r\n        var getter = _getOwnPropGetter(target, name);\r\n        var isDynamic = getter && !!getter[state.prop];\r\n        var inPlace = flags && flags[0 /* _eSetDynamicPropertyFlags.inPlace */];\r\n        var rdOnly = flags && flags[1 /* _eSetDynamicPropertyFlags.readOnly */];\r\n        var blkProp = flags && flags[2 /* _eSetDynamicPropertyFlags.blockDynamicProperty */];\r\n        if (!isDynamic) {\r\n            if (blkProp) {\r\n                try {\r\n                    // Attempt to mark the target as blocked from conversion\r\n                    blockDynamicConversion(target);\r\n                }\r\n                catch (e) {\r\n                    _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"Blocking\", e);\r\n                }\r\n            }\r\n            try {\r\n                // Make sure it's dynamic so that we can tag the property as per the state\r\n                _setDynamicProperty(state, target, name, target[name]);\r\n                getter = _getOwnPropGetter(target, name);\r\n            }\r\n            catch (e) {\r\n                // Unable to convert to dynamic property so just leave as non-dynamic\r\n                _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"State\", e);\r\n            }\r\n        }\r\n        // Assign the optional flags if true\r\n        if (inPlace) {\r\n            getter[state.rf] = inPlace;\r\n        }\r\n        if (rdOnly) {\r\n            getter[state.ro] = rdOnly;\r\n        }\r\n        if (blkProp) {\r\n            getter[state.blkVal] = true;\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexport function _makeDynamicObject(state, target, name, desc) {\r\n    try {\r\n        // Assign target with new value properties (converting into dynamic properties in the process)\r\n        objForEachKey(target, function (key, value) {\r\n            // Assign and/or make the property dynamic\r\n            _setDynamicProperty(state, target, key, value);\r\n        });\r\n        if (!target[CFG_HANDLER_LINK]) {\r\n            // Link the config back to the dynamic config details\r\n            objDefineProp(target, CFG_HANDLER_LINK, {\r\n                get: function () {\r\n                    return state.hdlr;\r\n                }\r\n            });\r\n            _patchArray(state, target, name);\r\n        }\r\n    }\r\n    catch (e) {\r\n        // Unable to convert to dynamic property so just leave as non-dynamic\r\n        _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, desc, e);\r\n    }\r\n    return target;\r\n}\r\n//# sourceMappingURL=DynamicProperty.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, dumpObj, newSymbol, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { throwAggregationError } from \"../JavaScriptSDK/AggregationError\";\r\nimport { _DYN_CANCEL, _DYN_LENGTH, _DYN_LOGGER, _DYN_PUSH, _DYN_THROW_INTERNAL } from \"../__DynamicConstants\";\r\nvar symPrefix = \"[[ai_\";\r\nvar symPostfix = \"]]\";\r\nexport function _createState(cfgHandler) {\r\n    var dynamicPropertySymbol = newSymbol(symPrefix + \"get\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyReadOnly = newSymbol(symPrefix + \"ro\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyReferenced = newSymbol(symPrefix + \"rf\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyBlockValue = newSymbol(symPrefix + \"blkVal\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyDetail = newSymbol(symPrefix + \"dtl\" + cfgHandler.uid + symPostfix);\r\n    var _waitingHandlers = null;\r\n    var _watcherTimer = null;\r\n    var theState;\r\n    function _useHandler(activeHandler, callback) {\r\n        var prevWatcher = theState.act;\r\n        try {\r\n            theState.act = activeHandler;\r\n            if (activeHandler && activeHandler[dynamicPropertyDetail]) {\r\n                // Clear out the previously tracked details for this handler, so that access are re-evaluated\r\n                arrForEach(activeHandler[dynamicPropertyDetail], function (detail) {\r\n                    detail.clr(activeHandler);\r\n                });\r\n                activeHandler[dynamicPropertyDetail] = [];\r\n            }\r\n            callback({\r\n                cfg: cfgHandler.cfg,\r\n                set: cfgHandler.set.bind(cfgHandler),\r\n                setDf: cfgHandler.setDf.bind(cfgHandler),\r\n                ref: cfgHandler.ref.bind(cfgHandler),\r\n                rdOnly: cfgHandler.rdOnly.bind(cfgHandler)\r\n            });\r\n        }\r\n        catch (e) {\r\n            var logger = cfgHandler[_DYN_LOGGER /* @min:%2elogger */];\r\n            if (logger) {\r\n                // Don't let one individual failure break everyone\r\n                logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](1 /* eLoggingSeverity.CRITICAL */, 107 /* _eInternalMessageId.ConfigWatcherException */, dumpObj(e));\r\n            }\r\n            // Re-throw the exception so that any true \"error\" is reported back to the called\r\n            throw e;\r\n        }\r\n        finally {\r\n            theState.act = prevWatcher || null;\r\n        }\r\n    }\r\n    function _notifyWatchers() {\r\n        if (_waitingHandlers) {\r\n            var notifyHandlers = _waitingHandlers;\r\n            _waitingHandlers = null;\r\n            // Stop any timer as we are running them now anyway\r\n            _watcherTimer && _watcherTimer[_DYN_CANCEL /* @min:%2ecancel */]();\r\n            _watcherTimer = null;\r\n            var watcherFailures_1 = [];\r\n            // Now run the handlers\r\n            arrForEach(notifyHandlers, function (handler) {\r\n                if (handler) {\r\n                    if (handler[dynamicPropertyDetail]) {\r\n                        arrForEach(handler[dynamicPropertyDetail], function (detail) {\r\n                            // Clear out this handler from  previously tracked details, so that access are re-evaluated\r\n                            detail.clr(handler);\r\n                        });\r\n                        handler[dynamicPropertyDetail] = null;\r\n                    }\r\n                    // The handler may have self removed as part of another handler so re-check\r\n                    if (handler.fn) {\r\n                        try {\r\n                            _useHandler(handler, handler.fn);\r\n                        }\r\n                        catch (e) {\r\n                            // Don't let a single failing watcher cause other watches to fail\r\n                            watcherFailures_1[_DYN_PUSH /* @min:%2epush */](e);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            // During notification we may have had additional updates -- so notify those updates as well\r\n            if (_waitingHandlers) {\r\n                try {\r\n                    _notifyWatchers();\r\n                }\r\n                catch (e) {\r\n                    watcherFailures_1[_DYN_PUSH /* @min:%2epush */](e);\r\n                }\r\n            }\r\n            if (watcherFailures_1[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                throwAggregationError(\"Watcher error(s): \", watcherFailures_1);\r\n            }\r\n        }\r\n    }\r\n    function _addWatcher(detail) {\r\n        if (detail && detail.h[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            if (!_waitingHandlers) {\r\n                _waitingHandlers = [];\r\n            }\r\n            if (!_watcherTimer) {\r\n                _watcherTimer = scheduleTimeout(function () {\r\n                    _watcherTimer = null;\r\n                    _notifyWatchers();\r\n                }, 0);\r\n            }\r\n            // Add all of the handlers for this detail (if not already present) - using normal for-loop for performance\r\n            for (var idx = 0; idx < detail.h[_DYN_LENGTH /* @min:%2elength */]; idx++) {\r\n                var handler = detail.h[idx];\r\n                // Add this handler to the collection of handlers to re-execute\r\n                if (handler && arrIndexOf(_waitingHandlers, handler) === -1) {\r\n                    _waitingHandlers[_DYN_PUSH /* @min:%2epush */](handler);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function _trackHandler(handler, detail) {\r\n        if (handler) {\r\n            var details = handler[dynamicPropertyDetail] = handler[dynamicPropertyDetail] || [];\r\n            if (arrIndexOf(details, detail) === -1) {\r\n                // If this detail is not already listed as tracked then add it so that we re-evaluate it's usage\r\n                details[_DYN_PUSH /* @min:%2epush */](detail);\r\n            }\r\n        }\r\n    }\r\n    theState = {\r\n        prop: dynamicPropertySymbol,\r\n        ro: dynamicPropertyReadOnly,\r\n        rf: dynamicPropertyReferenced,\r\n        blkVal: dynamicPropertyBlockValue,\r\n        hdlr: cfgHandler,\r\n        add: _addWatcher,\r\n        notify: _notifyWatchers,\r\n        use: _useHandler,\r\n        trk: _trackHandler\r\n    };\r\n    return theState;\r\n}\r\n//# sourceMappingURL=DynamicState.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { dumpObj, isUndefined, objDefine, objForEachKey } from \"@nevware21/ts-utils\";\r\nimport { createUniqueNamespace } from \"../JavaScriptSDK/DataCacheHelper\";\r\nimport { STR_NOT_DYNAMIC_ERROR } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_THROW_INTERNAL, _DYN_WARN_TO_CONSOLE, _DYN_WATCH } from \"../__DynamicConstants\";\r\nimport { _applyDefaultValue } from \"./ConfigDefaults\";\r\nimport { _makeDynamicObject, _setDynamicProperty, _setDynamicPropertyState, _throwDynamicError } from \"./DynamicProperty\";\r\nimport { _createState } from \"./DynamicState\";\r\nimport { CFG_HANDLER_LINK, _cfgDeepCopy, getDynamicConfigHandler, throwInvalidAccess } from \"./DynamicSupport\";\r\n/**\r\n * Identifies a function which will be re-called whenever any of it's accessed configuration values\r\n * change.\r\n * @param configHandler - The callback that will be called for the initial request and then whenever any\r\n * accessed configuration changes are identified.\r\n */\r\nfunction _createAndUseHandler(state, configHandler) {\r\n    var handler = {\r\n        fn: configHandler,\r\n        rm: function () {\r\n            // Clear all references to the handler so it can be garbage collected\r\n            // This will also cause this handler to never get called and eventually removed\r\n            handler.fn = null;\r\n            state = null;\r\n            configHandler = null;\r\n        }\r\n    };\r\n    objDefine(handler, \"toJSON\", { v: function () { return \"WatcherHandler\" + (handler.fn ? \"\" : \"[X]\"); } });\r\n    state.use(handler, configHandler);\r\n    return handler;\r\n}\r\n/**\r\n * Creates the dynamic config handler and associates with the target config as the root object\r\n * @param target - The config that you want to be root of the dynamic config\r\n * @param inPlace - Should the passed config be converted in-place or a new proxy returned\r\n * @returns The existing dynamic handler or a new instance with the provided config values\r\n */\r\nfunction _createDynamicHandler(logger, target, inPlace) {\r\n    var dynamicHandler = getDynamicConfigHandler(target);\r\n    if (dynamicHandler) {\r\n        // The passed config is already dynamic so return it's tracker\r\n        return dynamicHandler;\r\n    }\r\n    var uid = createUniqueNamespace(\"dyncfg\", true);\r\n    var newTarget = (target && inPlace !== false) ? target : _cfgDeepCopy(target);\r\n    var theState;\r\n    function _notifyWatchers() {\r\n        theState.notify();\r\n    }\r\n    function _setValue(target, name, value) {\r\n        try {\r\n            target = _setDynamicProperty(theState, target, name, value);\r\n        }\r\n        catch (e) {\r\n            // Unable to convert to dynamic property so just leave as non-dynamic\r\n            _throwDynamicError(logger, name, \"Setting value\", e);\r\n        }\r\n        return target[name];\r\n    }\r\n    function _watch(configHandler) {\r\n        return _createAndUseHandler(theState, configHandler);\r\n    }\r\n    function _block(configHandler, allowUpdate) {\r\n        theState.use(null, function (details) {\r\n            var prevUpd = theState.upd;\r\n            try {\r\n                if (!isUndefined(allowUpdate)) {\r\n                    theState.upd = allowUpdate;\r\n                }\r\n                configHandler(details);\r\n            }\r\n            finally {\r\n                theState.upd = prevUpd;\r\n            }\r\n        });\r\n    }\r\n    function _ref(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as referenced with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[0 /* _eSetDynamicPropertyFlags.inPlace */] = true, _a))[name];\r\n    }\r\n    function _rdOnly(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as readonly with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[1 /* _eSetDynamicPropertyFlags.readOnly */] = true, _a))[name];\r\n    }\r\n    function _blkPropValue(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as readonly with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[2 /* _eSetDynamicPropertyFlags.blockDynamicProperty */] = true, _a))[name];\r\n    }\r\n    function _applyDefaults(theConfig, defaultValues) {\r\n        if (defaultValues) {\r\n            // Resolve/apply the defaults\r\n            objForEachKey(defaultValues, function (name, value) {\r\n                // Sets the value and makes it dynamic (if it doesn't already exist)\r\n                _applyDefaultValue(cfgHandler, theConfig, name, value);\r\n            });\r\n        }\r\n        return theConfig;\r\n    }\r\n    var cfgHandler = {\r\n        uid: null,\r\n        cfg: newTarget,\r\n        logger: logger,\r\n        notify: _notifyWatchers,\r\n        set: _setValue,\r\n        setDf: _applyDefaults,\r\n        watch: _watch,\r\n        ref: _ref,\r\n        rdOnly: _rdOnly,\r\n        blkVal: _blkPropValue,\r\n        _block: _block\r\n    };\r\n    objDefine(cfgHandler, \"uid\", {\r\n        c: false,\r\n        e: false,\r\n        w: false,\r\n        v: uid\r\n    });\r\n    theState = _createState(cfgHandler);\r\n    // Setup tracking for all defined default keys\r\n    _makeDynamicObject(theState, newTarget, \"config\", \"Creating\");\r\n    return cfgHandler;\r\n}\r\n/**\r\n * Log an invalid access message to the console\r\n */\r\nfunction _logInvalidAccess(logger, message) {\r\n    if (logger) {\r\n        logger[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](message);\r\n        logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](2 /* eLoggingSeverity.WARNING */, 108 /* _eInternalMessageId.DynamicConfigException */, message);\r\n    }\r\n    else {\r\n        // We don't have a logger so just throw an exception\r\n        throwInvalidAccess(message);\r\n    }\r\n}\r\n/**\r\n * Create or return a dynamic version of the passed config, if it is not already dynamic\r\n * @param config - The config to be converted into a dynamic config\r\n * @param defaultConfig - The default values to apply on the config if the properties don't already exist\r\n * @param inPlace - Should the config be converted in-place into a dynamic config or a new instance returned, defaults to true\r\n * @returns The dynamic config handler for the config (whether new or existing)\r\n */\r\nexport function createDynamicConfig(config, defaultConfig, logger, inPlace) {\r\n    var dynamicHandler = _createDynamicHandler(logger, config || {}, inPlace);\r\n    if (defaultConfig) {\r\n        dynamicHandler.setDf(dynamicHandler.cfg, defaultConfig);\r\n    }\r\n    return dynamicHandler;\r\n}\r\n/**\r\n * Watch and track changes for accesses to the current config, the provided config MUST already be\r\n * a dynamic config or a child accessed via the dynamic config\r\n * @param logger - The logger instance to use if there is no existing handler\r\n * @returns A watcher handler instance that can be used to remove itself when being unloaded\r\n * @throws TypeError if the provided config is not a dynamic config instance\r\n */\r\nexport function onConfigChange(config, configHandler, logger) {\r\n    var handler = config[CFG_HANDLER_LINK] || config;\r\n    if (handler.cfg && (handler.cfg === config || handler.cfg[CFG_HANDLER_LINK] === handler)) {\r\n        return handler[_DYN_WATCH /* @min:%2ewatch */](configHandler);\r\n    }\r\n    _logInvalidAccess(logger, STR_NOT_DYNAMIC_ERROR + dumpObj(config));\r\n    return createDynamicConfig(config, null, logger)[_DYN_WATCH /* @min:%2ewatch */](configHandler);\r\n}\r\n//# sourceMappingURL=DynamicConfig.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { getInst } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_EVENTS_SENT, STR_PERF_EVENT } from \"./InternalConstants\";\r\nvar listenerFuncs = [STR_EVENTS_SENT, STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_PERF_EVENT];\r\nvar _aiNamespace = null;\r\nvar _debugListener;\r\nfunction _listenerProxyFunc(name, config) {\r\n    return function () {\r\n        var args = arguments;\r\n        var dbgExt = getDebugExt(config);\r\n        if (dbgExt) {\r\n            var listener = dbgExt.listener;\r\n            if (listener && listener[name]) {\r\n                listener[name][_DYN_APPLY /* @min:%2eapply */](listener, args);\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction _getExtensionNamespace() {\r\n    // Cache the lookup of the global namespace object\r\n    var target = getInst(\"Microsoft\");\r\n    if (target) {\r\n        _aiNamespace = target[\"ApplicationInsights\"];\r\n    }\r\n    return _aiNamespace;\r\n}\r\nexport function getDebugExt(config) {\r\n    var ns = _aiNamespace;\r\n    if (!ns && config.disableDbgExt !== true) {\r\n        ns = _aiNamespace || _getExtensionNamespace();\r\n    }\r\n    return ns ? ns[\"ChromeDbgExt\"] : null;\r\n}\r\nexport function getDebugListener(config) {\r\n    if (!_debugListener) {\r\n        _debugListener = {};\r\n        for (var lp = 0; lp < listenerFuncs[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n            _debugListener[listenerFuncs[lp]] = _listenerProxyFunc(listenerFuncs[lp], config);\r\n        }\r\n    }\r\n    return _debugListener;\r\n}\r\n//# sourceMappingURL=DbgExtensionUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a;\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { dumpObj, isFunction, isUndefined } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig, onConfigChange } from \"../Config/DynamicConfig\";\r\nimport { _DYN_DIAG_LOG, _DYN_LOGGER, _DYN_LOGGING_LEVEL_CONSOL4, _DYN_MESSAGE, _DYN_MESSAGE_ID, _DYN_PUSH, _DYN_REPLACE, _DYN_THROW_INTERNAL, _DYN_UNLOAD, _DYN_WARN_TO_CONSOLE } from \"../__DynamicConstants\";\r\nimport { getDebugExt } from \"./DbgExtensionUtils\";\r\nimport { getConsole, getJSON, hasJSON } from \"./EnvUtils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nvar STR_WARN_TO_CONSOLE = \"warnToConsole\";\r\n/**\r\n * For user non actionable traces use AI Internal prefix.\r\n */\r\nvar AiNonUserActionablePrefix = \"AI (Internal): \";\r\n/**\r\n * Prefix of the traces in portal.\r\n */\r\nvar AiUserActionablePrefix = \"AI: \";\r\n/**\r\n *  Session storage key for the prefix for the key indicating message type already logged\r\n */\r\nvar AIInternalMessagePrefix = \"AITR_\";\r\nvar defaultValues = {\r\n    loggingLevelConsole: 0,\r\n    loggingLevelTelemetry: 1,\r\n    maxMessageLimit: 25,\r\n    enableDebug: false\r\n};\r\nvar _logFuncs = (_a = {},\r\n    _a[0 /* eLoggingSeverity.DISABLED */] = null,\r\n    _a[1 /* eLoggingSeverity.CRITICAL */] = \"errorToConsole\",\r\n    _a[2 /* eLoggingSeverity.WARNING */] = STR_WARN_TO_CONSOLE,\r\n    _a[3 /* eLoggingSeverity.DEBUG */] = \"debugToConsole\",\r\n    _a);\r\nfunction _sanitizeDiagnosticText(text) {\r\n    if (text) {\r\n        return \"\\\"\" + text[_DYN_REPLACE /* @min:%2ereplace */](/\\\"/g, STR_EMPTY) + \"\\\"\";\r\n    }\r\n    return STR_EMPTY;\r\n}\r\nfunction _logToConsole(func, message) {\r\n    var theConsole = getConsole();\r\n    if (!!theConsole) {\r\n        var logFunc = \"log\";\r\n        if (theConsole[func]) {\r\n            logFunc = func;\r\n        }\r\n        if (isFunction(theConsole[logFunc])) {\r\n            theConsole[logFunc](message);\r\n        }\r\n    }\r\n}\r\nvar _InternalLogMessage = /** @class */ (function () {\r\n    function _InternalLogMessage(msgId, msg, isUserAct, properties) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        var _self = this;\r\n        _self[_DYN_MESSAGE_ID /* @min:%2emessageId */] = msgId;\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] =\r\n            (isUserAct ? AiUserActionablePrefix : AiNonUserActionablePrefix) +\r\n                msgId;\r\n        var strProps = STR_EMPTY;\r\n        if (hasJSON()) {\r\n            strProps = getJSON().stringify(properties);\r\n        }\r\n        var diagnosticText = (msg ? \" message:\" + _sanitizeDiagnosticText(msg) : STR_EMPTY) +\r\n            (properties ? \" props:\" + _sanitizeDiagnosticText(strProps) : STR_EMPTY);\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] += diagnosticText;\r\n    }\r\n    _InternalLogMessage.dataType = \"MessageData\";\r\n    return _InternalLogMessage;\r\n}());\r\nexport { _InternalLogMessage };\r\nexport function safeGetLogger(core, config) {\r\n    return (core || {})[_DYN_LOGGER /* @min:%2elogger */] || new DiagnosticLogger(config);\r\n}\r\nvar DiagnosticLogger = /** @class */ (function () {\r\n    function DiagnosticLogger(config) {\r\n        this.identifier = \"DiagnosticLogger\";\r\n        /**\r\n         * The internal logging queue\r\n         */\r\n        this.queue = [];\r\n        /**\r\n         * Count of internal messages sent\r\n         */\r\n        var _messageCount = 0;\r\n        /**\r\n         * Holds information about what message types were already logged to console or sent to server.\r\n         */\r\n        var _messageLogged = {};\r\n        var _loggingLevelConsole;\r\n        var _loggingLevelTelemetry;\r\n        var _maxInternalMessageLimit;\r\n        var _enableDebug;\r\n        var _unloadHandler;\r\n        dynamicProto(DiagnosticLogger, this, function (_self) {\r\n            _unloadHandler = _setDefaultsFromConfig(config || {});\r\n            _self.consoleLoggingLevel = function () { return _loggingLevelConsole; };\r\n            /**\r\n             * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n             * @param severity - The severity of the log message\r\n             * @param message  - The log message.\r\n             */\r\n            _self[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */] = function (severity, msgId, msg, properties, isUserAct) {\r\n                if (isUserAct === void 0) { isUserAct = false; }\r\n                var message = new _InternalLogMessage(msgId, msg, isUserAct, properties);\r\n                if (_enableDebug) {\r\n                    throw dumpObj(message);\r\n                }\r\n                else {\r\n                    // Get the logging function and fallback to warnToConsole of for some reason errorToConsole doesn't exist\r\n                    var logFunc = _logFuncs[severity] || STR_WARN_TO_CONSOLE;\r\n                    if (!isUndefined(message[_DYN_MESSAGE /* @min:%2emessage */])) {\r\n                        if (isUserAct) {\r\n                            // check if this message type was already logged to console for this page view and if so, don't log it again\r\n                            var messageKey = +message[_DYN_MESSAGE_ID /* @min:%2emessageId */];\r\n                            if (!_messageLogged[messageKey] && _loggingLevelConsole >= severity) {\r\n                                _self[logFunc](message[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                                _messageLogged[messageKey] = true;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Only log traces if the console Logging Level is >= the throwInternal severity level\r\n                            if (_loggingLevelConsole >= severity) {\r\n                                _self[logFunc](message[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                            }\r\n                        }\r\n                        _logInternalMessage(severity, message);\r\n                    }\r\n                    else {\r\n                        _debugExtMsg(\"throw\" + (severity === 1 /* eLoggingSeverity.CRITICAL */ ? \"Critical\" : \"Warning\"), message);\r\n                    }\r\n                }\r\n            };\r\n            _self.debugToConsole = function (message) {\r\n                _logToConsole(\"debug\", message);\r\n                _debugExtMsg(\"warning\", message);\r\n            };\r\n            _self[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */] = function (message) {\r\n                _logToConsole(\"warn\", message);\r\n                _debugExtMsg(\"warning\", message);\r\n            };\r\n            _self.errorToConsole = function (message) {\r\n                _logToConsole(\"error\", message);\r\n                _debugExtMsg(\"error\", message);\r\n            };\r\n            _self.resetInternalMessageCount = function () {\r\n                _messageCount = 0;\r\n                _messageLogged = {};\r\n            };\r\n            _self.logInternalMessage = _logInternalMessage;\r\n            _self[_DYN_UNLOAD /* @min:%2eunload */] = function (isAsync) {\r\n                _unloadHandler && _unloadHandler.rm();\r\n                _unloadHandler = null;\r\n            };\r\n            function _logInternalMessage(severity, message) {\r\n                if (_areInternalMessagesThrottled()) {\r\n                    return;\r\n                }\r\n                // check if this message type was already logged for this session and if so, don't log it again\r\n                var logMessage = true;\r\n                var messageKey = AIInternalMessagePrefix + message[_DYN_MESSAGE_ID /* @min:%2emessageId */];\r\n                // if the session storage is not available, limit to only one message type per page view\r\n                if (_messageLogged[messageKey]) {\r\n                    logMessage = false;\r\n                }\r\n                else {\r\n                    _messageLogged[messageKey] = true;\r\n                }\r\n                if (logMessage) {\r\n                    // Push the event in the internal queue\r\n                    if (severity <= _loggingLevelTelemetry) {\r\n                        _self.queue[_DYN_PUSH /* @min:%2epush */](message);\r\n                        _messageCount++;\r\n                        _debugExtMsg((severity === 1 /* eLoggingSeverity.CRITICAL */ ? \"error\" : \"warn\"), message);\r\n                    }\r\n                    // When throttle limit reached, send a special event\r\n                    if (_messageCount === _maxInternalMessageLimit) {\r\n                        var throttleLimitMessage = \"Internal events throttle limit per PageView reached for this app.\";\r\n                        var throttleMessage = new _InternalLogMessage(23 /* _eInternalMessageId.MessageLimitPerPVExceeded */, throttleLimitMessage, false);\r\n                        _self.queue[_DYN_PUSH /* @min:%2epush */](throttleMessage);\r\n                        if (severity === 1 /* eLoggingSeverity.CRITICAL */) {\r\n                            _self.errorToConsole(throttleLimitMessage);\r\n                        }\r\n                        else {\r\n                            _self[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](throttleLimitMessage);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            function _setDefaultsFromConfig(config) {\r\n                // make sure the config is dynamic\r\n                return onConfigChange(createDynamicConfig(config, defaultValues, _self).cfg, function (details) {\r\n                    var config = details.cfg;\r\n                    _loggingLevelConsole = config[_DYN_LOGGING_LEVEL_CONSOL4 /* @min:%2eloggingLevelConsole */];\r\n                    _loggingLevelTelemetry = config.loggingLevelTelemetry;\r\n                    _maxInternalMessageLimit = config.maxMessageLimit;\r\n                    _enableDebug = config.enableDebug;\r\n                });\r\n            }\r\n            function _areInternalMessagesThrottled() {\r\n                return _messageCount >= _maxInternalMessageLimit;\r\n            }\r\n            function _debugExtMsg(name, data) {\r\n                var dbgExt = getDebugExt(config || {});\r\n                if (dbgExt && dbgExt[_DYN_DIAG_LOG /* @min:%2ediagLog */]) {\r\n                    dbgExt[_DYN_DIAG_LOG /* @min:%2ediagLog */](name, data);\r\n                }\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for DiagnosticLogger.prototype.consoleLoggingLevel.\r\n// Removed Stub for DiagnosticLogger.prototype.throwInternal.\r\n// Removed Stub for DiagnosticLogger.prototype.debugToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.warnToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.errorToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.resetInternalMessageCount.\r\n// Removed Stub for DiagnosticLogger.prototype.logInternalMessage.\r\n// Removed Stub for DiagnosticLogger.prototype.unload.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    DiagnosticLogger.__ieDyn=1;\n\n    return DiagnosticLogger;\r\n}());\r\nexport { DiagnosticLogger };\r\nfunction _getLogger(logger) {\r\n    return (logger || new DiagnosticLogger());\r\n}\r\n/**\r\n * This is a helper method which will call throwInternal on the passed logger, will throw exceptions in\r\n * debug mode or attempt to log the error as a console warning. This helper is provided mostly to better\r\n * support minification as logger.throwInternal() will not compress the publish \"throwInternal\" used throughout\r\n * the code.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param severity - The severity of the log message\r\n * @param message  - The log message.\r\n */\r\nexport function _throwInternal(logger, severity, msgId, msg, properties, isUserAct) {\r\n    if (isUserAct === void 0) { isUserAct = false; }\r\n    _getLogger(logger)[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](severity, msgId, msg, properties, isUserAct);\r\n}\r\n/**\r\n * This is a helper method which will call warnToConsole on the passed logger with the provided message.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param message  - The log message.\r\n */\r\nexport function _warnToConsole(logger, message) {\r\n    _getLogger(logger)[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](message);\r\n}\r\n/**\r\n * Logs a message to the internal queue.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param severity  - The severity of the log message\r\n * @param message - The message to log.\r\n */\r\nexport function _logInternalMessage(logger, severity, message) {\r\n    _getLogger(logger).logInternalMessage(severity, message);\r\n}\r\n//# sourceMappingURL=DiagnosticLogger.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nvar _a, _b;\r\nimport { arrForEach, arrIndexOf, dumpObj, getDocument, getLazy, getNavigator, isArray, isFunction, isNullOrUndefined, isString, isTruthy, isUndefined, objForEachKey, strEndsWith, strIndexOf, strLeft, strSubstring, strTrim, utcNow } from \"@nevware21/ts-utils\";\r\nimport { cfgDfMerge } from \"../Config/ConfigDefaultHelpers\";\r\nimport { createDynamicConfig, onConfigChange } from \"../Config/DynamicConfig\";\r\nimport { _DYN_ENABLED, _DYN_LENGTH, _DYN_LOGGER, _DYN_SPLIT, _DYN_USER_AGENT } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nimport { getLocation, isIE } from \"./EnvUtils\";\r\nimport { getExceptionName, isNotNullOrUndefined, setValue, strContains } from \"./HelperFuncs\";\r\nimport { STR_DOMAIN, STR_EMPTY, STR_PATH, UNDEFINED_VALUE } from \"./InternalConstants\";\r\nvar strToGMTString = \"toGMTString\";\r\nvar strToUTCString = \"toUTCString\";\r\nvar strCookie = \"cookie\";\r\nvar strExpires = \"expires\";\r\nvar strIsCookieUseDisabled = \"isCookieUseDisabled\";\r\nvar strDisableCookiesUsage = \"disableCookiesUsage\";\r\nvar strConfigCookieMgr = \"_ckMgr\";\r\nvar _supportsCookies = null;\r\nvar _allowUaSameSite = null;\r\nvar _parsedCookieValue = null;\r\nvar _doc;\r\nvar _cookieCache = {};\r\nvar _globalCookieConfig = {};\r\n// // `isCookieUseDisabled` is deprecated, so explicitly casting as a key of IConfiguration to avoid typing error\r\n// // when both isCookieUseDisabled and disableCookiesUsage are used disableCookiesUsage will take precedent, which is\r\n// // why its listed first\r\n/**\r\n * Set the supported dynamic config values as undefined (or an empty object) so that\r\n * any listeners will be informed of any changes.\r\n * Explicitly NOT including the deprecated `isCookieUseDisabled` as we don't want to support\r\n * the v1 deprecated field as dynamic for updates\r\n */\r\nvar rootDefaultConfig = (_a = {\r\n        cookieCfg: cfgDfMerge((_b = {},\r\n            _b[STR_DOMAIN] = { fb: \"cookieDomain\", dfVal: isNotNullOrUndefined },\r\n            _b.path = { fb: \"cookiePath\", dfVal: isNotNullOrUndefined },\r\n            _b.enabled = UNDEFINED_VALUE,\r\n            _b.ignoreCookies = UNDEFINED_VALUE,\r\n            _b.blockedCookies = UNDEFINED_VALUE,\r\n            _b)),\r\n        cookieDomain: UNDEFINED_VALUE,\r\n        cookiePath: UNDEFINED_VALUE\r\n    },\r\n    _a[strDisableCookiesUsage] = UNDEFINED_VALUE,\r\n    _a);\r\nfunction _getDoc() {\r\n    !_doc && (_doc = getLazy(function () { return getDocument(); }));\r\n}\r\n/**\r\n * @ignore\r\n * DO NOT USE or export from the module, this is exposed as public to support backward compatibility of previous static utility methods only.\r\n * If you want to manager cookies either use the ICookieMgr available from the core instance via getCookieMgr() or create\r\n * your own instance of the CookieMgr and use that.\r\n * Using this directly for enabling / disabling cookie handling will not only affect your usage but EVERY user of cookies.\r\n * Example, if you are using a shared component that is also using Application Insights you will affect their cookie handling.\r\n * @param logger - The DiagnosticLogger to use for reporting errors.\r\n */\r\nfunction _gblCookieMgr(config, logger) {\r\n    // Stash the global instance against the BaseCookieMgr class\r\n    var inst = createCookieMgr[strConfigCookieMgr] || _globalCookieConfig[strConfigCookieMgr];\r\n    if (!inst) {\r\n        // Note: not using the getSetValue() helper as that would require always creating a temporary cookieMgr\r\n        // that ultimately is never used\r\n        inst = createCookieMgr[strConfigCookieMgr] = createCookieMgr(config, logger);\r\n        _globalCookieConfig[strConfigCookieMgr] = inst;\r\n    }\r\n    return inst;\r\n}\r\nfunction _isMgrEnabled(cookieMgr) {\r\n    if (cookieMgr) {\r\n        return cookieMgr.isEnabled();\r\n    }\r\n    return true;\r\n}\r\nfunction _isIgnoredCookie(cookieMgrCfg, name) {\r\n    if (name && cookieMgrCfg && isArray(cookieMgrCfg.ignoreCookies)) {\r\n        return arrIndexOf(cookieMgrCfg.ignoreCookies, name) !== -1;\r\n    }\r\n    return false;\r\n}\r\nfunction _isBlockedCookie(cookieMgrCfg, name) {\r\n    if (name && cookieMgrCfg && isArray(cookieMgrCfg.blockedCookies)) {\r\n        if (arrIndexOf(cookieMgrCfg.blockedCookies, name) !== -1) {\r\n            return true;\r\n        }\r\n    }\r\n    return _isIgnoredCookie(cookieMgrCfg, name);\r\n}\r\nfunction _isCfgEnabled(rootConfig, cookieMgrConfig) {\r\n    var isCfgEnabled = cookieMgrConfig[_DYN_ENABLED /* @min:%2eenabled */];\r\n    if (isNullOrUndefined(isCfgEnabled)) {\r\n        // Set the enabled from the provided setting or the legacy root values\r\n        var cookieEnabled = void 0;\r\n        // This field is deprecated and dynamic updates will not be fully supported\r\n        if (!isUndefined(rootConfig[strIsCookieUseDisabled])) {\r\n            cookieEnabled = !rootConfig[strIsCookieUseDisabled];\r\n        }\r\n        // If this value is defined it takes precedent over the above\r\n        if (!isUndefined(rootConfig[strDisableCookiesUsage])) {\r\n            cookieEnabled = !rootConfig[strDisableCookiesUsage];\r\n        }\r\n        // Not setting the cookieMgrConfig.enabled as that will update (set) the global dynamic config\r\n        // So future \"updates\" then may not be as expected\r\n        isCfgEnabled = cookieEnabled;\r\n    }\r\n    return isCfgEnabled;\r\n}\r\n/**\r\n * Helper to return the ICookieMgr from the core (if not null/undefined) or a default implementation\r\n * associated with the configuration or a legacy default.\r\n * @param core - The AppInsightsCore instance to get the cookie manager from\r\n * @param config - The config to use if the core is not available\r\n * @returns\r\n */\r\nexport function safeGetCookieMgr(core, config) {\r\n    var cookieMgr;\r\n    if (core) {\r\n        // Always returns an instance\r\n        cookieMgr = core.getCookieMgr();\r\n    }\r\n    else if (config) {\r\n        var cookieCfg = config.cookieCfg;\r\n        if (cookieCfg && cookieCfg[strConfigCookieMgr]) {\r\n            cookieMgr = cookieCfg[strConfigCookieMgr];\r\n        }\r\n        else {\r\n            cookieMgr = createCookieMgr(config);\r\n        }\r\n    }\r\n    if (!cookieMgr) {\r\n        // Get or initialize the default global (legacy) cookie manager if we couldn't find one\r\n        cookieMgr = _gblCookieMgr(config, (core || {})[_DYN_LOGGER /* @min:%2elogger */]);\r\n    }\r\n    return cookieMgr;\r\n}\r\nexport function createCookieMgr(rootConfig, logger) {\r\n    var cookieMgrConfig;\r\n    var _path;\r\n    var _domain;\r\n    var unloadHandler;\r\n    // Explicitly checking against false, so that setting to undefined will === true\r\n    var _enabled;\r\n    var _getCookieFn;\r\n    var _setCookieFn;\r\n    var _delCookieFn;\r\n    // Make sure the root config is dynamic as it may be the global config\r\n    rootConfig = createDynamicConfig(rootConfig || _globalCookieConfig, null, logger).cfg;\r\n    // Will get recalled if the referenced configuration is changed\r\n    unloadHandler = onConfigChange(rootConfig, function (details) {\r\n        // Make sure the root config has all of the the defaults to the root config to ensure they are dynamic\r\n        details.setDf(details.cfg, rootDefaultConfig);\r\n        // Create and apply the defaults to the cookieCfg element\r\n        cookieMgrConfig = details.ref(details.cfg, \"cookieCfg\"); // details.setDf(details.cfg.cookieCfg, defaultConfig);\r\n        _path = cookieMgrConfig[STR_PATH /* @min:%2epath */] || \"/\";\r\n        _domain = cookieMgrConfig[STR_DOMAIN /* @min:%2edomain */];\r\n        // Explicitly checking against false, so that setting to undefined will === true\r\n        _enabled = _isCfgEnabled(rootConfig, cookieMgrConfig) !== false;\r\n        _getCookieFn = cookieMgrConfig.getCookie || _getCookieValue;\r\n        _setCookieFn = cookieMgrConfig.setCookie || _setCookieValue;\r\n        _delCookieFn = cookieMgrConfig.delCookie || _setCookieValue;\r\n    }, logger);\r\n    var cookieMgr = {\r\n        isEnabled: function () {\r\n            var enabled = _isCfgEnabled(rootConfig, cookieMgrConfig) !== false && _enabled && areCookiesSupported(logger);\r\n            // Using an indirect lookup for any global cookie manager to support tree shaking for SDK's\r\n            // that don't use the \"applicationinsights-core\" version of the default cookie function\r\n            var gblManager = _globalCookieConfig[strConfigCookieMgr];\r\n            if (enabled && gblManager && cookieMgr !== gblManager) {\r\n                // Make sure the GlobalCookie Manager instance (if not this instance) is also enabled.\r\n                // As the global (deprecated) functions may have been called (for backward compatibility)\r\n                enabled = _isMgrEnabled(gblManager);\r\n            }\r\n            return enabled;\r\n        },\r\n        setEnabled: function (value) {\r\n            // Explicitly checking against false, so that setting to undefined will === true\r\n            _enabled = value !== false;\r\n            cookieMgrConfig[_DYN_ENABLED /* @min:%2eenabled */] = value;\r\n        },\r\n        set: function (name, value, maxAgeSec, domain, path) {\r\n            var result = false;\r\n            if (_isMgrEnabled(cookieMgr) && !_isBlockedCookie(cookieMgrConfig, name)) {\r\n                var values = {};\r\n                var theValue = strTrim(value || STR_EMPTY);\r\n                var idx = strIndexOf(theValue, \";\");\r\n                if (idx !== -1) {\r\n                    theValue = strTrim(strLeft(value, idx));\r\n                    values = _extractParts(strSubstring(value, idx + 1));\r\n                }\r\n                // Only update domain if not already present (isUndefined) and the value is truthy (not null, undefined or empty string)\r\n                setValue(values, STR_DOMAIN, domain || _domain, isTruthy, isUndefined);\r\n                if (!isNullOrUndefined(maxAgeSec)) {\r\n                    var _isIE = isIE();\r\n                    if (isUndefined(values[strExpires])) {\r\n                        var nowMs = utcNow();\r\n                        // Only add expires if not already present\r\n                        var expireMs = nowMs + (maxAgeSec * 1000);\r\n                        // Sanity check, if zero or -ve then ignore\r\n                        if (expireMs > 0) {\r\n                            var expiry = new Date();\r\n                            expiry.setTime(expireMs);\r\n                            setValue(values, strExpires, _formatDate(expiry, !_isIE ? strToUTCString : strToGMTString) || _formatDate(expiry, _isIE ? strToGMTString : strToUTCString) || STR_EMPTY, isTruthy);\r\n                        }\r\n                    }\r\n                    if (!_isIE) {\r\n                        // Only replace if not already present\r\n                        setValue(values, \"max-age\", STR_EMPTY + maxAgeSec, null, isUndefined);\r\n                    }\r\n                }\r\n                var location_1 = getLocation();\r\n                if (location_1 && location_1.protocol === \"https:\") {\r\n                    setValue(values, \"secure\", null, null, isUndefined);\r\n                    // Only set same site if not also secure\r\n                    if (_allowUaSameSite === null) {\r\n                        _allowUaSameSite = !uaDisallowsSameSiteNone((getNavigator() || {})[_DYN_USER_AGENT /* @min:%2euserAgent */]);\r\n                    }\r\n                    if (_allowUaSameSite) {\r\n                        setValue(values, \"SameSite\", \"None\", null, isUndefined);\r\n                    }\r\n                }\r\n                setValue(values, STR_PATH, path || _path, null, isUndefined);\r\n                //let setCookieFn = cookieMgrConfig.setCookie || _setCookieValue;\r\n                _setCookieFn(name, _formatCookieValue(theValue, values));\r\n                result = true;\r\n            }\r\n            return result;\r\n        },\r\n        get: function (name) {\r\n            var value = STR_EMPTY;\r\n            if (_isMgrEnabled(cookieMgr) && !_isIgnoredCookie(cookieMgrConfig, name)) {\r\n                value = _getCookieFn(name);\r\n            }\r\n            return value;\r\n        },\r\n        del: function (name, path) {\r\n            var result = false;\r\n            if (_isMgrEnabled(cookieMgr)) {\r\n                // Only remove the cookie if the manager and cookie support has not been disabled\r\n                result = cookieMgr.purge(name, path);\r\n            }\r\n            return result;\r\n        },\r\n        purge: function (name, path) {\r\n            var _a;\r\n            var result = false;\r\n            if (areCookiesSupported(logger)) {\r\n                // Setting the expiration date in the past immediately removes the cookie\r\n                var values = (_a = {},\r\n                    _a[STR_PATH] = path ? path : \"/\",\r\n                    _a[strExpires] = \"Thu, 01 Jan 1970 00:00:01 GMT\",\r\n                    _a);\r\n                if (!isIE()) {\r\n                    // Set max age to expire now\r\n                    values[\"max-age\"] = \"0\";\r\n                }\r\n                // let delCookie = cookieMgrConfig.delCookie || _setCookieValue;\r\n                _delCookieFn(name, _formatCookieValue(STR_EMPTY, values));\r\n                result = true;\r\n            }\r\n            return result;\r\n        },\r\n        unload: function (isAsync) {\r\n            unloadHandler && unloadHandler.rm();\r\n            unloadHandler = null;\r\n        }\r\n    };\r\n    // Associated this cookie manager with the config\r\n    cookieMgr[strConfigCookieMgr] = cookieMgr;\r\n    return cookieMgr;\r\n}\r\n/*\r\n* Helper method to tell if document.cookie object is supported by the runtime\r\n*/\r\nexport function areCookiesSupported(logger) {\r\n    if (_supportsCookies === null) {\r\n        _supportsCookies = false;\r\n        !_doc && _getDoc();\r\n        try {\r\n            var doc = _doc.v || {};\r\n            _supportsCookies = doc[strCookie] !== undefined;\r\n        }\r\n        catch (e) {\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 68 /* _eInternalMessageId.CannotAccessCookie */, \"Cannot access document.cookie - \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return _supportsCookies;\r\n}\r\nfunction _extractParts(theValue) {\r\n    var values = {};\r\n    if (theValue && theValue[_DYN_LENGTH /* @min:%2elength */]) {\r\n        var parts = strTrim(theValue)[_DYN_SPLIT /* @min:%2esplit */](\";\");\r\n        arrForEach(parts, function (thePart) {\r\n            thePart = strTrim(thePart || STR_EMPTY);\r\n            if (thePart) {\r\n                var idx = strIndexOf(thePart, \"=\");\r\n                if (idx === -1) {\r\n                    values[thePart] = null;\r\n                }\r\n                else {\r\n                    values[strTrim(strLeft(thePart, idx))] = strTrim(strSubstring(thePart, idx + 1));\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return values;\r\n}\r\nfunction _formatDate(theDate, func) {\r\n    if (isFunction(theDate[func])) {\r\n        return theDate[func]();\r\n    }\r\n    return null;\r\n}\r\nfunction _formatCookieValue(value, values) {\r\n    var cookieValue = value || STR_EMPTY;\r\n    objForEachKey(values, function (name, theValue) {\r\n        cookieValue += \"; \" + name + (!isNullOrUndefined(theValue) ? \"=\" + theValue : STR_EMPTY);\r\n    });\r\n    return cookieValue;\r\n}\r\nfunction _getCookieValue(name) {\r\n    var cookieValue = STR_EMPTY;\r\n    !_doc && _getDoc();\r\n    if (_doc.v) {\r\n        var theCookie = _doc.v[strCookie] || STR_EMPTY;\r\n        if (_parsedCookieValue !== theCookie) {\r\n            _cookieCache = _extractParts(theCookie);\r\n            _parsedCookieValue = theCookie;\r\n        }\r\n        cookieValue = strTrim(_cookieCache[name] || STR_EMPTY);\r\n    }\r\n    return cookieValue;\r\n}\r\nfunction _setCookieValue(name, cookieValue) {\r\n    !_doc && _getDoc();\r\n    if (_doc.v) {\r\n        _doc.v[strCookie] = name + \"=\" + cookieValue;\r\n    }\r\n}\r\nexport function uaDisallowsSameSiteNone(userAgent) {\r\n    if (!isString(userAgent)) {\r\n        return false;\r\n    }\r\n    // Cover all iOS based browsers here. This includes:\r\n    // - Safari on iOS 12 for iPhone, iPod Touch, iPad\r\n    // - WkWebview on iOS 12 for iPhone, iPod Touch, iPad\r\n    // - Chrome on iOS 12 for iPhone, iPod Touch, iPad\r\n    // All of which are broken by SameSite=None, because they use the iOS networking stack\r\n    if (strContains(userAgent, \"CPU iPhone OS 12\") || strContains(userAgent, \"iPad; CPU OS 12\")) {\r\n        return true;\r\n    }\r\n    // Cover Mac OS X based browsers that use the Mac OS networking stack. This includes:\r\n    // - Safari on Mac OS X\r\n    // This does not include:\r\n    // - Internal browser on Mac OS X\r\n    // - Chrome on Mac OS X\r\n    // - Chromium on Mac OS X\r\n    // Because they do not use the Mac OS networking stack.\r\n    if (strContains(userAgent, \"Macintosh; Intel Mac OS X 10_14\") && strContains(userAgent, \"Version/\") && strContains(userAgent, \"Safari\")) {\r\n        return true;\r\n    }\r\n    // Cover Mac OS X internal browsers that use the Mac OS networking stack. This includes:\r\n    // - Internal browser on Mac OS X\r\n    // This does not include:\r\n    // - Safari on Mac OS X\r\n    // - Chrome on Mac OS X\r\n    // - Chromium on Mac OS X\r\n    // Because they do not use the Mac OS networking stack.\r\n    if (strContains(userAgent, \"Macintosh; Intel Mac OS X 10_14\") && strEndsWith(userAgent, \"AppleWebKit/605.1.15 (KHTML, like Gecko)\")) {\r\n        return true;\r\n    }\r\n    // Cover Chrome 50-69, because some versions are broken by SameSite=None, and none in this range require it.\r\n    // Note: this covers some pre-Chromium Edge versions, but pre-Chromim Edge does not require SameSite=None, so this is fine.\r\n    // Note: this regex applies to Windows, Mac OS X, and Linux, deliberately.\r\n    if (strContains(userAgent, \"Chrome/5\") || strContains(userAgent, \"Chrome/6\")) {\r\n        return true;\r\n    }\r\n    // Unreal Engine runs Chromium 59, but does not advertise as Chrome until 4.23. Treat versions of Unreal\r\n    // that don't specify their Chrome version as lacking support for SameSite=None.\r\n    if (strContains(userAgent, \"UnrealEngine\") && !strContains(userAgent, \"Chrome\")) {\r\n        return true;\r\n    }\r\n    // UCBrowser < 12.13.2 ignores Set-Cookie headers with SameSite=None\r\n    // NB: this rule isn't complete - you need regex to make a complete rule.\r\n    // See: https://www.chromium.org/updates/same-site/incompatible-clients\r\n    if (strContains(userAgent, \"UCBrowser/12\") || strContains(userAgent, \"UCBrowser/11\")) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=CookieMgr.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { asString, isBoolean, isFunction, isNullOrUndefined, isString } from \"@nevware21/ts-utils\";\r\nimport { STR_EMPTY } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_TO_LOWER_CASE } from \"../__DynamicConstants\";\r\n/**\r\n * @internal\r\n * @ignore\r\n * @param str\r\n * @param defaultValue\r\n * @returns\r\n */\r\nfunction _stringToBoolOrDefault(theValue, defaultValue, theConfig) {\r\n    if (!theValue && isNullOrUndefined(theValue)) {\r\n        return defaultValue;\r\n    }\r\n    if (isBoolean(theValue)) {\r\n        return theValue;\r\n    }\r\n    return asString(theValue)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === \"true\";\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance with the field defined as an object\r\n * that should be merged\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfMerge(defaultValue) {\r\n    return {\r\n        mrg: true,\r\n        v: defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance with the provided field set function\r\n * @param setter - The IConfigCheckFn function to validate the user provided value\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfSet(setter, defaultValue) {\r\n    return {\r\n        set: setter,\r\n        v: defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance with the provided field validator\r\n * @param validator - The IConfigCheckFn function to validate the user provided value\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @param fallBackName - The fallback configuration name if the current value is not available\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfValidate(validator, defaultValue, fallBackName) {\r\n    return {\r\n        fb: fallBackName,\r\n        isVal: validator,\r\n        v: defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance that will validate and convert the user\r\n * provided value to a boolean from a string or boolean value\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @param fallBackName - The fallback configuration name if the current value is not available\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfBoolean(defaultValue, fallBackName) {\r\n    return {\r\n        fb: fallBackName,\r\n        set: _stringToBoolOrDefault,\r\n        v: !!defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance that will validate that the user\r\n * provided value is a function.\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfFunc(defaultValue) {\r\n    return {\r\n        isVal: isFunction,\r\n        v: defaultValue || null\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance that will validate that the user\r\n * provided value is a function.\r\n * @param defaultValue - The default string value to apply it not provided or it's not valid, defaults to an empty string\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfString(defaultValue) {\r\n    return {\r\n        isVal: isString,\r\n        v: asString(defaultValue || STR_EMPTY)\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance identifying that value associated with this property\r\n * should not have it's properties converted into a dynamic config properties.\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfBlockPropValue(defaultValue) {\r\n    return {\r\n        blkVal: true,\r\n        v: defaultValue\r\n    };\r\n}\r\n//# sourceMappingURL=ConfigDefaultHelpers.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { isArray, isFunction, objDefine, utcNow } from \"@nevware21/ts-utils\";\r\nimport { _DYN_GET_CTX, _DYN_IS_CHILD_EVT, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_SET_CTX } from \"../__DynamicConstants\";\r\nimport { STR_GET_PERF_MGR, STR_PERF_EVENT } from \"./InternalConstants\";\r\nvar strExecutionContextKey = \"ctx\";\r\nvar strParentContextKey = \"ParentContextKey\";\r\nvar strChildrenContextKey = \"ChildrenContextKey\";\r\nvar _defaultPerfManager = null;\r\nvar PerfEvent = /** @class */ (function () {\r\n    function PerfEvent(name, payloadDetails, isAsync) {\r\n        var _self = this;\r\n        _self.start = utcNow();\r\n        _self[_DYN_NAME /* @min:%2ename */] = name;\r\n        _self.isAsync = isAsync;\r\n        _self[_DYN_IS_CHILD_EVT /* @min:%2eisChildEvt */] = function () { return false; };\r\n        if (isFunction(payloadDetails)) {\r\n            // Create an accessor to minimize the potential performance impact of executing the payloadDetails callback\r\n            var theDetails_1;\r\n            objDefine(_self, \"payload\", {\r\n                g: function () {\r\n                    // Delay the execution of the payloadDetails until needed\r\n                    if (!theDetails_1 && isFunction(payloadDetails)) {\r\n                        theDetails_1 = payloadDetails();\r\n                        // clear it out now so the referenced objects can be garbage collected\r\n                        payloadDetails = null;\r\n                    }\r\n                    return theDetails_1;\r\n                }\r\n            });\r\n        }\r\n        _self[_DYN_GET_CTX /* @min:%2egetCtx */] = function (key) {\r\n            if (key) {\r\n                // The parent and child links are located directly on the object (for better viewing in the DebugPlugin)\r\n                if (key === PerfEvent[strParentContextKey] || key === PerfEvent[strChildrenContextKey]) {\r\n                    return _self[key];\r\n                }\r\n                return (_self[strExecutionContextKey] || {})[key];\r\n            }\r\n            return null;\r\n        };\r\n        _self[_DYN_SET_CTX /* @min:%2esetCtx */] = function (key, value) {\r\n            if (key) {\r\n                // Put the parent and child links directly on the object (for better viewing in the DebugPlugin)\r\n                if (key === PerfEvent[strParentContextKey]) {\r\n                    // Simple assumption, if we are setting a parent then we must be a child\r\n                    if (!_self[key]) {\r\n                        _self[_DYN_IS_CHILD_EVT /* @min:%2eisChildEvt */] = function () { return true; };\r\n                    }\r\n                    _self[key] = value;\r\n                }\r\n                else if (key === PerfEvent[strChildrenContextKey]) {\r\n                    _self[key] = value;\r\n                }\r\n                else {\r\n                    var ctx = _self[strExecutionContextKey] = _self[strExecutionContextKey] || {};\r\n                    ctx[key] = value;\r\n                }\r\n            }\r\n        };\r\n        _self.complete = function () {\r\n            var childTime = 0;\r\n            var childEvts = _self[_DYN_GET_CTX /* @min:%2egetCtx */](PerfEvent[strChildrenContextKey]);\r\n            if (isArray(childEvts)) {\r\n                for (var lp = 0; lp < childEvts[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                    var childEvt = childEvts[lp];\r\n                    if (childEvt) {\r\n                        childTime += childEvt.time;\r\n                    }\r\n                }\r\n            }\r\n            _self.time = utcNow() - _self.start;\r\n            _self.exTime = _self.time - childTime;\r\n            _self.complete = function () { };\r\n        };\r\n    }\r\n    PerfEvent.ParentContextKey = \"parent\";\r\n    PerfEvent.ChildrenContextKey = \"childEvts\";\r\n    return PerfEvent;\r\n}());\r\nexport { PerfEvent };\r\nvar PerfManager = /** @class */ (function () {\r\n    function PerfManager(manager) {\r\n        /**\r\n         * General bucket used for execution context set and retrieved via setCtx() and getCtx.\r\n         * Defined as private so it can be visualized via the DebugPlugin\r\n         */\r\n        this.ctx = {};\r\n        dynamicProto(PerfManager, this, function (_self) {\r\n            _self.create = function (src, payloadDetails, isAsync) {\r\n                // TODO (@MSNev): at some point we will want to add additional configuration to \"select\" which events to instrument\r\n                // for now this is just a simple do everything.\r\n                return new PerfEvent(src, payloadDetails, isAsync);\r\n            };\r\n            _self.fire = function (perfEvent) {\r\n                if (perfEvent) {\r\n                    perfEvent.complete();\r\n                    if (manager && isFunction(manager[STR_PERF_EVENT /* @min:%2eperfEvent */])) {\r\n                        manager[STR_PERF_EVENT /* @min:%2eperfEvent */](perfEvent);\r\n                    }\r\n                }\r\n            };\r\n            _self[_DYN_SET_CTX /* @min:%2esetCtx */] = function (key, value) {\r\n                if (key) {\r\n                    var ctx = _self[strExecutionContextKey] = _self[strExecutionContextKey] || {};\r\n                    ctx[key] = value;\r\n                }\r\n            };\r\n            _self[_DYN_GET_CTX /* @min:%2egetCtx */] = function (key) {\r\n                return (_self[strExecutionContextKey] || {})[key];\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for PerfManager.prototype.create.\r\n// Removed Stub for PerfManager.prototype.fire.\r\n// Removed Stub for PerfManager.prototype.setCtx.\r\n// Removed Stub for PerfManager.prototype.getCtx.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    PerfManager.__ieDyn=1;\n\n    return PerfManager;\r\n}());\r\nexport { PerfManager };\r\nvar doPerfActiveKey = \"CoreUtils.doPerf\";\r\n/**\r\n * Helper function to wrap a function with a perf event\r\n * @param mgrSource - The Performance Manager or a Performance provider source (may be null)\r\n * @param getSource - The callback to create the source name for the event (if perf monitoring is enabled)\r\n * @param func - The function to call and measure\r\n * @param details - A function to return the payload details\r\n * @param isAsync - Is the event / function being call asynchronously or synchronously\r\n */\r\nexport function doPerf(mgrSource, getSource, func, details, isAsync) {\r\n    if (mgrSource) {\r\n        var perfMgr = mgrSource;\r\n        if (perfMgr[STR_GET_PERF_MGR]) {\r\n            // Looks like a perf manager provider object\r\n            perfMgr = perfMgr[STR_GET_PERF_MGR]();\r\n        }\r\n        if (perfMgr) {\r\n            var perfEvt = void 0;\r\n            var currentActive = perfMgr[_DYN_GET_CTX /* @min:%2egetCtx */](doPerfActiveKey);\r\n            try {\r\n                perfEvt = perfMgr.create(getSource(), details, isAsync);\r\n                if (perfEvt) {\r\n                    if (currentActive && perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                        perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */](PerfEvent[strParentContextKey], currentActive);\r\n                        if (currentActive[_DYN_GET_CTX /* @min:%2egetCtx */] && currentActive[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                            var children = currentActive[_DYN_GET_CTX /* @min:%2egetCtx */](PerfEvent[strChildrenContextKey]);\r\n                            if (!children) {\r\n                                children = [];\r\n                                currentActive[_DYN_SET_CTX /* @min:%2esetCtx */](PerfEvent[strChildrenContextKey], children);\r\n                            }\r\n                            children[_DYN_PUSH /* @min:%2epush */](perfEvt);\r\n                        }\r\n                    }\r\n                    // Set this event as the active event now\r\n                    perfMgr[_DYN_SET_CTX /* @min:%2esetCtx */](doPerfActiveKey, perfEvt);\r\n                    return func(perfEvt);\r\n                }\r\n            }\r\n            catch (ex) {\r\n                if (perfEvt && perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                    perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */](\"exception\", ex);\r\n                }\r\n            }\r\n            finally {\r\n                // fire the perf event\r\n                if (perfEvt) {\r\n                    perfMgr.fire(perfEvt);\r\n                }\r\n                // Reset the active event to the previous value\r\n                perfMgr[_DYN_SET_CTX /* @min:%2esetCtx */](doPerfActiveKey, currentActive);\r\n            }\r\n        }\r\n    }\r\n    return func();\r\n}\r\n/**\r\n * Set the global performance manager to use when there is no core instance or it has not been initialized yet.\r\n * @param perfManager - The IPerfManager instance to use when no performance manager is supplied.\r\n */\r\nexport function setGblPerfMgr(perfManager) {\r\n    _defaultPerfManager = perfManager;\r\n}\r\n/**\r\n * Get the current global performance manager that will be used with no performance manager is supplied.\r\n * @returns - The current default manager\r\n */\r\nexport function getGblPerfMgr() {\r\n    return _defaultPerfManager;\r\n}\r\n//# sourceMappingURL=PerfManager.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { arrForEach, isFunction } from \"@nevware21/ts-utils\";\r\nimport { _DYN_GET_NEXT, _DYN_GET_PLUGIN, _DYN_INITIALIZE, _DYN_IS_INITIALIZED, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_SET_NEXT_PLUGIN, _DYN_TEARDOWN, _DYN_TRACE_FLAGS, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { createElmNodeData } from \"./DataCacheHelper\";\r\nimport { STR_CORE, STR_PRIORITY, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { isValidSpanId, isValidTraceId } from \"./W3cTraceParent\";\r\nvar pluginStateData = createElmNodeData(\"plugin\");\r\nexport function _getPluginState(plugin) {\r\n    return pluginStateData.get(plugin, \"state\", {}, true);\r\n}\r\n/**\r\n * Initialize the queue of plugins\r\n * @param plugins - The array of plugins to initialize and setting of the next plugin\r\n * @param config - The current config for the instance\r\n * @param core - THe current core instance\r\n * @param extensions - The extensions\r\n */\r\nexport function initializePlugins(processContext, extensions) {\r\n    // Set the next plugin and identified the uninitialized plugins\r\n    var initPlugins = [];\r\n    var lastPlugin = null;\r\n    var proxy = processContext[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n    var pluginState;\r\n    while (proxy) {\r\n        var thePlugin = proxy[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]();\r\n        if (thePlugin) {\r\n            if (lastPlugin && lastPlugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */] && thePlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */]) {\r\n                // Set this plugin as the next for the previous one\r\n                lastPlugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */](thePlugin);\r\n            }\r\n            pluginState = _getPluginState(thePlugin);\r\n            var isInitialized = !!pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */];\r\n            if (thePlugin[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]) {\r\n                isInitialized = thePlugin[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]();\r\n            }\r\n            if (!isInitialized) {\r\n                initPlugins[_DYN_PUSH /* @min:%2epush */](thePlugin);\r\n            }\r\n            lastPlugin = thePlugin;\r\n            proxy = proxy[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n        }\r\n    }\r\n    // Now initialize the plugins\r\n    arrForEach(initPlugins, function (thePlugin) {\r\n        var core = processContext[STR_CORE /* @min:%2ecore */]();\r\n        thePlugin[_DYN_INITIALIZE /* @min:%2einitialize */](processContext.getCfg(), core, extensions, processContext[_DYN_GET_NEXT /* @min:%2egetNext */]());\r\n        pluginState = _getPluginState(thePlugin);\r\n        // Only add the core to the state if the plugin didn't set it (doesn't extend from BaseTelemetryPlugin)\r\n        if (!thePlugin[STR_CORE] && !pluginState[STR_CORE]) {\r\n            pluginState[STR_CORE] = core;\r\n        }\r\n        pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = true;\r\n        delete pluginState[_DYN_TEARDOWN /* @min:%2eteardown */];\r\n    });\r\n}\r\nexport function sortPlugins(plugins) {\r\n    // Sort by priority\r\n    return plugins.sort(function (extA, extB) {\r\n        var result = 0;\r\n        if (extB) {\r\n            var bHasProcess = extB[STR_PROCESS_TELEMETRY];\r\n            if (extA[STR_PROCESS_TELEMETRY]) {\r\n                result = bHasProcess ? extA[STR_PRIORITY] - extB[STR_PRIORITY] : 1;\r\n            }\r\n            else if (bHasProcess) {\r\n                result = -1;\r\n            }\r\n        }\r\n        else {\r\n            result = extA ? 1 : -1;\r\n        }\r\n        return result;\r\n    });\r\n    // sort complete\r\n}\r\n/**\r\n * Teardown / Unload helper to perform teardown/unloading operations for the provided components synchronously or asynchronously, this will call any\r\n * _doTeardown() or _doUnload() functions on the provided components to allow them to finish removal.\r\n * @param components - The components you want to unload\r\n * @param unloadCtx - This is the context that should be used during unloading.\r\n * @param unloadState - The details / state of the unload process, it holds details like whether it should be unloaded synchronously or asynchronously and the reason for the unload.\r\n * @param asyncCallback - An optional callback that the plugin must call if it returns true to inform the caller that it has completed any async unload/teardown operations.\r\n * @returns boolean - true if the plugin has or will call asyncCallback, this allows the plugin to perform any asynchronous operations.\r\n */\r\nexport function unloadComponents(components, unloadCtx, unloadState, asyncCallback) {\r\n    var idx = 0;\r\n    function _doUnload() {\r\n        while (idx < components[_DYN_LENGTH /* @min:%2elength */]) {\r\n            var component = components[idx++];\r\n            if (component) {\r\n                var func = component._doUnload || component[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */];\r\n                if (isFunction(func)) {\r\n                    if (func.call(component, unloadCtx, unloadState, _doUnload) === true) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return _doUnload();\r\n}\r\n/**\r\n * Creates a IDistributedTraceContext which optionally also \"sets\" the value on a parent\r\n * @param parentCtx - An optional parent distributed trace instance\r\n * @returns A new IDistributedTraceContext instance that uses an internal temporary object\r\n */\r\nexport function createDistributedTraceContext(parentCtx) {\r\n    var trace = {};\r\n    return {\r\n        getName: function () {\r\n            return trace[_DYN_NAME /* @min:%2ename */];\r\n        },\r\n        setName: function (newValue) {\r\n            parentCtx && parentCtx.setName(newValue);\r\n            trace[_DYN_NAME /* @min:%2ename */] = newValue;\r\n        },\r\n        getTraceId: function () {\r\n            return trace.traceId;\r\n        },\r\n        setTraceId: function (newValue) {\r\n            parentCtx && parentCtx.setTraceId(newValue);\r\n            if (isValidTraceId(newValue)) {\r\n                trace.traceId = newValue;\r\n            }\r\n        },\r\n        getSpanId: function () {\r\n            return trace.spanId;\r\n        },\r\n        setSpanId: function (newValue) {\r\n            parentCtx && parentCtx.setSpanId(newValue);\r\n            if (isValidSpanId(newValue)) {\r\n                trace.spanId = newValue;\r\n            }\r\n        },\r\n        getTraceFlags: function () {\r\n            return trace[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */];\r\n        },\r\n        setTraceFlags: function (newTraceFlags) {\r\n            parentCtx && parentCtx.setTraceFlags(newTraceFlags);\r\n            trace[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] = newTraceFlags;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=TelemetryHelpers.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { arrForEach, dumpObj, isArray, isFunction, isNullOrUndefined, isUndefined, objForEachKey, objFreeze, objKeys } from \"@nevware21/ts-utils\";\r\nimport { _applyDefaultValue } from \"../Config/ConfigDefaults\";\r\nimport { createDynamicConfig } from \"../Config/DynamicConfig\";\r\nimport { _DYN_CREATE_NEW, _DYN_DIAG_LOG, _DYN_GET_NEXT, _DYN_GET_PLUGIN, _DYN_IDENTIFIER, _DYN_IS_INITIALIZED, _DYN_LENGTH, _DYN_LOGGER, _DYN_PROCESS_NEXT, _DYN_PUSH, _DYN_SET_NEXT_PLUGIN, _DYN_TEARDOWN, _DYN_UNLOAD, _DYN_UPDATE } from \"../__DynamicConstants\";\r\nimport { _throwInternal, safeGetLogger } from \"./DiagnosticLogger\";\r\nimport { proxyFunctions } from \"./HelperFuncs\";\r\nimport { STR_CORE, STR_DISABLED, STR_EMPTY, STR_EXTENSION_CONFIG, STR_PRIORITY, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { doPerf } from \"./PerfManager\";\r\nimport { _getPluginState } from \"./TelemetryHelpers\";\r\nvar strTelemetryPluginChain = \"TelemetryPluginChain\";\r\nvar strHasRunFlags = \"_hasRun\";\r\nvar strGetTelCtx = \"_getTelCtx\";\r\nvar _chainId = 0;\r\nfunction _getNextProxyStart(proxy, core, startAt) {\r\n    while (proxy) {\r\n        if (proxy[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]() === startAt) {\r\n            return proxy;\r\n        }\r\n        proxy = proxy[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n    }\r\n    // This wasn't found in the existing chain so create an isolated one with just this plugin\r\n    return createTelemetryProxyChain([startAt], core.config || {}, core);\r\n}\r\n/**\r\n * @ignore\r\n * @param telemetryChain\r\n * @param dynamicHandler\r\n * @param core\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n * @returns\r\n */\r\nfunction _createInternalContext(telemetryChain, dynamicHandler, core, startAt) {\r\n    // We have a special case where we want to start execution from this specific plugin\r\n    // or we simply reuse the existing telemetry plugin chain (normal execution case)\r\n    var _nextProxy = null; // By Default set as no next plugin\r\n    var _onComplete = [];\r\n    if (!dynamicHandler) {\r\n        dynamicHandler = createDynamicConfig({}, null, core[_DYN_LOGGER /* @min:%2elogger */]);\r\n    }\r\n    if (startAt !== null) {\r\n        // There is no next element (null) vs not defined (undefined) so use the full chain\r\n        _nextProxy = startAt ? _getNextProxyStart(telemetryChain, core, startAt) : telemetryChain;\r\n    }\r\n    var context = {\r\n        _next: _moveNext,\r\n        ctx: {\r\n            core: function () {\r\n                return core;\r\n            },\r\n            diagLog: function () {\r\n                return safeGetLogger(core, dynamicHandler.cfg);\r\n            },\r\n            getCfg: function () {\r\n                return dynamicHandler.cfg;\r\n            },\r\n            getExtCfg: _resolveExtCfg,\r\n            getConfig: _getConfig,\r\n            hasNext: function () {\r\n                return !!_nextProxy;\r\n            },\r\n            getNext: function () {\r\n                return _nextProxy;\r\n            },\r\n            setNext: function (nextPlugin) {\r\n                _nextProxy = nextPlugin;\r\n            },\r\n            iterate: _iterateChain,\r\n            onComplete: _addOnComplete\r\n        }\r\n    };\r\n    function _addOnComplete(onComplete, that) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        if (onComplete) {\r\n            _onComplete[_DYN_PUSH /* @min:%2epush */]({\r\n                func: onComplete,\r\n                self: !isUndefined(that) ? that : context.ctx,\r\n                args: args\r\n            });\r\n        }\r\n    }\r\n    function _moveNext() {\r\n        var nextProxy = _nextProxy;\r\n        // Automatically move to the next plugin\r\n        _nextProxy = nextProxy ? nextProxy[_DYN_GET_NEXT /* @min:%2egetNext */]() : null;\r\n        if (!nextProxy) {\r\n            var onComplete = _onComplete;\r\n            if (onComplete && onComplete[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                arrForEach(onComplete, function (completeDetails) {\r\n                    try {\r\n                        completeDetails.func.call(completeDetails.self, completeDetails.args);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(core[_DYN_LOGGER /* @min:%2elogger */], 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unexpected Exception during onComplete - \" + dumpObj(e));\r\n                    }\r\n                });\r\n                _onComplete = [];\r\n            }\r\n        }\r\n        return nextProxy;\r\n    }\r\n    function _getExtCfg(identifier, createIfMissing) {\r\n        var idCfg = null;\r\n        var cfg = dynamicHandler.cfg;\r\n        if (cfg && identifier) {\r\n            var extCfg = cfg[STR_EXTENSION_CONFIG /* @min:%2eextensionConfig */];\r\n            if (!extCfg && createIfMissing) {\r\n                extCfg = {};\r\n            }\r\n            // Always set the value so that the property always exists\r\n            cfg[STR_EXTENSION_CONFIG] = extCfg; // Note: it is valid for the \"value\" to be undefined\r\n            // Calling `ref()` has a side effect of causing the referenced property to become dynamic  (if not already)\r\n            extCfg = dynamicHandler.ref(cfg, STR_EXTENSION_CONFIG);\r\n            if (extCfg) {\r\n                idCfg = extCfg[identifier];\r\n                if (!idCfg && createIfMissing) {\r\n                    idCfg = {};\r\n                }\r\n                // Always set the value so that the property always exists\r\n                extCfg[identifier] = idCfg; // Note: it is valid for the \"value\" to be undefined\r\n                // Calling `ref()` has a side effect of causing the referenced property to become dynamic  (if not already)\r\n                idCfg = dynamicHandler.ref(extCfg, identifier);\r\n            }\r\n        }\r\n        return idCfg;\r\n    }\r\n    function _resolveExtCfg(identifier, defaultValues) {\r\n        var newConfig = _getExtCfg(identifier, true);\r\n        if (defaultValues) {\r\n            // Enumerate over the defaultValues and if not already populated attempt to\r\n            // find a value from the root config or use the default value\r\n            objForEachKey(defaultValues, function (field, defaultValue) {\r\n                // for each unspecified field, set the default value\r\n                if (isNullOrUndefined(newConfig[field])) {\r\n                    var cfgValue = dynamicHandler.cfg[field];\r\n                    if (cfgValue || !isNullOrUndefined(cfgValue)) {\r\n                        newConfig[field] = cfgValue;\r\n                    }\r\n                }\r\n                _applyDefaultValue(dynamicHandler, newConfig, field, defaultValue);\r\n            });\r\n        }\r\n        return dynamicHandler.setDf(newConfig, defaultValues);\r\n    }\r\n    function _getConfig(identifier, field, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        var theValue;\r\n        var extConfig = _getExtCfg(identifier, false);\r\n        var rootConfig = dynamicHandler.cfg;\r\n        if (extConfig && (extConfig[field] || !isNullOrUndefined(extConfig[field]))) {\r\n            theValue = extConfig[field];\r\n        }\r\n        else if (rootConfig[field] || !isNullOrUndefined(rootConfig[field])) {\r\n            theValue = rootConfig[field];\r\n        }\r\n        return (theValue || !isNullOrUndefined(theValue)) ? theValue : defaultValue;\r\n    }\r\n    function _iterateChain(cb) {\r\n        // Keep processing until we reach the end of the chain\r\n        var nextPlugin;\r\n        while (!!(nextPlugin = context._next())) {\r\n            var plugin = nextPlugin[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]();\r\n            if (plugin) {\r\n                // callback with the current on\r\n                cb(plugin);\r\n            }\r\n        }\r\n    }\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryContext(telemetryChain, cfg, core, startAt) {\r\n    var config = createDynamicConfig(cfg);\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(env) {\r\n        var nextPlugin = internalContext._next();\r\n        if (nextPlugin) {\r\n            // Run the next plugin which will call \"processNext()\"\r\n            nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, context);\r\n        }\r\n        return !nextPlugin;\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config.cfg, core, startAt);\r\n        }\r\n        return createProcessTelemetryContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), config.cfg, core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain for handling the unloading of the chain\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryUnloadContext(telemetryChain, core, startAt) {\r\n    var config = createDynamicConfig(core.config);\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(unloadState) {\r\n        var nextPlugin = internalContext._next();\r\n        nextPlugin && nextPlugin[_DYN_UNLOAD /* @min:%2eunload */](context, unloadState);\r\n        return !nextPlugin;\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config.cfg, core, startAt);\r\n        }\r\n        return createProcessTelemetryUnloadContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain for updating the configuration\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryUpdateContext(telemetryChain, core, startAt) {\r\n    var config = createDynamicConfig(core.config);\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(updateState) {\r\n        return context.iterate(function (plugin) {\r\n            if (isFunction(plugin[_DYN_UPDATE /* @min:%2eupdate */])) {\r\n                plugin[_DYN_UPDATE /* @min:%2eupdate */](context, updateState);\r\n            }\r\n        });\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config.cfg, core, startAt);\r\n        }\r\n        return createProcessTelemetryUpdateContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates an execution chain from the array of plugins\r\n * @param plugins - The array of plugins that will be executed in this order\r\n * @param defItemCtx - The default execution context to use when no telemetry context is passed to processTelemetry(), this\r\n * should be for legacy plugins only. Currently, only used for passing the current core instance and to provide better error\r\n * reporting (hasRun) when errors occur.\r\n */\r\nexport function createTelemetryProxyChain(plugins, config, core, startAt) {\r\n    var firstProxy = null;\r\n    var add = startAt ? false : true;\r\n    if (isArray(plugins) && plugins[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        // Create the proxies and wire up the next plugin chain\r\n        var lastProxy_1 = null;\r\n        arrForEach(plugins, function (thePlugin) {\r\n            if (!add && startAt === thePlugin) {\r\n                add = true;\r\n            }\r\n            if (add && thePlugin && isFunction(thePlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */])) {\r\n                // Only add plugins that are processors\r\n                var newProxy = createTelemetryPluginProxy(thePlugin, config, core);\r\n                if (!firstProxy) {\r\n                    firstProxy = newProxy;\r\n                }\r\n                if (lastProxy_1) {\r\n                    // Set this new proxy as the next for the previous one\r\n                    lastProxy_1._setNext(newProxy);\r\n                }\r\n                lastProxy_1 = newProxy;\r\n            }\r\n        });\r\n    }\r\n    if (startAt && !firstProxy) {\r\n        // Special case where the \"startAt\" was not in the original list of plugins\r\n        return createTelemetryProxyChain([startAt], config, core);\r\n    }\r\n    return firstProxy;\r\n}\r\n/**\r\n * Create the processing telemetry proxy instance, the proxy is used to abstract the current plugin to allow monitoring and\r\n * execution plugins while passing around the dynamic execution state (IProcessTelemetryContext), the proxy instance no longer\r\n * contains any execution state and can be reused between requests (this was not the case for 2.7.2 and earlier with the\r\n * TelemetryPluginChain class).\r\n * @param plugin - The plugin instance to proxy\r\n * @param config - The default execution context to use when no telemetry context is passed to processTelemetry(), this\r\n * should be for legacy plugins only. Currently, only used for passing the current core instance and to provide better error\r\n * reporting (hasRun) when errors occur.\r\n * @returns\r\n */\r\nexport function createTelemetryPluginProxy(plugin, config, core) {\r\n    var nextProxy = null;\r\n    var hasProcessTelemetry = isFunction(plugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */]);\r\n    var hasSetNext = isFunction(plugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */]);\r\n    var chainId;\r\n    if (plugin) {\r\n        chainId = plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] + \"-\" + plugin[STR_PRIORITY /* @min:%2epriority */] + \"-\" + _chainId++;\r\n    }\r\n    else {\r\n        chainId = \"Unknown-0-\" + _chainId++;\r\n    }\r\n    var proxyChain = {\r\n        getPlugin: function () {\r\n            return plugin;\r\n        },\r\n        getNext: function () {\r\n            return nextProxy;\r\n        },\r\n        processTelemetry: _processTelemetry,\r\n        unload: _unloadPlugin,\r\n        update: _updatePlugin,\r\n        _id: chainId,\r\n        _setNext: function (nextPlugin) {\r\n            nextProxy = nextPlugin;\r\n        }\r\n    };\r\n    function _getTelCtx() {\r\n        var itemCtx;\r\n        // Looks like a plugin didn't pass the (optional) context, so create a new one\r\n        if (plugin && isFunction(plugin[strGetTelCtx])) {\r\n            // This plugin extends from the BaseTelemetryPlugin so lets use it\r\n            itemCtx = plugin[strGetTelCtx]();\r\n        }\r\n        if (!itemCtx) {\r\n            // Create a temporary one\r\n            itemCtx = createProcessTelemetryContext(proxyChain, config, core);\r\n        }\r\n        return itemCtx;\r\n    }\r\n    function _processChain(itemCtx, processPluginFn, name, details, isAsync) {\r\n        var hasRun = false;\r\n        var identifier = plugin ? plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] : strTelemetryPluginChain;\r\n        var hasRunContext = itemCtx[strHasRunFlags];\r\n        if (!hasRunContext) {\r\n            // Assign and populate\r\n            hasRunContext = itemCtx[strHasRunFlags] = {};\r\n        }\r\n        // Ensure that we keep the context in sync\r\n        itemCtx.setNext(nextProxy);\r\n        if (plugin) {\r\n            doPerf(itemCtx[STR_CORE /* @min:%2ecore */](), function () { return identifier + \":\" + name; }, function () {\r\n                // Mark this component as having run\r\n                hasRunContext[chainId] = true;\r\n                try {\r\n                    // Set a flag on the next plugin so we know if it was attempted to be executed\r\n                    var nextId = nextProxy ? nextProxy._id : STR_EMPTY;\r\n                    if (nextId) {\r\n                        hasRunContext[nextId] = false;\r\n                    }\r\n                    hasRun = processPluginFn(itemCtx);\r\n                }\r\n                catch (error) {\r\n                    var hasNextRun = nextProxy ? hasRunContext[nextProxy._id] : true;\r\n                    if (hasNextRun) {\r\n                        // The next plugin after us has already run so set this one as complete\r\n                        hasRun = true;\r\n                    }\r\n                    if (!nextProxy || !hasNextRun) {\r\n                        // Either we have no next plugin or the current one did not attempt to call the next plugin\r\n                        // Which means the current one is the root of the failure so log/report this failure\r\n                        _throwInternal(itemCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 73 /* _eInternalMessageId.PluginException */, \"Plugin [\" + identifier + \"] failed during \" + name + \" - \" + dumpObj(error) + \", run flags: \" + dumpObj(hasRunContext));\r\n                    }\r\n                }\r\n            }, details, isAsync);\r\n        }\r\n        return hasRun;\r\n    }\r\n    function _processTelemetry(env, itemCtx) {\r\n        itemCtx = itemCtx || _getTelCtx();\r\n        function _callProcessTelemetry(itemCtx) {\r\n            if (!plugin || !hasProcessTelemetry) {\r\n                return false;\r\n            }\r\n            var pluginState = _getPluginState(plugin);\r\n            if (pluginState[_DYN_TEARDOWN /* @min:%2eteardown */] || pluginState[STR_DISABLED]) {\r\n                return false;\r\n            }\r\n            // Ensure that we keep the context in sync (for processNext()), just in case a plugin\r\n            // doesn't calls processTelemetry() instead of itemContext.processNext() or some\r\n            // other form of error occurred\r\n            if (hasSetNext) {\r\n                // Backward compatibility setting the next plugin on the instance\r\n                plugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */](nextProxy);\r\n            }\r\n            plugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, itemCtx);\r\n            // Process Telemetry is expected to call itemCtx.processNext() or nextPlugin.processTelemetry()\r\n            return true;\r\n        }\r\n        if (!_processChain(itemCtx, _callProcessTelemetry, \"processTelemetry\", function () { return ({ item: env }); }, !(env.sync))) {\r\n            // The underlying plugin is either not defined, not enabled or does not have a processTelemetry implementation\r\n            // so we still want the next plugin to be executed.\r\n            itemCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](env);\r\n        }\r\n    }\r\n    function _unloadPlugin(unloadCtx, unloadState) {\r\n        function _callTeardown() {\r\n            // Setting default of hasRun as false so the proxyProcessFn() is called as teardown() doesn't have to exist or call unloadNext().\r\n            var hasRun = false;\r\n            if (plugin) {\r\n                var pluginState = _getPluginState(plugin);\r\n                var pluginCore = plugin[STR_CORE] || pluginState[STR_CORE /* @min:%2ecore */];\r\n                // Only teardown the plugin if it was initialized by the current core (i.e. It's not a shared plugin)\r\n                if (plugin && (!pluginCore || pluginCore === unloadCtx.core()) && !pluginState[_DYN_TEARDOWN /* @min:%2eteardown */]) {\r\n                    // Handle plugins that don't extend from the BaseTelemetryPlugin\r\n                    pluginState[STR_CORE /* @min:%2ecore */] = null;\r\n                    pluginState[_DYN_TEARDOWN /* @min:%2eteardown */] = true;\r\n                    pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = false;\r\n                    if (plugin[_DYN_TEARDOWN /* @min:%2eteardown */] && plugin[_DYN_TEARDOWN /* @min:%2eteardown */](unloadCtx, unloadState) === true) {\r\n                        // plugin told us that it was going to (or has) call unloadCtx.processNext()\r\n                        hasRun = true;\r\n                    }\r\n                }\r\n            }\r\n            return hasRun;\r\n        }\r\n        if (!_processChain(unloadCtx, _callTeardown, \"unload\", function () { }, unloadState.isAsync)) {\r\n            // Only called if we hasRun was not true\r\n            unloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](unloadState);\r\n        }\r\n    }\r\n    function _updatePlugin(updateCtx, updateState) {\r\n        function _callUpdate() {\r\n            // Setting default of hasRun as false so the proxyProcessFn() is called as teardown() doesn't have to exist or call unloadNext().\r\n            var hasRun = false;\r\n            if (plugin) {\r\n                var pluginState = _getPluginState(plugin);\r\n                var pluginCore = plugin[STR_CORE] || pluginState[STR_CORE /* @min:%2ecore */];\r\n                // Only update the plugin if it was initialized by the current core (i.e. It's not a shared plugin)\r\n                if (plugin && (!pluginCore || pluginCore === updateCtx.core()) && !pluginState[_DYN_TEARDOWN /* @min:%2eteardown */]) {\r\n                    if (plugin[_DYN_UPDATE /* @min:%2eupdate */] && plugin[_DYN_UPDATE /* @min:%2eupdate */](updateCtx, updateState) === true) {\r\n                        // plugin told us that it was going to (or has) call unloadCtx.processNext()\r\n                        hasRun = true;\r\n                    }\r\n                }\r\n            }\r\n            return hasRun;\r\n        }\r\n        if (!_processChain(updateCtx, _callUpdate, \"update\", function () { }, false)) {\r\n            // Only called if we hasRun was not true\r\n            updateCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](updateState);\r\n        }\r\n    }\r\n    return objFreeze(proxyChain);\r\n}\r\n/**\r\n * This class will be removed!\r\n * @deprecated use createProcessTelemetryContext() instead\r\n */\r\nvar ProcessTelemetryContext = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Telemetry Item context with the current config, core and plugin execution chain\r\n     * @param plugins - The plugin instances that will be executed\r\n     * @param config - The current config\r\n     * @param core - The current core instance\r\n     */\r\n    function ProcessTelemetryContext(pluginChain, config, core, startAt) {\r\n        var _self = this;\r\n        var context = createProcessTelemetryContext(pluginChain, config, core, startAt);\r\n        // Proxy all functions of the context to this object\r\n        proxyFunctions(_self, context, objKeys(context));\r\n    }\r\n    return ProcessTelemetryContext;\r\n}());\r\nexport { ProcessTelemetryContext };\r\n//# sourceMappingURL=ProcessTelemetryContext.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_DIAG_LOG, _DYN_PUSH } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nexport function createUnloadHandlerContainer() {\r\n    var handlers = [];\r\n    function _addHandler(handler) {\r\n        if (handler) {\r\n            handlers[_DYN_PUSH /* @min:%2epush */](handler);\r\n        }\r\n    }\r\n    function _runHandlers(unloadCtx, unloadState) {\r\n        arrForEach(handlers, function (handler) {\r\n            try {\r\n                handler(unloadCtx, unloadState);\r\n            }\r\n            catch (e) {\r\n                _throwInternal(unloadCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unexpected error calling unload handler - \" + dumpObj(e));\r\n            }\r\n        });\r\n        handlers = [];\r\n    }\r\n    return {\r\n        add: _addHandler,\r\n        run: _runHandlers\r\n    };\r\n}\r\n//# sourceMappingURL=UnloadHandlerContainer.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrAppend, arrForEach, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nvar _maxHooks;\r\nvar _hookAddMonitor;\r\n/**\r\n * Test hook for setting the maximum number of unload hooks and calling a monitor function when the hooks are added or removed\r\n * This allows for automatic test failure when the maximum number of unload hooks is exceeded\r\n * @param maxHooks - The maximum number of unload hooks\r\n * @param addMonitor - The monitor function to call when hooks are added or removed\r\n */\r\nexport function _testHookMaxUnloadHooksCb(maxHooks, addMonitor) {\r\n    _maxHooks = maxHooks;\r\n    _hookAddMonitor = addMonitor;\r\n}\r\n/**\r\n * Create a IUnloadHookContainer which can be used to remember unload hook functions to be executed during the component unloading\r\n * process.\r\n * @returns A new IUnloadHookContainer instance\r\n */\r\nexport function createUnloadHookContainer() {\r\n    var _hooks = [];\r\n    function _doUnload(logger) {\r\n        var oldHooks = _hooks;\r\n        _hooks = [];\r\n        // Remove all registered unload hooks\r\n        arrForEach(oldHooks, function (fn) {\r\n            // allow either rm or remove callback function\r\n            try {\r\n                (fn.rm || fn.remove).call(fn);\r\n            }\r\n            catch (e) {\r\n                _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unloading:\" + dumpObj(e));\r\n            }\r\n        });\r\n        if (_maxHooks && oldHooks[_DYN_LENGTH /* @min:%2elength */] > _maxHooks) {\r\n            _hookAddMonitor ? _hookAddMonitor(\"doUnload\", oldHooks) : _throwInternal(null, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.MaxUnloadHookExceeded */, \"Max unload hooks exceeded. An excessive number of unload hooks has been detected.\");\r\n        }\r\n    }\r\n    function _addHook(hooks) {\r\n        if (hooks) {\r\n            arrAppend(_hooks, hooks);\r\n            if (_maxHooks && _hooks[_DYN_LENGTH /* @min:%2elength */] > _maxHooks) {\r\n                _hookAddMonitor ? _hookAddMonitor(\"Add\", _hooks) : _throwInternal(null, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.MaxUnloadHookExceeded */, \"Max unload hooks exceeded. An excessive number of unload hooks has been detected.\");\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        run: _doUnload,\r\n        add: _addHook\r\n    };\r\n}\r\n//# sourceMappingURL=UnloadHookContainer.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a;\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { isFunction, objDefine } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig } from \"../Config/DynamicConfig\";\r\nimport { _DYN_CREATE_NEW, _DYN_DIAG_LOG, _DYN_GET_NEXT, _DYN_GET_PROCESS_TEL_CONT2, _DYN_INITIALIZE, _DYN_IS_INITIALIZED, _DYN_PROCESS_NEXT, _DYN_SET_NEXT_PLUGIN, _DYN_TEARDOWN, _DYN_UPDATE, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { safeGetLogger } from \"./DiagnosticLogger\";\r\nimport { isNotNullOrUndefined, proxyFunctionAs } from \"./HelperFuncs\";\r\nimport { STR_CORE, STR_EXTENSION_CONFIG, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { createProcessTelemetryContext, createProcessTelemetryUnloadContext, createProcessTelemetryUpdateContext } from \"./ProcessTelemetryContext\";\r\nimport { createUnloadHandlerContainer } from \"./UnloadHandlerContainer\";\r\nimport { createUnloadHookContainer } from \"./UnloadHookContainer\";\r\nvar strGetPlugin = \"getPlugin\";\r\nvar defaultValues = (_a = {},\r\n    _a[STR_EXTENSION_CONFIG] = { isVal: isNotNullOrUndefined, v: {} },\r\n    _a);\r\n/**\r\n * BaseTelemetryPlugin provides a basic implementation of the ITelemetryPlugin interface so that plugins\r\n * can avoid implementation the same set of boiler plate code as well as provide a base\r\n * implementation so that new default implementations can be added without breaking all plugins.\r\n */\r\nvar BaseTelemetryPlugin = /** @class */ (function () {\r\n    function BaseTelemetryPlugin() {\r\n        var _self = this; // Setting _self here as it's used outside of the dynamicProto as well\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var _isinitialized;\r\n        var _rootCtx; // Used as the root context, holding the current config and initialized core\r\n        var _nextPlugin; // Used for backward compatibility where plugins don't call the main pipeline\r\n        var _unloadHandlerContainer;\r\n        var _hookContainer;\r\n        _initDefaults();\r\n        dynamicProto(BaseTelemetryPlugin, _self, function (_self) {\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, core, extensions, pluginChain) {\r\n                _setDefaults(config, core, pluginChain);\r\n                _isinitialized = true;\r\n            };\r\n            _self[_DYN_TEARDOWN /* @min:%2eteardown */] = function (unloadCtx, unloadState) {\r\n                // If this plugin has already been torn down (not operational) or is not initialized (core is not set)\r\n                // or the core being used for unload was not the same core used for initialization.\r\n                var core = _self[STR_CORE /* @min:%2ecore */];\r\n                if (!core || (unloadCtx && core !== unloadCtx[STR_CORE /* @min:%2ecore */]())) {\r\n                    // Do Nothing as either the plugin is not initialized or was not initialized by the current core\r\n                    return;\r\n                }\r\n                var result;\r\n                var unloadDone = false;\r\n                var theUnloadCtx = unloadCtx || createProcessTelemetryUnloadContext(null, core, _nextPlugin && _nextPlugin[strGetPlugin] ? _nextPlugin[strGetPlugin]() : _nextPlugin);\r\n                var theUnloadState = unloadState || {\r\n                    reason: 0 /* TelemetryUnloadReason.ManualTeardown */,\r\n                    isAsync: false\r\n                };\r\n                function _unloadCallback() {\r\n                    if (!unloadDone) {\r\n                        unloadDone = true;\r\n                        _unloadHandlerContainer.run(theUnloadCtx, unloadState);\r\n                        _hookContainer.run(theUnloadCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */]());\r\n                        if (result === true) {\r\n                            theUnloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](theUnloadState);\r\n                        }\r\n                        _initDefaults();\r\n                    }\r\n                }\r\n                if (!_self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] || _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */](theUnloadCtx, theUnloadState, _unloadCallback) !== true) {\r\n                    _unloadCallback();\r\n                }\r\n                else {\r\n                    // Tell the caller that we will be calling processNext()\r\n                    result = true;\r\n                }\r\n                return result;\r\n            };\r\n            _self[_DYN_UPDATE /* @min:%2eupdate */] = function (updateCtx, updateState) {\r\n                // If this plugin has already been torn down (not operational) or is not initialized (core is not set)\r\n                // or the core being used for unload was not the same core used for initialization.\r\n                var core = _self[STR_CORE /* @min:%2ecore */];\r\n                if (!core || (updateCtx && core !== updateCtx[STR_CORE /* @min:%2ecore */]())) {\r\n                    // Do Nothing\r\n                    return;\r\n                }\r\n                var result;\r\n                var updateDone = false;\r\n                var theUpdateCtx = updateCtx || createProcessTelemetryUpdateContext(null, core, _nextPlugin && _nextPlugin[strGetPlugin] ? _nextPlugin[strGetPlugin]() : _nextPlugin);\r\n                var theUpdateState = updateState || {\r\n                    reason: 0 /* TelemetryUpdateReason.Unknown */\r\n                };\r\n                function _updateCallback() {\r\n                    if (!updateDone) {\r\n                        updateDone = true;\r\n                        _setDefaults(theUpdateCtx.getCfg(), theUpdateCtx.core(), theUpdateCtx[_DYN_GET_NEXT /* @min:%2egetNext */]());\r\n                    }\r\n                }\r\n                if (!_self._doUpdate || _self._doUpdate(theUpdateCtx, theUpdateState, _updateCallback) !== true) {\r\n                    _updateCallback();\r\n                }\r\n                else {\r\n                    result = true;\r\n                }\r\n                return result;\r\n            };\r\n            proxyFunctionAs(_self, \"_addUnloadCb\", function () { return _unloadHandlerContainer; }, \"add\");\r\n            proxyFunctionAs(_self, \"_addHook\", function () { return _hookContainer; }, \"add\");\r\n            objDefine(_self, \"_unloadHooks\", { g: function () { return _hookContainer; } });\r\n        });\r\n        // These are added after the dynamicProto so that are not moved to the prototype\r\n        _self[_DYN_DIAG_LOG /* @min:%2ediagLog */] = function (itemCtx) {\r\n            return _getTelCtx(itemCtx)[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n        };\r\n        _self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = function () {\r\n            return _isinitialized;\r\n        };\r\n        _self.setInitialized = function (isInitialized) {\r\n            _isinitialized = isInitialized;\r\n        };\r\n        // _self.getNextPlugin = () => DO NOT IMPLEMENT\r\n        // Sub-classes of this base class *should* not be relying on this value and instead\r\n        // should use processNext() function. If you require access to the plugin use the\r\n        // IProcessTelemetryContext.getNext().getPlugin() while in the pipeline, Note getNext() may return null.\r\n        _self[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */] = function (next) {\r\n            _nextPlugin = next;\r\n        };\r\n        _self[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = function (env, itemCtx) {\r\n            if (itemCtx) {\r\n                // Normal core execution sequence\r\n                itemCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](env);\r\n            }\r\n            else if (_nextPlugin && isFunction(_nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */])) {\r\n                // Looks like backward compatibility or out of band processing. And as it looks\r\n                // like a ITelemetryPlugin or ITelemetryPluginChain, just call processTelemetry\r\n                _nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, null);\r\n            }\r\n        };\r\n        _self._getTelCtx = _getTelCtx;\r\n        function _getTelCtx(currentCtx) {\r\n            if (currentCtx === void 0) { currentCtx = null; }\r\n            var itemCtx = currentCtx;\r\n            if (!itemCtx) {\r\n                var rootCtx = _rootCtx || createProcessTelemetryContext(null, {}, _self[STR_CORE /* @min:%2ecore */]);\r\n                // tslint:disable-next-line: prefer-conditional-expression\r\n                if (_nextPlugin && _nextPlugin[strGetPlugin]) {\r\n                    // Looks like a chain object\r\n                    itemCtx = rootCtx[_DYN_CREATE_NEW /* @min:%2ecreateNew */](null, _nextPlugin[strGetPlugin]);\r\n                }\r\n                else {\r\n                    itemCtx = rootCtx[_DYN_CREATE_NEW /* @min:%2ecreateNew */](null, _nextPlugin);\r\n                }\r\n            }\r\n            return itemCtx;\r\n        }\r\n        function _setDefaults(config, core, pluginChain) {\r\n            // Make sure the extensionConfig exists and the config is dynamic\r\n            createDynamicConfig(config, defaultValues, safeGetLogger(core));\r\n            if (!pluginChain && core) {\r\n                // Get the first plugin from the core\r\n                pluginChain = core[_DYN_GET_PROCESS_TEL_CONT2 /* @min:%2egetProcessTelContext */]()[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n            }\r\n            var nextPlugin = _nextPlugin;\r\n            if (_nextPlugin && _nextPlugin[strGetPlugin]) {\r\n                // If it looks like a proxy/chain then get the plugin\r\n                nextPlugin = _nextPlugin[strGetPlugin]();\r\n            }\r\n            // Support legacy plugins where core was defined as a property\r\n            _self[STR_CORE /* @min:%2ecore */] = core;\r\n            _rootCtx = createProcessTelemetryContext(pluginChain, config, core, nextPlugin);\r\n        }\r\n        function _initDefaults() {\r\n            _isinitialized = false;\r\n            _self[STR_CORE /* @min:%2ecore */] = null;\r\n            _rootCtx = null;\r\n            _nextPlugin = null;\r\n            _hookContainer = createUnloadHookContainer();\r\n            _unloadHandlerContainer = createUnloadHandlerContainer();\r\n        }\r\n    }\r\n// Removed Stub for BaseTelemetryPlugin.prototype.initialize.\r\n// Removed Stub for BaseTelemetryPlugin.prototype.teardown.\r\n// Removed Stub for BaseTelemetryPlugin.prototype.update.\r\n// Removed Stub for BaseTelemetryPlugin.prototype._addUnloadCb.\r\n// Removed Stub for BaseTelemetryPlugin.prototype._addHook.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    BaseTelemetryPlugin.__ieDyn=1;\n\n    return BaseTelemetryPlugin;\r\n}());\r\nexport { BaseTelemetryPlugin };\r\n//# sourceMappingURL=BaseTelemetryPlugin.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnumStyle } from \"@microsoft/applicationinsights-core-js\";\r\n/**\r\n * Defines the level of severity for the event.\r\n */\r\nexport var SeverityLevel = createEnumStyle({\r\n    Verbose: 0 /* eSeverityLevel.Verbose */,\r\n    Information: 1 /* eSeverityLevel.Information */,\r\n    Warning: 2 /* eSeverityLevel.Warning */,\r\n    Error: 3 /* eSeverityLevel.Error */,\r\n    Critical: 4 /* eSeverityLevel.Critical */\r\n});\r\n//# sourceMappingURL=SeverityLevel.js.map","/*\n * Application Insights JavaScript SDK - React Plugin, 19.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n* ReactPlugin.ts\r\n* @copyright Microsoft 2019\r\n*/\r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { AnalyticsPluginIdentifier, PropertiesPluginIdentifier } from \"@microsoft/applicationinsights-common\";\r\nimport { BaseTelemetryPlugin, _throwInternal, isFunction, proxyFunctions, safeGetCookieMgr, onConfigChange, objDefineAccessors } from \"@microsoft/applicationinsights-core-js\";\r\nimport { objDeepFreeze, objDefine } from \"@nevware21/ts-utils\";\r\nvar defaultReactExtensionConfig = objDeepFreeze({\r\n    history: { blkVal: true, v: undefined }\r\n});\r\nvar ReactPlugin = /** @class */ (function (_super) {\r\n    __extends(ReactPlugin, _super);\r\n    function ReactPlugin() {\r\n        var _this = _super.call(this) || this;\r\n        _this.priority = 185;\r\n        _this.identifier = 'ReactPlugin';\r\n        var _analyticsPlugin;\r\n        var _extensionConfig;\r\n        var _unlisten;\r\n        var _pageViewTimer;\r\n        var _pageViewTracked;\r\n        var properties;\r\n        dynamicProto(ReactPlugin, _this, function (_self, _base) {\r\n            _initDefaults();\r\n            _self.initialize = function (config, core, extensions, pluginChain) {\r\n                _super.prototype.initialize.call(_this, config, core, extensions, pluginChain);\r\n                var thePlugin = core.getPlugin(PropertiesPluginIdentifier);\r\n                if (thePlugin) {\r\n                    properties = thePlugin.plugin;\r\n                }\r\n                objDefine(_self, \"context\", {\r\n                    g: function () { return properties ? properties.context : null; }\r\n                });\r\n                _self._addHook(onConfigChange(config, function (details) {\r\n                    var _a;\r\n                    var ctx = _self._getTelCtx();\r\n                    _extensionConfig = ctx.getExtCfg(_this.identifier, defaultReactExtensionConfig);\r\n                    _analyticsPlugin = (_a = core.getPlugin(AnalyticsPluginIdentifier)) === null || _a === void 0 ? void 0 : _a.plugin;\r\n                    if (isFunction(_unlisten)) {\r\n                        _unlisten();\r\n                        _unlisten = null;\r\n                    }\r\n                    if (_extensionConfig.history) {\r\n                        _addHistoryListener(_extensionConfig.history);\r\n                        if (!_pageViewTracked) {\r\n                            var pageViewTelemetry = {\r\n                                uri: _extensionConfig.history.location.pathname\r\n                            };\r\n                            _self.trackPageView(pageViewTelemetry);\r\n                            _pageViewTracked = true;\r\n                        }\r\n                    }\r\n                }));\r\n            };\r\n            _self.getCookieMgr = function () {\r\n                return safeGetCookieMgr(_self.core);\r\n            };\r\n            _self.getAppInsights = _getAnalytics;\r\n            _self.processTelemetry = function (event, itemCtx) {\r\n                _self.processNext(event, itemCtx);\r\n            };\r\n            _self._doTeardown = function (unloadCtx, unloadState, asyncCallback) {\r\n                if (isFunction(_unlisten)) {\r\n                    _unlisten();\r\n                }\r\n                if (_pageViewTimer) {\r\n                    clearTimeout(_pageViewTimer);\r\n                }\r\n                _initDefaults();\r\n            };\r\n            // Proxy the analytics functions\r\n            proxyFunctions(_self, _getAnalytics, [\r\n                \"trackMetric\",\r\n                \"trackPageView\",\r\n                \"trackEvent\",\r\n                \"trackException\",\r\n                \"trackTrace\",\r\n            ]);\r\n            function _initDefaults() {\r\n                _analyticsPlugin = null;\r\n                _extensionConfig = null;\r\n                _unlisten = null;\r\n                _pageViewTimer = null;\r\n                _pageViewTracked = false;\r\n                properties = null;\r\n            }\r\n            function _getAnalytics() {\r\n                if (!_analyticsPlugin) {\r\n                    _throwInternal(_self.diagLog(), 1 /* eLoggingSeverity.CRITICAL */, 64 /* _eInternalMessageId.TelemetryInitializerFailed */, \"Analytics plugin is not available, React plugin telemetry will not be sent: \");\r\n                }\r\n                return _analyticsPlugin;\r\n            }\r\n            function _addHistoryListener(history) {\r\n                var locationListener = function (arg) {\r\n                    // v4 of the history API passes \"location\" as the first argument, while v5 passes an object that contains location and action \r\n                    var locn = null;\r\n                    if (\"location\" in arg) {\r\n                        // Looks like v5\r\n                        locn = arg[\"location\"];\r\n                    }\r\n                    else {\r\n                        locn = arg;\r\n                    }\r\n                    // Timeout to ensure any changes to the DOM made by route changes get included in pageView telemetry\r\n                    _pageViewTimer = setTimeout(function () {\r\n                        _pageViewTimer = null;\r\n                        var pageViewTelemetry = { uri: locn.pathname };\r\n                        _self.trackPageView(pageViewTelemetry);\r\n                    }, 500);\r\n                };\r\n                _unlisten = history.listen(locationListener);\r\n            }\r\n            objDefineAccessors(_self, \"_extensionConfig\", function () { return _extensionConfig; });\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for ReactPlugin.prototype.initialize.\r\n// Removed Stub for ReactPlugin.prototype.getCookieMgr.\r\n// Removed Stub for ReactPlugin.prototype.getAppInsights.\r\n// Removed Stub for ReactPlugin.prototype.processTelemetry.\r\n// Removed Stub for ReactPlugin.prototype.trackMetric.\r\n// Removed Stub for ReactPlugin.prototype.trackPageView.\r\n// Removed Stub for ReactPlugin.prototype.trackEvent.\r\n// Removed Stub for ReactPlugin.prototype.trackException.\r\n// Removed Stub for ReactPlugin.prototype.trackTrace.\r\n    // This is a workaround for an IE8 bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    // this will be removed when ES3 support is dropped.\n    ReactPlugin.__ieDyn=1;\n\n    return ReactPlugin;\r\n}(BaseTelemetryPlugin));\r\nexport default ReactPlugin;\r\n//# sourceMappingURL=ReactPlugin.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n// Licensed under the\r\nexport { correlationIdSetPrefix, correlationIdGetPrefix, correlationIdCanIncludeCorrelationHeader, correlationIdGetCorrelationContext, correlationIdGetCorrelationContextValue, dateTimeUtilsNow, dateTimeUtilsDuration, isInternalApplicationInsightsEndpoint, createDistributedTraceContextFromTrace } from \"./Util\";\r\nexport { ThrottleMgr } from \"./ThrottleMgr\";\r\nexport { parseConnectionString, ConnectionStringParser } from \"./ConnectionStringParser\";\r\nexport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nexport { DisabledPropertyName, ProcessLegacy, SampleRate, HttpMethod, DEFAULT_BREEZE_ENDPOINT, DEFAULT_BREEZE_PATH, strNotSpecified } from \"./Constants\";\r\nexport { Envelope } from \"./Telemetry/Common/Envelope\";\r\nexport { Event } from \"./Telemetry/Event\";\r\nexport { Exception } from \"./Telemetry/Exception\";\r\nexport { Metric } from \"./Telemetry/Metric\";\r\nexport { PageView } from \"./Telemetry/PageView\";\r\nexport { RemoteDependencyData } from \"./Telemetry/RemoteDependencyData\";\r\nexport { Trace } from \"./Telemetry/Trace\";\r\nexport { PageViewPerformance } from \"./Telemetry/PageViewPerformance\";\r\nexport { Data } from \"./Telemetry/Common/Data\";\r\nexport { SeverityLevel } from \"./Interfaces/Contracts/SeverityLevel\";\r\nexport { ConfigurationManager } from \"./Interfaces/IConfig\";\r\nexport { ContextTagKeys } from \"./Interfaces/Contracts/ContextTagKeys\";\r\nexport { dataSanitizeKeyAndAddUniqueness, dataSanitizeKey, dataSanitizeString, dataSanitizeUrl, dataSanitizeMessage, dataSanitizeException, dataSanitizeProperties, dataSanitizeMeasurements, dataSanitizeId, dataSanitizeInput, dsPadNumber } from \"./Telemetry/Common/DataSanitizer\";\r\nexport { TelemetryItemCreator, createTelemetryItem } from \"./TelemetryItemCreator\";\r\nexport { CtxTagKeys, Extensions } from \"./Interfaces/PartAExtensions\";\r\nexport { DistributedTracingModes, EventPersistence } from \"./Enums\";\r\nexport { stringToBoolOrDefault, msToTimeSpan, getExtensionByName, isCrossOriginError } from \"./HelperFuncs\";\r\nexport { isBeaconsSupported as isBeaconApiSupported, createTraceParent, parseTraceParent, isValidTraceId, isValidSpanId, isValidTraceParent, isSampledFlag, formatTraceParent, findW3cTraceParent, findAllScripts } from \"@microsoft/applicationinsights-core-js\";\r\nexport { createDomEvent } from \"./DomHelperFuncs\";\r\nexport { utlDisableStorage, utlEnableStorage, utlCanUseLocalStorage, utlGetLocalStorage, utlSetLocalStorage, utlRemoveStorage, utlCanUseSessionStorage, utlGetSessionStorageKeys, utlGetSessionStorage, utlSetSessionStorage, utlRemoveSessionStorage, utlSetStoragePrefix } from \"./StorageHelperFuncs\";\r\nexport { urlParseUrl, urlGetAbsoluteUrl, urlGetPathName, urlGetCompleteUrl, urlParseHost, urlParseFullHost } from \"./UrlHelperFuncs\";\r\nexport { createOfflineListener } from \"./Offline\";\r\nexport var PropertiesPluginIdentifier = \"AppInsightsPropertiesPlugin\";\r\nexport var BreezeChannelIdentifier = \"AppInsightsChannelPlugin\";\r\nexport var AnalyticsPluginIdentifier = \"ApplicationInsightsAnalytics\";\r\n//# sourceMappingURL=applicationinsights-common.js.map","/*\n * Application Insights JavaScript SDK - React Plugin, 19.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { __assignFn as __assign, __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport { dateNow } from '@microsoft/applicationinsights-core-js';\r\nimport * as React from 'react';\r\n/**\r\n * Higher-order component base class to hook Application Insights tracking\r\n * in a React component's lifecycle.\r\n */\r\nvar AITrackedComponentBase = /** @class */ (function (_super) {\r\n    __extends(AITrackedComponentBase, _super);\r\n    function AITrackedComponentBase(props, reactPlugin, componentName) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this._mountTimestamp = 0;\r\n        _this._firstActiveTimestamp = 0;\r\n        _this._idleStartTimestamp = 0;\r\n        _this._lastActiveTimestamp = 0;\r\n        _this._totalIdleTime = 0;\r\n        _this._idleCount = 0;\r\n        _this._idleTimeout = 5000;\r\n        _this.trackActivity = function (e) {\r\n            if (_this._firstActiveTimestamp === 0) {\r\n                _this._firstActiveTimestamp = dateNow();\r\n                _this._lastActiveTimestamp = _this._firstActiveTimestamp;\r\n            }\r\n            else {\r\n                _this._lastActiveTimestamp = dateNow();\r\n            }\r\n            if (_this._idleStartTimestamp > 0) {\r\n                var lastIdleTime = _this._lastActiveTimestamp - _this._idleStartTimestamp;\r\n                _this._totalIdleTime += lastIdleTime;\r\n                _this._idleStartTimestamp = 0;\r\n            }\r\n        };\r\n        _this._reactPlugin = reactPlugin;\r\n        _this._componentName = componentName;\r\n        return _this;\r\n    }\r\n    AITrackedComponentBase.prototype.componentDidMount = function () {\r\n        var _this = this;\r\n        this._mountTimestamp = dateNow();\r\n        this._firstActiveTimestamp = 0;\r\n        this._totalIdleTime = 0;\r\n        this._lastActiveTimestamp = 0;\r\n        this._idleStartTimestamp = 0;\r\n        this._idleCount = 0;\r\n        this._intervalId = setInterval(function () {\r\n            if (_this._lastActiveTimestamp > 0 && _this._idleStartTimestamp === 0 && dateNow() - _this._lastActiveTimestamp >= _this._idleTimeout) {\r\n                _this._idleStartTimestamp = dateNow();\r\n                _this._idleCount++;\r\n            }\r\n        }, 100);\r\n    };\r\n    AITrackedComponentBase.prototype.componentWillUnmount = function () {\r\n        if (this._mountTimestamp === 0) {\r\n            throw new Error('withAITracking:componentWillUnmount: mountTimestamp is not initialized.');\r\n        }\r\n        if (this._intervalId) {\r\n            clearInterval(this._intervalId);\r\n        }\r\n        if (this._firstActiveTimestamp === 0) {\r\n            return;\r\n        }\r\n        var engagementTime = this.getEngagementTimeSeconds();\r\n        var metricData = {\r\n            average: engagementTime,\r\n            name: 'React Component Engaged Time (seconds)',\r\n            sampleCount: 1\r\n        };\r\n        var additionalProperties = { 'Component Name': this._componentName };\r\n        this._reactPlugin.trackMetric(metricData, additionalProperties);\r\n    };\r\n    AITrackedComponentBase.prototype.getEngagementTimeSeconds = function () {\r\n        return (dateNow() - this._firstActiveTimestamp - this._totalIdleTime - this._idleCount * this._idleTimeout) / 1000;\r\n    };\r\n    return AITrackedComponentBase;\r\n}(React.Component));\r\nexport { AITrackedComponentBase };\r\n/**\r\n * Higher-order component function to hook Application Insights tracking\r\n * in a React component's lifecycle.\r\n *\r\n * @param reactPlugin ReactPlugin instance\r\n * @param Component the React component to be instrumented\r\n * @param componentName (optional) component name\r\n * @param className (optional) className of the HOC div\r\n */\r\nexport default function withAITracking(reactPlugin, Component, componentName, className) {\r\n    if (componentName === undefined || componentName === null || typeof componentName !== 'string') {\r\n        componentName = Component.prototype &&\r\n            Component.prototype.constructor &&\r\n            Component.prototype.constructor.name ||\r\n            'Unknown';\r\n    }\r\n    if (className === undefined || className === null || typeof className !== 'string') {\r\n        className = '';\r\n    }\r\n    return /** @class */ (function (_super) {\r\n        __extends(class_1, _super);\r\n        function class_1(props) {\r\n            return _super.call(this, props, reactPlugin, componentName) || this;\r\n        }\r\n        class_1.prototype.render = function () {\r\n            return (React.createElement(\"div\", { onKeyDown: this.trackActivity, onMouseMove: this.trackActivity, onScroll: this.trackActivity, onMouseDown: this.trackActivity, onTouchStart: this.trackActivity, onTouchMove: this.trackActivity, className: className },\r\n                React.createElement(Component, __assign({}, this.props))));\r\n        };\r\n        return class_1;\r\n    }(AITrackedComponentBase));\r\n}\r\n//# sourceMappingURL=withAITracking.js.map","/*\n * Application Insights JavaScript SDK - React Plugin, 19.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport React from \"react\";\r\nimport { SeverityLevel } from \"@microsoft/applicationinsights-common\";\r\nvar AppInsightsErrorBoundary = /** @class */ (function (_super) {\r\n    __extends(AppInsightsErrorBoundary, _super);\r\n    function AppInsightsErrorBoundary() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.state = { hasError: false };\r\n        return _this;\r\n    }\r\n    AppInsightsErrorBoundary.prototype.componentDidCatch = function (error, errorInfo) {\r\n        this.setState({ hasError: true });\r\n        this.props.appInsights.trackException({\r\n            error: error,\r\n            exception: error,\r\n            severityLevel: SeverityLevel.Error,\r\n            properties: errorInfo\r\n        });\r\n    };\r\n    AppInsightsErrorBoundary.prototype.render = function () {\r\n        if (this.state.hasError) {\r\n            var onError = this.props.onError;\r\n            return React.createElement(onError);\r\n        }\r\n        return this.props.children;\r\n    };\r\n    return AppInsightsErrorBoundary;\r\n}(React.Component));\r\nexport default AppInsightsErrorBoundary;\r\n//# sourceMappingURL=AppInsightsErrorBoundary.js.map","/*\n * Application Insights JavaScript SDK - React Plugin, 19.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { createContext, useContext } from \"react\";\r\nvar AppInsightsContext = createContext(undefined);\r\nvar useAppInsightsContext = function () { return useContext(AppInsightsContext); };\r\nexport { AppInsightsContext, useAppInsightsContext };\r\n//# sourceMappingURL=AppInsightsContext.js.map","/*\n * Application Insights JavaScript SDK - React Plugin, 19.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { useEffect, useRef, useState } from \"react\";\r\nexport default function useCustomEvent(reactPlugin, eventName, eventData, skipFirstRun) {\r\n    if (skipFirstRun === void 0) { skipFirstRun = true; }\r\n    var _a = useState(eventData), data = _a[0], setData = _a[1];\r\n    var firstRun = useRef(skipFirstRun);\r\n    var savedSkipFirstRun = useRef(skipFirstRun);\r\n    useEffect(function () {\r\n        if (firstRun.current) {\r\n            firstRun.current = false;\r\n            return;\r\n        }\r\n        reactPlugin.trackEvent({ name: eventName }, data);\r\n    }, [reactPlugin, data, eventName]);\r\n    useEffect(function () {\r\n        return function () {\r\n            firstRun.current = savedSkipFirstRun.current;\r\n        };\r\n    }, []);\r\n    return setData;\r\n}\r\n//# sourceMappingURL=useTrackEvent.js.map","/*\n * Application Insights JavaScript SDK - React Plugin, 19.3.6\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { __assignFn as __assign } from \"@microsoft/applicationinsights-shims\";\r\nimport { dateNow } from \"@microsoft/applicationinsights-core-js\";\r\nimport { useEffect, useRef } from \"react\";\r\nfunction getEngagementTimeSeconds(trackedData) {\r\n    return ((dateNow() -\r\n        trackedData.firstActiveTimestamp -\r\n        trackedData.totalIdleTime -\r\n        trackedData.idleCount * trackedData.idleTimeout) /\r\n        1000);\r\n}\r\nvar useComponentTracking = function (reactPlugin, componentName, customProperties) {\r\n    var tracking = useRef({\r\n        hookTimestamp: dateNow(),\r\n        firstActiveTimestamp: 0,\r\n        totalIdleTime: 0,\r\n        lastActiveTimestamp: 0,\r\n        idleStartTimestamp: 0,\r\n        idleCount: 0,\r\n        idleTimeout: 5000\r\n    });\r\n    var savedCallback = useRef(null);\r\n    var callback = function () {\r\n        var trackedData = tracking.current;\r\n        if (trackedData.lastActiveTimestamp > 0 &&\r\n            trackedData.idleStartTimestamp === 0 &&\r\n            dateNow() - trackedData.lastActiveTimestamp >= trackedData.idleTimeout) {\r\n            trackedData.idleStartTimestamp = dateNow();\r\n            trackedData.idleCount++;\r\n        }\r\n    };\r\n    var delay = 100;\r\n    savedCallback.current = callback;\r\n    // Set up the interval.\r\n    useEffect(function () {\r\n        var id = setInterval(savedCallback.current, delay);\r\n        return function () {\r\n            clearInterval(id);\r\n            var trackedData = tracking.current;\r\n            if (trackedData.hookTimestamp === 0) {\r\n                throw new Error(\"useAppInsights:unload hook: hookTimestamp is not initialized.\");\r\n            }\r\n            if (trackedData.firstActiveTimestamp === 0) {\r\n                return;\r\n            }\r\n            var engagementTime = getEngagementTimeSeconds(trackedData);\r\n            var metricData = {\r\n                average: engagementTime,\r\n                name: \"React Component Engaged Time (seconds)\",\r\n                sampleCount: 1\r\n            };\r\n            var additionalProperties = __assign({ \"Component Name\": componentName }, customProperties);\r\n            reactPlugin.trackMetric(metricData, additionalProperties);\r\n        };\r\n    }, []);\r\n    var trackActivity = function () {\r\n        var trackedData = tracking.current;\r\n        if (trackedData.firstActiveTimestamp === 0) {\r\n            trackedData.firstActiveTimestamp = dateNow();\r\n            trackedData.lastActiveTimestamp = trackedData.firstActiveTimestamp;\r\n        }\r\n        else {\r\n            trackedData.lastActiveTimestamp = dateNow();\r\n        }\r\n        if (trackedData.idleStartTimestamp > 0) {\r\n            var lastIdleTime = trackedData.lastActiveTimestamp - trackedData.idleStartTimestamp;\r\n            trackedData.totalIdleTime += lastIdleTime;\r\n            trackedData.idleStartTimestamp = 0;\r\n        }\r\n    };\r\n    return trackActivity;\r\n};\r\nexport default useComponentTracking;\r\n//# sourceMappingURL=useTrackMetric.js.map"],"names":["strShimObject","strShimUndefined","strShimPrototype","ObjClass","Object","ObjProto","_pureAssign","func1","func2","UNDEF_VALUE","undefined","NULL_VALUE","EMPTY","FUNCTION","OBJECT","PROTOTYPE","__PROTO__","UNDEFINED","CONSTRUCTOR","SYMBOL","LENGTH","NAME","CALL","TO_STRING","StrCls","String","StrProto","MathCls","Math","ArrCls","Array","ArrProto","ArrSlice","NumberCls","Number","POLYFILL_TAG","POLYFILL_TYPE_NAME","safe","func","argArray","v","apply","this","e","_createIs","theType","value","_createObjIs","theName","call","isUndefined","isNullOrUndefined","isStrictNullOrUndefined","isDefined","arg","isString","isFunction","isObject","isArray","isNumber","isRegExp","isError","isTruthy","defValue","result","asString","ERROR_TYPE","dumpObj","object","format","propertyValueDump","objType","stack","message","name","JSON","stringify","replace","throwTypeError","TypeError","throwRangeError","RangeError","_throwIfNullOrUndefined","obj","_throwIfNotString","objGetOwnPropertyDescriptor","objHasOwnProperty","prop","hasOwnProperty","polyObjHasOwn","objHasOwn","objForEachKey","theObject","callbackfn","thisArg","arrForEach","theArray","len","idx","_unwrapFunction","_unwrapFunctionWithPoly","funcName","clsProto","polyFunc","clsFn","theArgs","theFunc","arguments","propKey","desc","fn","getOwnPropertyDescriptor","key","enumerable","propMap","c","w","g","s","_createProp","l","get","set","newValue","objDefineProp","objDefineProperties","objDefine","target","propDesc","_createKeyValueMap","values","keyType","valueType","completeFn","theMap","_assignMapValue","writable","_returnFalse","objIsFrozen","_objFreeze","_doNothing","objAssign","objKeys","objFreeze","objGetPrototypeOf","push","value1","value2","_globalCfg","_wellKnownSymbolMap","asyncIterator","hasInstance","isConcatSpreadable","iterator","match","matchAll","search","species","split","toPrimitive","toStringTag","unscopables","GLOBAL_CONFIG_KEY","_getGlobalValue","globalThis","self","window","global","_getGlobalConfig","gbl","mathMax","strSlice","strSubstring","strLeft","count","start","length","_globalLazyTestHooks","objCreate","properties","tempFunc","newObj","type","utcNow","Date","now","polyUtcNow","getTime","_initTestHooks","getLazy","cb","lazyValue","b","lzy","configurable","_polySymbols","_wellKnownSymbolCache","mathRandom","_uniqueInstanceId","toString","slice","substring","POLY_SYM","_polyId","polyNewSymbol","description","uniqueId","symString","_setProp","theSymbol","createCachedValue","toJSON","_cachedGlobal","WINDOW","_getGlobalInstFn","getFn","cachedValue","getGlobal","useCached","getInst","_symbol","_symbolFor","_iterSymbol$1","getDocument","getWindow","getNavigator","_initSymbol","_getSymbolKey","gblSym","getKnownSymbol","noPoly","knownName","sym","newSymbol","symbolFor","gblCfg","k","newSymbol_1","regId_1","registry","isIterator","next","isIterable","iterForOf","iter","err","iterResult","done","failed","throw","return","fnApply","_isProtoArray","arrIndexOf","arrMap","polyArrFindIndex","callbackFn","index","polyArrFindLastIndex","theValue","mapFn","result_1","arrSlice","cnt","searchElement","fromIndex","objSetPrototypeOf","proto","_a","_setName","baseClass","_createTrimFn","exp","polyStrTrim","polyStrTrimStart","polyStrTrimEnd","strTrim","mathFloor","mathCeil","mathTrunc","mathToInt","throwInfinity","Infinity","_fnToString","_objCtrFnString","_gblWindow","strRepeat","pad","_padValue","targetLength","padString","isPlainObject","Function","ex","splitter","limit","splitFn","isNaN","isFinite","recursionCheckOwnDescriptors","recursionCheckOwnSymbols","objGetOwnPropertyNames","strEndsWith","propName","descriptor","hasOwn","symEnum","polyObjGetOwnPropertySymbols","entries","addEntry","entry","searchString","searchValue","end","strIndexOf","UNREF","position","pos","strHasOwnProperty","__assignFn","t","i","n","p","extendStaticsFn","d","__proto__","__extendsFn","__","constructor","Constructor","Prototype","strFunction","DynInstFuncTable","DynProxyTag","DynClassName","DynInstChkTag","DynAllowInstChkTag","DynProtoDefaultOptions","UnknownValue","str__Proto","DynProtoBaseProto","DynProtoGlobalSettings","DynProtoCurrent","strUseBaseInst","strSetInstFuncs","Obj","_objGetPrototypeOf","_objGetOwnProps","_gbl","_gblInst","o","_isObjectOrArrayPrototype","_isObjectArrayOrFunctionPrototype","_getObjProto","curProto","newProto","_forEachProp","props","name_1","lp","_isDynamicCandidate","skipOwn","_throwTypeError","_hasVisited","_getObjName","unknownValue","dynamicProto","theClass","delegateFunc","options","thisTarget","instFuncs","baseInstFuncs","instFuncs_1","classProto","className","visited","thisProto","_checkPrototype","perfOptions","useBaseInst","setInstanceFunc","_instFuncProxy","funcHost","instFuncTable","baseFuncs","baseProto","_getBaseFuncs","dynProtoProxy","protoFunc","currentDynProtoProxy","instFunc","canAddInst","objProto","_getInstFunc","aggregationErrorType","_DYN_TO_LOWER_CASE","_DYN_LENGTH","_DYN_WARN_TO_CONSOLE","_DYN_THROW_INTERNAL","_DYN_WATCH","_DYN_APPLY","_DYN_PUSH","_DYN_SPLICE","_DYN_LOGGER","_DYN_IDENTIFIER","_DYN_IS_INITIALIZED","_DYN_GET_PLUGIN","_DYN_PROCESS_NEXT","_DYN_ENABLED","_DYN_CREATE_NEW","_DYN_TEARDOWN","_DYN_MESSAGE_ID","_DYN_MESSAGE","_DYN_DIAG_LOG","_DYN__DO_TEARDOWN","_DYN_UPDATE","_DYN_GET_NEXT","_DYN_SET_NEXT_PLUGIN","_DYN_USER_AGENT","_DYN_SPLIT","_DYN_REPLACE","_DYN_IS_CHILD_EVT","_DYN_GET_CTX","_DYN_SET_CTX","UNDEFINED_VALUE","STR_EMPTY","STR_CORE","STR_DISABLED","STR_EXTENSION_CONFIG","STR_PROCESS_TELEMETRY","STR_PRIORITY","STR_GET_PERF_MGR","STR_DOMAIN","STR_PATH","STR_NOT_DYNAMIC_ERROR","rCamelCase","rNormalizeInvalid","rLeadingNumeric","isNotNullOrUndefined","normalizeJsName","_all","letter","toUpperCase","strContains","setValue","field","valChk","srcChk","proxyFunctionAs","source","overwriteTarget","srcFunc","src","originalArguments","strLocation","strConsole","strJSON","strMsie","strTrident","_isTrident","_navUserAgentCheck","hasJSON","isIE","nav","userAgent","UInt32Mask","MaxUInt32","SEED1","SEED2","_mwcSeeded","_mwcW","_mwcZ","random32","signed","seedValue","getRandomValues","Uint32Array","random","instanceName","maxLength","number","chars","base64chars","newId","_dataUid","_canAcceptData","nodeType","createUniqueNamespace","includeVersion","_isConfigDefaults","isVal","fb","_getDefault","dynamicHandler","theConfig","cfgDefaults","isDefaultValid","dfVal","fallbacks","fallback","fbValue","cfg","_applyDefaultValue","defaultValue","isValid","setFn","mergeDf","reference","readOnly","rdOnly","blkDynamicValue","blkVal","mrg","ref","usingDefault","cfgValue","_resolveDefaultValue","newValue_1","dfName","dfValue","CFG_HANDLER_LINK","BLOCK_DYNAMIC","FORCE_DYNAMIC","_canMakeDynamic","getFunc","state","throwInvalidAccess","arrayMethodsToPatch","_throwDynamicError","logger","concat","_getOwnPropGetter","_createDynamicProperty","detail","h","trk","handler","clr","checkDynamic","isObjectOrArray","_getProperty","_makeDynamicObject","activeHandler","act","chng","add","ro","upd","newIsObjectOrArray","isReferenced","rf","_setDynamicProperty","hdlr","getter","valueState","_setDynamicPropertyState","flags","isDynamic","inPlace","blkProp","blockDynamicConversion","method","orgMethod","args","_i","symPrefix","symPostfix","_createState","cfgHandler","theState","dynamicPropertySymbol","uid","dynamicPropertyReadOnly","dynamicPropertyReferenced","dynamicPropertyBlockValue","dynamicPropertyDetail","_waitingHandlers","_watcherTimer","_useHandler","callback","prevWatcher","bind","setDf","_notifyWatchers","theMessage","notifyHandlers","watcherFailures_1","sourceErrors","orgName","theBaseClass","Error","captureFn","captureStackTrace","_this","orgProto","_self","constructCb","errors","srcError","createCustomError","overrideFn","isArr","setTimeout","clearFn","clearTimeout","timerFn","dn","cancelFn","timerId","refreshFn","refresh","theTimerHandler","cancel","_cancel","_refresh","hasRef","_unref","scheduleTimeout","notify","use","details","_createDynamicHandler","getDynamicConfigHandler","newTarget","_cfgDeepCopy","target_1","defaultValues","watch","configHandler","rm","_block","allowUpdate","prevUpd","createDynamicConfig","config","defaultConfig","onConfigChange","_aiNamespace","STR_WARN_TO_CONSOLE","loggingLevelConsole","loggingLevelTelemetry","maxMessageLimit","enableDebug","_logFuncs","_sanitizeDiagnosticText","text","_logToConsole","logFunc","theConsole","console","_InternalLogMessage","dataType","msgId","msg","isUserAct","strProps","diagnosticText","safeGetLogger","core","DiagnosticLogger","__ieDyn","identifier","queue","_loggingLevelConsole","_loggingLevelTelemetry","_maxInternalMessageLimit","_enableDebug","_unloadHandler","_messageCount","_messageLogged","_logInternalMessage","severity","throttleLimitMessage","throttleMessage","logMessage","messageKey","_debugExtMsg","errorToConsole","data","ns","dbgExt","disableDbgExt","consoleLoggingLevel","debugToConsole","resetInternalMessageCount","logInternalMessage","isAsync","_throwInternal","_doc","strToGMTString","strToUTCString","strCookie","strExpires","strIsCookieUseDisabled","strDisableCookiesUsage","strConfigCookieMgr","_supportsCookies","_allowUaSameSite","_parsedCookieValue","_cookieCache","_globalCookieConfig","rootDefaultConfig","cookieCfg","_b","path","enabled","ignoreCookies","blockedCookies","cookieDomain","cookiePath","_getDoc","_isMgrEnabled","cookieMgr","isEnabled","_isIgnoredCookie","cookieMgrCfg","_isCfgEnabled","rootConfig","cookieMgrConfig","cookieEnabled","isCfgEnabled","createCookieMgr","_path","_domain","_enabled","_getCookieFn","_setCookieFn","_delCookieFn","unloadHandler","getCookie","_getCookieValue","setCookie","_setCookieValue","delCookie","areCookiesSupported","gblManager","setEnabled","maxAgeSec","domain","location_1","_extractParts","_isIE","expireMs","expiry","setTime","_formatDate","location","protocol","_formatCookieValue","del","purge","unload","doc","exception","thePart","theDate","cookieValue","theCookie","strParentContextKey","strChildrenContextKey","PerfEvent","ParentContextKey","ChildrenContextKey","payloadDetails","theDetails_1","complete","childTime","childEvts","childEvt","time","exTime","doPerfActiveKey","doPerf","mgrSource","getSource","perfMgr","children","perfEvt","currentActive","create","fire","pluginStateData","id","accept","addDefault","theCache","_getCache","kill","_getPluginState","plugin","strTelemetryPluginChain","strHasRunFlags","strGetTelCtx","_chainId","_createInternalContext","telemetryChain","startAt","_nextProxy","_onComplete","context","proxy","createTelemetryProxyChain","_getNextProxyStart","_next","onComplete","nextProxy","completeDetails","ctx","diagLog","getCfg","getExtCfg","newConfig","_getExtCfg","getConfig","extConfig","hasNext","getNext","setNext","nextPlugin","iterate","that","createIfMissing","extCfg","idCfg","createProcessTelemetryContext","internalContext","env","plugins","lastProxy_1","firstProxy","thePlugin","newProxy","createTelemetryPluginProxy","_setNext","hasProcessTelemetry","hasSetNext","chainId","proxyChain","getPlugin","processTelemetry","itemCtx","_processChain","pluginState","item","unloadCtx","unloadState","pluginCore","hasRun","update","updateCtx","updateState","_id","processPluginFn","hasRunContext","nextId","error","hasNextRun","createUnloadHandlerContainer","handlers","run","createUnloadHookContainer","_hooks","oldHooks","remove","hooks","elms","elm","strGetPlugin","BaseTelemetryPlugin","_isinitialized","_rootCtx","_nextPlugin","_unloadHandlerContainer","_hookContainer","_getTelCtx","currentCtx","rootCtx","_setDefaults","pluginChain","_initDefaults","extensions","unloadDone","theUnloadCtx","theUnloadState","createProcessTelemetryUnloadContext","reason","_unloadCallback","updateDone","theUpdateCtx","createProcessTelemetryUpdateContext","_doUpdate","_updateCallback","setInitialized","isInitialized","_super","SeverityLevel","Verbose","Information","Warning","Critical","defaultReactExtensionConfig","history","_deepFreeze","val","_key","propValue","ReactPlugin","_analyticsPlugin","_extensionConfig","_unlisten","_pageViewTimer","_pageViewTracked","priority","_base","functionsToProxy","_getAnalytics","initialize","prototype","_addHook","listen","locn","pageViewTelemetry","uri","pathname","trackPageView","getCookieMgr","inst","getAppInsights","event","processNext","_doTeardown","asyncCallback","theFuncName","__extends","ReactPlugin$1","AITrackedComponentBase","React","Component","componentDidMount","_mountTimestamp","dateNow","_firstActiveTimestamp","_totalIdleTime","_lastActiveTimestamp","_idleStartTimestamp","_idleCount","_intervalId","setInterval","_idleTimeout","componentWillUnmount","engagementTime","additionalProperties","clearInterval","getEngagementTimeSeconds","Component Name","_componentName","_reactPlugin","trackMetric","average","sampleCount","reactPlugin","componentName","trackActivity","lastIdleTime","AppInsightsErrorBoundary","hasError","componentDidCatch","errorInfo","setState","appInsights","trackException","severityLevel","render","onError","createElement","AppInsightsErrorBoundary$1","AppInsightsContext","createContext","useContext","eventName","eventData","skipFirstRun","useState","setData","firstRun","useRef","savedSkipFirstRun","useEffect","current","trackEvent","customProperties","tracking","hookTimestamp","firstActiveTimestamp","totalIdleTime","lastActiveTimestamp","idleStartTimestamp","idleCount","idleTimeout","savedCallback","trackedData","metricData","__assign","class_1","onKeyDown","onMouseMove","onScroll","onMouseDown","onTouchStart","onTouchMove"],"mappings":"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"}